version: '3.8'
services:
  mysql:
    image: mysql:latest
    volumes:
      - /var/lib/mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "123456"
    cap_add:
      - SYS_NICE
    networks:
      - server

  config-server:
    build:
      context: ${CONFIG_SERVER}
      dockerfile: Dockerfile
    # 如果之前构建过镜像，再次docker compose则不会重新构建
    image: config-server:nzh
    ports:
      - "9090:9090"
    environment:
      TZ: Asia/Shanghai
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - server
    depends_on:
      - mysql

  config-server-ui:
    build:
      context: ${CONFIG_SERVER_UI}
      dockerfile: Dockerfile
    image: config-server-ui:nzh
    ports:
      - "8080:8080"
    environment:
      TZ: Asia/Shanghai
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - server

# 通过下面的服务启动ilogtail agent的docker版本，并与config-server成功通信，具体配置流程见readme
#  agent:
#    build:
#      context: ${AGENT}
#      dockerfile: Dockerfile-agent
#    image: ilogtail:nzh
#    environment:
#      CONFIG_SERVER_ADDRESSES: '["config-server:9090"]'
#      TZ: Asia/Shanghai
#    deploy:
#      replicas: 3
#    networks:
#      - server

#替换成你自己的网络
networks:
  server:

version: '3.8'
services:
  mysql:
    image: mysql:latest
    volumes:
      - /var/lib/mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "123456"
    cap_add:
      - SYS_NICE
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      retries: 5
      timeout: 5s
    networks:
      - server

  config-server:
    build:
      context: ${CONFIG_SERVER}
      dockerfile: Dockerfile
    # 如果之前构建过镜像，再次docker compose则不会重新构建
    image: config-server:nzh
    ports:
      - "9090:9090"
    environment:
      TZ: Asia/Shanghai
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - server
    depends_on:
      mysql:
        condition: service_healthy

  config-server-ui:
    build:
      context: ${CONFIG_SERVER_UI}
      dockerfile: Dockerfile
    image: config-server-ui:nzh
    ports:
      - "8080:8080"
    environment:
      TZ: Asia/Shanghai
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - server
  agent:
    build:
      context: ${AGENT}
      dockerfile: Dockerfile-Agent
    image: ilogtail:nzh
    environment:
      CONFIG_SERVER_ADDRESSES: '["host.docker.internal:9090"]'
      TZ: Asia/Shanghai
    extra_hosts:
      - "host.docker.internal:host-gateway"
    deploy:
      replicas: 3
    networks:
      - server

#替换成你自己的网络
networks:
  server:

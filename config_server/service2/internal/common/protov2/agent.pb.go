// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.5.0
// source: agent.proto

package protov2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigStatus int32

const (
	// The value of status field is not set.
	ConfigStatus_UNSET ConfigStatus = 0
	// Agent is currently applying the remote config that it received earlier.
	ConfigStatus_APPLYING ConfigStatus = 1
	// Remote config was successfully applied by the Agent.
	ConfigStatus_APPLIED ConfigStatus = 2
	// Agent tried to apply the config received earlier, but it failed.
	// See error_message for more details.
	ConfigStatus_FAILED ConfigStatus = 3
)

// Enum value maps for ConfigStatus.
var (
	ConfigStatus_name = map[int32]string{
		0: "UNSET",
		1: "APPLYING",
		2: "APPLIED",
		3: "FAILED",
	}
	ConfigStatus_value = map[string]int32{
		"UNSET":    0,
		"APPLYING": 1,
		"APPLIED":  2,
		"FAILED":   3,
	}
)

func (x ConfigStatus) Enum() *ConfigStatus {
	p := new(ConfigStatus)
	*p = x
	return p
}

func (x ConfigStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_proto_enumTypes[0].Descriptor()
}

func (ConfigStatus) Type() protoreflect.EnumType {
	return &file_agent_proto_enumTypes[0]
}

func (x ConfigStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigStatus.Descriptor instead.
func (ConfigStatus) EnumDescriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{0}
}

type AgentCapabilities int32

const (
	// The capabilities field is unspecified.
	AgentCapabilities_UnspecifiedAgentCapability AgentCapabilities = 0
	// The Agent can accept pipeline configuration from the Server.
	AgentCapabilities_AcceptsPipelineConfig AgentCapabilities = 1
	// The Agent can accept instance configuration from the Server.
	AgentCapabilities_AcceptsInstanceConfig AgentCapabilities = 2
	// The Agent can accept custom command from the Server.
	AgentCapabilities_AcceptsCustomCommand AgentCapabilities = 4
)

// Enum value maps for AgentCapabilities.
var (
	AgentCapabilities_name = map[int32]string{
		0: "UnspecifiedAgentCapability",
		1: "AcceptsPipelineConfig",
		2: "AcceptsInstanceConfig",
		4: "AcceptsCustomCommand",
	}
	AgentCapabilities_value = map[string]int32{
		"UnspecifiedAgentCapability": 0,
		"AcceptsPipelineConfig":      1,
		"AcceptsInstanceConfig":      2,
		"AcceptsCustomCommand":       4,
	}
)

func (x AgentCapabilities) Enum() *AgentCapabilities {
	p := new(AgentCapabilities)
	*p = x
	return p
}

func (x AgentCapabilities) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgentCapabilities) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_proto_enumTypes[1].Descriptor()
}

func (AgentCapabilities) Type() protoreflect.EnumType {
	return &file_agent_proto_enumTypes[1]
}

func (x AgentCapabilities) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgentCapabilities.Descriptor instead.
func (AgentCapabilities) EnumDescriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{1}
}

type RequestFlags int32

const (
	RequestFlags_RequestFlagsUnspecified RequestFlags = 0
	// Must be set if this request contains full state
	RequestFlags_FullState RequestFlags = 1 // bits before 2^16 (inclusive) are reserved for future official fields
)

// Enum value maps for RequestFlags.
var (
	RequestFlags_name = map[int32]string{
		0: "RequestFlagsUnspecified",
		1: "FullState",
	}
	RequestFlags_value = map[string]int32{
		"RequestFlagsUnspecified": 0,
		"FullState":               1,
	}
)

func (x RequestFlags) Enum() *RequestFlags {
	p := new(RequestFlags)
	*p = x
	return p
}

func (x RequestFlags) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestFlags) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_proto_enumTypes[2].Descriptor()
}

func (RequestFlags) Type() protoreflect.EnumType {
	return &file_agent_proto_enumTypes[2]
}

func (x RequestFlags) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestFlags.Descriptor instead.
func (RequestFlags) EnumDescriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{2}
}

type ServerCapabilities int32

const (
	// The capabilities field is unspecified.
	ServerCapabilities_UnspecifiedServerCapability ServerCapabilities = 0
	// The Server can remember agent attributes.
	ServerCapabilities_RembersAttribute ServerCapabilities = 1
	// The Server can remember pipeline config status.
	ServerCapabilities_RembersPipelineConfigStatus ServerCapabilities = 2
	// The Server can remember instance config status.
	ServerCapabilities_RembersInstanceConfigStatus ServerCapabilities = 4
	// The Server can remember custom command status.
	ServerCapabilities_RembersCustomCommandStatus ServerCapabilities = 8
)

// Enum value maps for ServerCapabilities.
var (
	ServerCapabilities_name = map[int32]string{
		0: "UnspecifiedServerCapability",
		1: "RembersAttribute",
		2: "RembersPipelineConfigStatus",
		4: "RembersInstanceConfigStatus",
		8: "RembersCustomCommandStatus",
	}
	ServerCapabilities_value = map[string]int32{
		"UnspecifiedServerCapability": 0,
		"RembersAttribute":            1,
		"RembersPipelineConfigStatus": 2,
		"RembersInstanceConfigStatus": 4,
		"RembersCustomCommandStatus":  8,
	}
)

func (x ServerCapabilities) Enum() *ServerCapabilities {
	p := new(ServerCapabilities)
	*p = x
	return p
}

func (x ServerCapabilities) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerCapabilities) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_proto_enumTypes[3].Descriptor()
}

func (ServerCapabilities) Type() protoreflect.EnumType {
	return &file_agent_proto_enumTypes[3]
}

func (x ServerCapabilities) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerCapabilities.Descriptor instead.
func (ServerCapabilities) EnumDescriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{3}
}

type ResponseFlags int32

const (
	ResponseFlags_ResponseFlagsUnspecified ResponseFlags = 0
	// ReportFullState flag can be used by the Server if the Client did not include
	// some sub-message in the last AgentToServer message (which is an allowed
	// optimization) but the Server detects that it does not have it (e.g. was
	// restarted and lost state).
	ResponseFlags_ReportFullState           ResponseFlags = 1
	ResponseFlags_FetchPipelineConfigDetail ResponseFlags = 2
	ResponseFlags_FetchInstanceConfigDetail ResponseFlags = 4 // bits before 2^16 (inclusive) are reserved for future official fields
)

// Enum value maps for ResponseFlags.
var (
	ResponseFlags_name = map[int32]string{
		0: "ResponseFlagsUnspecified",
		1: "ReportFullState",
		2: "FetchPipelineConfigDetail",
		4: "FetchInstanceConfigDetail",
	}
	ResponseFlags_value = map[string]int32{
		"ResponseFlagsUnspecified":  0,
		"ReportFullState":           1,
		"FetchPipelineConfigDetail": 2,
		"FetchInstanceConfigDetail": 4,
	}
)

func (x ResponseFlags) Enum() *ResponseFlags {
	p := new(ResponseFlags)
	*p = x
	return p
}

func (x ResponseFlags) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseFlags) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_proto_enumTypes[4].Descriptor()
}

func (ResponseFlags) Type() protoreflect.EnumType {
	return &file_agent_proto_enumTypes[4]
}

func (x ResponseFlags) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseFlags.Descriptor instead.
func (ResponseFlags) EnumDescriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{4}
}

type AgentGroupTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *AgentGroupTag) Reset() {
	*x = AgentGroupTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentGroupTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentGroupTag) ProtoMessage() {}

func (x *AgentGroupTag) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentGroupTag.ProtoReflect.Descriptor instead.
func (*AgentGroupTag) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{0}
}

func (x *AgentGroupTag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AgentGroupTag) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Define the Config information carried in the request
type ConfigInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                               // Required, Config's unique identification
	Version int64        `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`                                        // Required, Config's version number or hash code
	Status  ConfigStatus `protobuf:"varint,3,opt,name=status,proto3,enum=config_server.proto.v2.ConfigStatus" json:"status,omitempty"` // Config's status
	Message string       `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`                                         // Optional error message
}

func (x *ConfigInfo) Reset() {
	*x = ConfigInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigInfo) ProtoMessage() {}

func (x *ConfigInfo) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigInfo.ProtoReflect.Descriptor instead.
func (*ConfigInfo) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigInfo) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ConfigInfo) GetStatus() ConfigStatus {
	if x != nil {
		return x.Status
	}
	return ConfigStatus_UNSET
}

func (x *ConfigInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Define the Command information carried in the request
type CommandInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string       `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`                                               // Command's type
	Name    string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                               // Required, Command's unique identification
	Status  ConfigStatus `protobuf:"varint,3,opt,name=status,proto3,enum=config_server.proto.v2.ConfigStatus" json:"status,omitempty"` // Command's status
	Message string       `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`                                         // Optional error message
}

func (x *CommandInfo) Reset() {
	*x = CommandInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandInfo) ProtoMessage() {}

func (x *CommandInfo) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandInfo.ProtoReflect.Descriptor instead.
func (*CommandInfo) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{2}
}

func (x *CommandInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CommandInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CommandInfo) GetStatus() ConfigStatus {
	if x != nil {
		return x.Status
	}
	return ConfigStatus_UNSET
}

func (x *CommandInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Define Agent's basic attributes
type AgentAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version  []byte            `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`                                                                                         // Agent's version
	Ip       []byte            `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`                                                                                                   // Agent's ip
	Hostname []byte            `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`                                                                                       // Agent's hostname
	Extras   map[string][]byte `protobuf:"bytes,100,rep,name=extras,proto3" json:"extras,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Agent's other attributes
}

func (x *AgentAttributes) Reset() {
	*x = AgentAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentAttributes) ProtoMessage() {}

func (x *AgentAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentAttributes.ProtoReflect.Descriptor instead.
func (*AgentAttributes) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{3}
}

func (x *AgentAttributes) GetVersion() []byte {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *AgentAttributes) GetIp() []byte {
	if x != nil {
		return x.Ip
	}
	return nil
}

func (x *AgentAttributes) GetHostname() []byte {
	if x != nil {
		return x.Hostname
	}
	return nil
}

func (x *AgentAttributes) GetExtras() map[string][]byte {
	if x != nil {
		return x.Extras
	}
	return nil
}

// Agent sends requests to the ConfigServer to get config updates and receive commands.
type HeartbeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId       []byte           `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	SequenceNum     uint64           `protobuf:"varint,2,opt,name=sequence_num,json=sequenceNum,proto3" json:"sequence_num,omitempty"`             // Increment every request, for server to check sync status
	Capabilities    uint64           `protobuf:"varint,3,opt,name=capabilities,proto3" json:"capabilities,omitempty"`                              // Bitmask of flags defined by AgentCapabilities enum
	InstanceId      []byte           `protobuf:"bytes,4,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`                 // Required, Agent's unique identification, consistent throughout the process lifecycle
	AgentType       string           `protobuf:"bytes,5,opt,name=agent_type,json=agentType,proto3" json:"agent_type,omitempty"`                    // Required, Agent's type(ilogtail, ..)
	Attributes      *AgentAttributes `protobuf:"bytes,6,opt,name=attributes,proto3" json:"attributes,omitempty"`                                   // Agent's basic attributes
	Tags            []*AgentGroupTag `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`                                               // Agent's tags
	RunningStatus   string           `protobuf:"bytes,8,opt,name=running_status,json=runningStatus,proto3" json:"running_status,omitempty"`        // Human readable running status
	StartupTime     int64            `protobuf:"varint,9,opt,name=startup_time,json=startupTime,proto3" json:"startup_time,omitempty"`             // Required, Agent's startup time
	PipelineConfigs []*ConfigInfo    `protobuf:"bytes,10,rep,name=pipeline_configs,json=pipelineConfigs,proto3" json:"pipeline_configs,omitempty"` // Information about the current PIPELINE_CONFIG held by the Agent
	InstanceConfigs []*ConfigInfo    `protobuf:"bytes,11,rep,name=instance_configs,json=instanceConfigs,proto3" json:"instance_configs,omitempty"` // Information about the current AGENT_CONFIG held by the Agent
	CustomCommands  []*CommandInfo   `protobuf:"bytes,12,rep,name=custom_commands,json=customCommands,proto3" json:"custom_commands,omitempty"`    // Information about command history
	Flags           uint64           `protobuf:"varint,13,opt,name=flags,proto3" json:"flags,omitempty"`                                           // Predefined command flag
	Opaque          []byte           `protobuf:"bytes,14,opt,name=opaque,proto3" json:"opaque,omitempty"`                                          // Opaque data for extension
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{4}
}

func (x *HeartbeatRequest) GetRequestId() []byte {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *HeartbeatRequest) GetSequenceNum() uint64 {
	if x != nil {
		return x.SequenceNum
	}
	return 0
}

func (x *HeartbeatRequest) GetCapabilities() uint64 {
	if x != nil {
		return x.Capabilities
	}
	return 0
}

func (x *HeartbeatRequest) GetInstanceId() []byte {
	if x != nil {
		return x.InstanceId
	}
	return nil
}

func (x *HeartbeatRequest) GetAgentType() string {
	if x != nil {
		return x.AgentType
	}
	return ""
}

func (x *HeartbeatRequest) GetAttributes() *AgentAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *HeartbeatRequest) GetTags() []*AgentGroupTag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *HeartbeatRequest) GetRunningStatus() string {
	if x != nil {
		return x.RunningStatus
	}
	return ""
}

func (x *HeartbeatRequest) GetStartupTime() int64 {
	if x != nil {
		return x.StartupTime
	}
	return 0
}

func (x *HeartbeatRequest) GetPipelineConfigs() []*ConfigInfo {
	if x != nil {
		return x.PipelineConfigs
	}
	return nil
}

func (x *HeartbeatRequest) GetInstanceConfigs() []*ConfigInfo {
	if x != nil {
		return x.InstanceConfigs
	}
	return nil
}

func (x *HeartbeatRequest) GetCustomCommands() []*CommandInfo {
	if x != nil {
		return x.CustomCommands
	}
	return nil
}

func (x *HeartbeatRequest) GetFlags() uint64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *HeartbeatRequest) GetOpaque() []byte {
	if x != nil {
		return x.Opaque
	}
	return nil
}

// Define Config's detail
type ConfigDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`        // Required, Config's unique identification
	Version int64  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"` // Required, Config's version number or hash code
	Detail  []byte `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`    // Required, Config's detail
}

func (x *ConfigDetail) Reset() {
	*x = ConfigDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDetail) ProtoMessage() {}

func (x *ConfigDetail) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDetail.ProtoReflect.Descriptor instead.
func (*ConfigDetail) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigDetail) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ConfigDetail) GetDetail() []byte {
	if x != nil {
		return x.Detail
	}
	return nil
}

type CommandDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`                                // Required, Command type
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                // Required, Command name
	Detail     []byte `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`                            // Required, Command's detail
	ExpireTime int64  `protobuf:"varint,4,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"` // After which the command can be safely removed from history
}

func (x *CommandDetail) Reset() {
	*x = CommandDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandDetail) ProtoMessage() {}

func (x *CommandDetail) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandDetail.ProtoReflect.Descriptor instead.
func (*CommandDetail) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{6}
}

func (x *CommandDetail) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CommandDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CommandDetail) GetDetail() []byte {
	if x != nil {
		return x.Detail
	}
	return nil
}

func (x *CommandDetail) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

// ConfigServer's response to Agent's request
type HeartbeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId             []byte           `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	CommonResponse        *CommonResponse  `protobuf:"bytes,2,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`                                              // Set common response
	Capabilities          uint64           `protobuf:"varint,3,opt,name=capabilities,proto3" json:"capabilities,omitempty"`                                                 // Bitmask of flags defined by ServerCapabilities enum
	PipelineConfigUpdates []*ConfigDetail  `protobuf:"bytes,4,rep,name=pipeline_config_updates,json=pipelineConfigUpdates,proto3" json:"pipeline_config_updates,omitempty"` // Agent's pipeline config update status
	InstanceConfigUpdates []*ConfigDetail  `protobuf:"bytes,5,rep,name=instance_config_updates,json=instanceConfigUpdates,proto3" json:"instance_config_updates,omitempty"` // Agent's instance config update status
	CustomCommandUpdates  []*CommandDetail `protobuf:"bytes,6,rep,name=custom_command_updates,json=customCommandUpdates,proto3" json:"custom_command_updates,omitempty"`    // Agent's commands updates
	Flags                 uint64           `protobuf:"varint,7,opt,name=flags,proto3" json:"flags,omitempty"`                                                               // Predefined command flag
	Opaque                []byte           `protobuf:"bytes,8,opt,name=opaque,proto3" json:"opaque,omitempty"`                                                              // Opaque data for extension
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{7}
}

func (x *HeartbeatResponse) GetRequestId() []byte {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *HeartbeatResponse) GetCommonResponse() *CommonResponse {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

func (x *HeartbeatResponse) GetCapabilities() uint64 {
	if x != nil {
		return x.Capabilities
	}
	return 0
}

func (x *HeartbeatResponse) GetPipelineConfigUpdates() []*ConfigDetail {
	if x != nil {
		return x.PipelineConfigUpdates
	}
	return nil
}

func (x *HeartbeatResponse) GetInstanceConfigUpdates() []*ConfigDetail {
	if x != nil {
		return x.InstanceConfigUpdates
	}
	return nil
}

func (x *HeartbeatResponse) GetCustomCommandUpdates() []*CommandDetail {
	if x != nil {
		return x.CustomCommandUpdates
	}
	return nil
}

func (x *HeartbeatResponse) GetFlags() uint64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *HeartbeatResponse) GetOpaque() []byte {
	if x != nil {
		return x.Opaque
	}
	return nil
}

// API: /Agent/FetchPipelineConfig/
// API: /Agent/FetchInstanceConfig/
// Agent request to ConfigServer, pulling details of the config
type FetchConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId  []byte        `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	InstanceId []byte        `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"` // Agent's unique identification
	ReqConfigs []*ConfigInfo `protobuf:"bytes,3,rep,name=req_configs,json=reqConfigs,proto3" json:"req_configs,omitempty"` // Config's name and version/hash
}

func (x *FetchConfigRequest) Reset() {
	*x = FetchConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchConfigRequest) ProtoMessage() {}

func (x *FetchConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchConfigRequest.ProtoReflect.Descriptor instead.
func (*FetchConfigRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{8}
}

func (x *FetchConfigRequest) GetRequestId() []byte {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *FetchConfigRequest) GetInstanceId() []byte {
	if x != nil {
		return x.InstanceId
	}
	return nil
}

func (x *FetchConfigRequest) GetReqConfigs() []*ConfigInfo {
	if x != nil {
		return x.ReqConfigs
	}
	return nil
}

// ConfigServer response to Agent's request
type FetchConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId      []byte          `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	CommonResponse *CommonResponse `protobuf:"bytes,2,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
	ConfigDetails  []*ConfigDetail `protobuf:"bytes,3,rep,name=config_details,json=configDetails,proto3" json:"config_details,omitempty"` // config detail
}

func (x *FetchConfigResponse) Reset() {
	*x = FetchConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchConfigResponse) ProtoMessage() {}

func (x *FetchConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchConfigResponse.ProtoReflect.Descriptor instead.
func (*FetchConfigResponse) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{9}
}

func (x *FetchConfigResponse) GetRequestId() []byte {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *FetchConfigResponse) GetCommonResponse() *CommonResponse {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

func (x *FetchConfigResponse) GetConfigDetails() []*ConfigDetail {
	if x != nil {
		return x.ConfigDetails
	}
	return nil
}

type CommonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	ErrorMessage []byte `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
}

func (x *CommonResponse) Reset() {
	*x = CommonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResponse) ProtoMessage() {}

func (x *CommonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResponse.ProtoReflect.Descriptor instead.
func (*CommonResponse) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{10}
}

func (x *CommonResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CommonResponse) GetErrorMessage() []byte {
	if x != nil {
		return x.ErrorMessage
	}
	return nil
}

var File_agent_proto protoreflect.FileDescriptor

var file_agent_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x32, 0x22, 0x39, 0x0a, 0x0d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x92, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xdf, 0x01, 0x0a, 0x0f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x02, 0x69, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x4b, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x72, 0x61, 0x73, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x65, 0x78, 0x74, 0x72, 0x61, 0x73, 0x1a, 0x39, 0x0a, 0x0b,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa0, 0x05, 0x0a, 0x10, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x32, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52,
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x32, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x61, 0x67,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x4d, 0x0a, 0x10, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12,
	0x4d, 0x0a, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x4c,
	0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x32,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x66, 0x6c, 0x61,
	0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x22, 0x54, 0x0a, 0x0c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x22, 0x70, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0xed, 0x03, 0x0a, 0x11, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x5c, 0x0a, 0x17, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x15, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x5c, 0x0a, 0x17, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x15, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x5b, 0x0a, 0x16, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x32,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x14,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70,
	0x61, 0x71, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6f, 0x70, 0x61, 0x71,
	0x75, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x12, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0b, 0x72, 0x65, 0x71,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0xd1,
	0x01, 0x0a, 0x13, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0x4c, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2a, 0x40, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x09, 0x0a, 0x05, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41,
	0x50, 0x50, 0x4c, 0x59, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x50, 0x50,
	0x4c, 0x49, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x03, 0x2a, 0x83, 0x01, 0x0a, 0x11, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x1a, 0x55, 0x6e, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x73, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10, 0x02, 0x12, 0x18,
	0x0a, 0x14, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x04, 0x2a, 0x3a, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x10, 0x01, 0x2a, 0xad, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x1b, 0x55,
	0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x52, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x10, 0x04, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x10, 0x08, 0x2a, 0x80, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x75,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x10, 0x04, 0x42, 0x0b, 0x5a, 0x09, 0x2f, 0x3b, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x76, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_agent_proto_rawDescOnce sync.Once
	file_agent_proto_rawDescData = file_agent_proto_rawDesc
)

func file_agent_proto_rawDescGZIP() []byte {
	file_agent_proto_rawDescOnce.Do(func() {
		file_agent_proto_rawDescData = protoimpl.X.CompressGZIP(file_agent_proto_rawDescData)
	})
	return file_agent_proto_rawDescData
}

var file_agent_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_agent_proto_goTypes = []any{
	(ConfigStatus)(0),           // 0: config_server.proto.v2.ConfigStatus
	(AgentCapabilities)(0),      // 1: config_server.proto.v2.AgentCapabilities
	(RequestFlags)(0),           // 2: config_server.proto.v2.RequestFlags
	(ServerCapabilities)(0),     // 3: config_server.proto.v2.ServerCapabilities
	(ResponseFlags)(0),          // 4: config_server.proto.v2.ResponseFlags
	(*AgentGroupTag)(nil),       // 5: config_server.proto.v2.AgentGroupTag
	(*ConfigInfo)(nil),          // 6: config_server.proto.v2.ConfigInfo
	(*CommandInfo)(nil),         // 7: config_server.proto.v2.CommandInfo
	(*AgentAttributes)(nil),     // 8: config_server.proto.v2.AgentAttributes
	(*HeartbeatRequest)(nil),    // 9: config_server.proto.v2.HeartbeatRequest
	(*ConfigDetail)(nil),        // 10: config_server.proto.v2.ConfigDetail
	(*CommandDetail)(nil),       // 11: config_server.proto.v2.CommandDetail
	(*HeartbeatResponse)(nil),   // 12: config_server.proto.v2.HeartbeatResponse
	(*FetchConfigRequest)(nil),  // 13: config_server.proto.v2.FetchConfigRequest
	(*FetchConfigResponse)(nil), // 14: config_server.proto.v2.FetchConfigResponse
	(*CommonResponse)(nil),      // 15: config_server.proto.v2.CommonResponse
	nil,                         // 16: config_server.proto.v2.AgentAttributes.ExtrasEntry
}
var file_agent_proto_depIdxs = []int32{
	0,  // 0: config_server.proto.v2.ConfigInfo.status:type_name -> config_server.proto.v2.ConfigStatus
	0,  // 1: config_server.proto.v2.CommandInfo.status:type_name -> config_server.proto.v2.ConfigStatus
	16, // 2: config_server.proto.v2.AgentAttributes.extras:type_name -> config_server.proto.v2.AgentAttributes.ExtrasEntry
	8,  // 3: config_server.proto.v2.HeartbeatRequest.attributes:type_name -> config_server.proto.v2.AgentAttributes
	5,  // 4: config_server.proto.v2.HeartbeatRequest.tags:type_name -> config_server.proto.v2.AgentGroupTag
	6,  // 5: config_server.proto.v2.HeartbeatRequest.pipeline_configs:type_name -> config_server.proto.v2.ConfigInfo
	6,  // 6: config_server.proto.v2.HeartbeatRequest.instance_configs:type_name -> config_server.proto.v2.ConfigInfo
	7,  // 7: config_server.proto.v2.HeartbeatRequest.custom_commands:type_name -> config_server.proto.v2.CommandInfo
	15, // 8: config_server.proto.v2.HeartbeatResponse.commonResponse:type_name -> config_server.proto.v2.CommonResponse
	10, // 9: config_server.proto.v2.HeartbeatResponse.pipeline_config_updates:type_name -> config_server.proto.v2.ConfigDetail
	10, // 10: config_server.proto.v2.HeartbeatResponse.instance_config_updates:type_name -> config_server.proto.v2.ConfigDetail
	11, // 11: config_server.proto.v2.HeartbeatResponse.custom_command_updates:type_name -> config_server.proto.v2.CommandDetail
	6,  // 12: config_server.proto.v2.FetchConfigRequest.req_configs:type_name -> config_server.proto.v2.ConfigInfo
	15, // 13: config_server.proto.v2.FetchConfigResponse.commonResponse:type_name -> config_server.proto.v2.CommonResponse
	10, // 14: config_server.proto.v2.FetchConfigResponse.config_details:type_name -> config_server.proto.v2.ConfigDetail
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_agent_proto_init() }
func file_agent_proto_init() {
	if File_agent_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_agent_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AgentGroupTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ConfigInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CommandInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AgentAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*HeartbeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ConfigDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CommandDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*HeartbeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*FetchConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*FetchConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CommonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_agent_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_agent_proto_goTypes,
		DependencyIndexes: file_agent_proto_depIdxs,
		EnumInfos:         file_agent_proto_enumTypes,
		MessageInfos:      file_agent_proto_msgTypes,
	}.Build()
	File_agent_proto = out.File
	file_agent_proto_rawDesc = nil
	file_agent_proto_goTypes = nil
	file_agent_proto_depIdxs = nil
}

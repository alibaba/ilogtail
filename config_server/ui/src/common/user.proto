syntax = "proto3";
package configserver.proto;
option go_package = ".;configserver_proto";

// Define Config's type
enum ConfigType {
    PIPELINE_CONFIG = 0;
    AGENT_CONFIG = 1;
}

// Define response code
enum RespCode {
    ACCEPT = 0;
    INVALID_PARAMETER = 1;
    INTERNAL_SERVER_ERROR = 2;
}

// Define Config's detail
message ConfigDetail {
    ConfigType type = 1;    // Required, Config's type
    string name = 2;        // Required, Config's unique identification
    int64 version = 3;      // Required, Config's version number
    string context = 4;     // Config's context
    string detail = 5;      // Required, Config's detail
}

// Define Agent's basic attributes
message AgentAttributes {
    string version = 1;                 // Agent's version
    string category = 2;                // Agent's type(used to distinguish AGENT_CONFIG)
    string ip = 3;                      // Agent's ip
    string hostname = 4;                // Agent's hostname
    string region = 5;                  // Agent's region
    string zone = 6;                    // Agent's zone
    map<string, string> extras = 100;   // Agent's other attributes
}

message AgentGroupTag {
    string name = 1;
    string value = 2;
}

message AgentGroup {
    string group_name = 1;
    string description = 2;
    repeated AgentGroupTag tags = 3;
}

message Agent {
    string agent_id = 1;            // Required, Agent's unique identification
    string agent_type = 2;          // Required, Agent's type(ilogtail, ..)
    AgentAttributes attributes = 3; // Agent's basic attributes
    repeated string tags =  4;      // Agent's tags
    string running_status = 5;      // Required, Agent's running status
    int64 startup_time = 6;         // Required, Agent's startup time
    int32 interval = 7;             // Agent's heartbeat interval
}

// API: /User/CreateAgentGroup

message CreateAgentGroupRequest {
    string request_id = 1;
    AgentGroup agent_group = 2;
}

message CreateAgentGroupResponse {
    string response_id = 1;
    RespCode code = 2;
    string message = 3;
}

// API: /User/UpdateAgentGroup

message UpdateAgentGroupRequest {
    string request_id = 1;
    AgentGroup agent_group = 2;
}

message UpdateAgentGroupResponse {
    string response_id = 1;
    RespCode code = 2;
    string message = 3;
}

// API: /User/DeleteAgentGroup/

message DeleteAgentGroupRequest {
    string request_id = 1;
    string group_name = 2;
}

message DeleteAgentGroupResponse {
    string response_id = 1;
    RespCode code = 2;
    string message = 3;
}

// API: /User/GetAgentGroup/

message GetAgentGroupRequest {
    string request_id = 1;
    string group_name = 2;
}

message GetAgentGroupResponse {
    string response_id = 1;
    RespCode code = 2;
    string message = 3;

    AgentGroup agent_group = 4;
}

// API: /User/ListAgentGroups/ 

message ListAgentGroupsRequest {
    string request_id = 1;
}

message ListAgentGroupsResponse {
    string response_id = 1;
    RespCode code = 2;
    string message = 3;

    repeated AgentGroup agent_groups = 4;
}

// API: /User/CreateConfig/

message CreateConfigRequest {
    string request_id = 1;
    ConfigDetail config_detail = 2;
}

message CreateConfigResponse {
    string response_id = 1;
    RespCode code = 2;
    string message = 3;
}

// API: /User/UpdateConfig/

message UpdateConfigRequest {
    string request_id = 1;
    ConfigDetail config_detail = 2;
}

message UpdateConfigResponse {
    string response_id = 1;
    RespCode code = 2;
    string message = 3;
}

// API: /User/DeleteConfig/

message DeleteConfigRequest {
    string request_id = 1;
    string config_name = 2;
}

message DeleteConfigResponse {
    string response_id = 1;
    RespCode code = 2;
    string message = 3;
}

// API: User/GetConfig/

message GetConfigRequest {
    string request_id = 1;
    string config_name = 2;
}

message GetConfigResponse {
    string response_id = 1;
    RespCode code = 2;
    string message = 3;

    ConfigDetail config_detail = 4;
}

// API: /User/ListConfigs/

message ListConfigsRequest {
    string request_id = 1;
}

message ListConfigsResponse {
    string response_id = 1;
    RespCode code = 2;
    string message = 3;

    repeated ConfigDetail config_details = 4;
}

// API: /User/ApplyConfigToAgentGroup/

message ApplyConfigToAgentGroupRequest {
    string request_id = 1;
    string config_name = 2;
    string group_name = 3;
}

message ApplyConfigToAgentGroupResponse {
    string response_id = 1;
    RespCode code = 2;
    string message = 3;
}

// API: /User/RemoveConfigFromAgentGroup/

message RemoveConfigFromAgentGroupRequest {
    string request_id = 1;
    string config_name = 2;
    string group_name = 3;
}

message RemoveConfigFromAgentGroupResponse {
    string response_id = 1;
    RespCode code = 2;
    string message = 3;
}

// API: /User/GetAppliedConfigsForAgentGroup/

message GetAppliedConfigsForAgentGroupRequest {
    string request_id = 1;
    string group_name = 2;
}

message GetAppliedConfigsForAgentGroupResponse {
    string response_id = 1;
    RespCode code = 2;
    string message = 3;

    repeated string config_names = 4;
}

// API: /User/GetAppliedAgentGroups/

message GetAppliedAgentGroupsRequest {
    string request_id = 1;
    string config_name = 2;
}

message GetAppliedAgentGroupsResponse {
    string response_id = 1;
    RespCode code = 2;
    string message = 3;

    repeated string agent_group_names = 4;
}

// API: /User/ListAgents/

message ListAgentsRequest {
    string request_id = 1;
    string group_name = 2;
}

message ListAgentsResponse {
    string response_id = 1;
    RespCode code = 2;
    string message = 3;

    repeated Agent agents = 4;
}
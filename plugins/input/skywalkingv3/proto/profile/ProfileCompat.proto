/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.apache.skywalking.apm.network.language.profile.v3.compat";
option csharp_namespace = "SkyWalking.NetworkProtocol.V3";
option go_package = "github.com/alibaba/ilogtail/plugins/input/skywalkingv3/skywalking/network/language/profile/v3/compat";
option deprecated = true;

import "common/Common.proto";
import "profile/Profile.proto";

service ProfileTask {

    // query all sniffer need to execute profile task commands
    rpc getProfileTaskCommands (skywalking.v3.ProfileTaskCommandQuery) returns (skywalking.v3.Commands) {
    }

    // collect dumped thread snapshot
    rpc collectSnapshot (stream skywalking.v3.ThreadSnapshot) returns (skywalking.v3.Commands) {
    }

    // report profiling task finished
    rpc reportTaskFinish (skywalking.v3.ProfileTaskFinishReport) returns (skywalking.v3.Commands) {
    }

}

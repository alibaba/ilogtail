FROM local/c7-systemd-linux-amd64 as toolchain-build

# install dependencies
RUN yum -y install epel-release centos-release-scl
RUN yum -y install devtoolset-8-gcc devtoolset-8-gcc-c++ make
RUN yum -y install curl-devel expat-devel gettext-devel openssl-devel perl-devel python3-devel zlib-devel \
    asciidoc xmlto docbook2X wget

# using gcc8
ENV MANPATH=/opt/rh/devtoolset-8/root/usr/share/man \
    PERL5LIB=/opt/rh/devtoolset-8/root//usr/lib64/perl5/vendor_perl:/opt/rh/devtoolset-8/root/usr/lib/perl5:/opt/rh/devtoolset-8/root//usr/share/perl5/vendor_perl \
    X_SCLS=devtoolset-8 \
    PCP_DIR=/opt/rh/devtoolset-8/root \
    LD_LIBRARY_PATH=/opt/rh/devtoolset-8/root/usr/lib64:/opt/rh/devtoolset-8/root/usr/lib:/opt/rh/devtoolset-8/root/usr/lib64/dyninst:/opt/rh/devtoolset-8/root/usr/lib/dyninst:/opt/rh/devtoolset-8/root/usr/lib64:/opt/rh/devtoolset-8/root/usr/lib \
    PATH=/usr/ali/bin:/opt/rh/devtoolset-8/root/usr/bin:$PATH \
    PYTHONPATH=/opt/rh/devtoolset-8/root/usr/lib64/python2.7/site-packages:/opt/rh/devtoolset-8/root/usr/lib/python2.7/site-packages \
    PKG_CONFIG_PATH=/opt/rh/devtoolset-8/root/usr/lib64/pkgconfig \
    INFOPATH=/opt/rh/devtoolset-8/root/usr/share/info

WORKDIR /
RUN wget -nv https://ilogtail-community-edition.oss-cn-shanghai.aliyuncs.com/toolchain/cmake-3.23.2-linux-x86_64.tar.gz && \
    wget -nv https://ilogtail-community-edition.oss-cn-shanghai.aliyuncs.com/toolchain/llvm-project-14.0.0.src.tar.xz && \
    wget -nv https://ilogtail-community-edition.oss-cn-shanghai.aliyuncs.com/toolchain/go1.18.5.linux-amd64.tar.gz && \
    wget -nv https://ilogtail-community-edition.oss-cn-shanghai.aliyuncs.com/toolchain/git-2.29.3.tar.xz

# prepare cmake
RUN tar -xzf cmake-3.23.2-linux-x86_64.tar.gz
ENV CMAKE_ROOT=/cmake-3.23.2-linux-x86_64 \
    PATH=/cmake-3.23.2-linux-x86_64/bin:$PATH

# build clang
RUN tar -xf llvm-project-14.0.0.src.tar.xz && \
    mkdir llvm-project-14.0.0.src/build && \
    cd llvm-project-14.0.0.src/build && \
    cmake -G 'Unix Makefiles' -D CMAKE_C_COMPILER=/opt/rh/devtoolset-8/root/usr/bin/gcc \
        -D CMAKE_CXX_COMPILER=/opt/rh/devtoolset-8/root/usr/bin/g++ \
        -D LLVM_ENABLE_PROJECTS='clang' \
        -D CMAKE_BUILD_TYPE=Release ../llvm && \
    make -sj$(nproc) clang-format && \
    cd /

# build git
RUN tar -xf git-2.29.3.tar.xz && \
    cd git-2.29.3 && \
    make -sj$(nproc) install install-man prefix=$PWD/build && \
    cd /

# prepare go
RUN tar -xzf go1.18.5.linux-amd64.tar.gz

FROM local/c7-systemd-linux-amd64

# install dev tool set and debug utilities
RUN yum -y install gcc gcc-c++ make libuuid-devel libstdc++-static systemd-devel iproute gdb net-tools which wget vim tree man openssh-clients
RUN debuginfo-install -y glibc-2.17-326.el7_9.x86_64 libuuid-2.23.2-65.el7_9.1.x86_64

# install cmake
COPY --from=toolchain-build /cmake-3.23.2-linux-x86_64 /usr/

# install clang-format
COPY --from=toolchain-build /llvm-project-14.0.0.src/build/bin/clang-format /usr/bin/
RUN chmod +x /usr/bin/clang-format

# install golang
WORKDIR /
COPY --from=toolchain-build /go /go
ENV GOROOT=/go GOPATH=/root/go PATH=/go/bin:$PATH

# install go language server
RUN go env -w GOPROXY="https://goproxy.cn,direct"
RUN go install golang.org/x/tools/gopls@v0.9.1 && \
    go install github.com/go-delve/delve/cmd/dlv@v1.6.1 && \
    go install github.com/josharian/impl@v1.1.0 && \
    go install github.com/fatih/gomodifytags@v1.16.0 && \
    go install github.com/cweill/gotests/gotests@v1.6.0 && \
    go install honnef.co/go/tools/cmd/staticcheck@v0.2.2

# install git
COPY --from=toolchain-build /git-2.29.3/git /usr/bin
RUN chmod +x /usr/bin/git


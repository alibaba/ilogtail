// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: remote.proto

#include "remote.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_remote_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_remote_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_QueryResult;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_remote_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Query;
}  // namespace protobuf_remote_2eproto
namespace protobuf_types_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_types_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LabelMatcher;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_types_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MetricMetadata;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_types_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ReadHints;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_types_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ChunkedSeries;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_types_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_TimeSeries;
}  // namespace protobuf_types_2eproto
namespace prometheus {
class WriteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteRequest>
      _instance;
} _WriteRequest_default_instance_;
class ReadRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadRequest>
      _instance;
} _ReadRequest_default_instance_;
class ReadResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadResponse>
      _instance;
} _ReadResponse_default_instance_;
class QueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Query>
      _instance;
} _Query_default_instance_;
class QueryResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryResult>
      _instance;
} _QueryResult_default_instance_;
class ChunkedReadResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChunkedReadResponse>
      _instance;
} _ChunkedReadResponse_default_instance_;
}  // namespace prometheus
namespace protobuf_remote_2eproto {
static void InitDefaultsWriteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::prometheus::_WriteRequest_default_instance_;
    new (ptr) ::prometheus::WriteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prometheus::WriteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_WriteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsWriteRequest}, {
      &protobuf_types_2eproto::scc_info_TimeSeries.base,
      &protobuf_types_2eproto::scc_info_MetricMetadata.base,}};

static void InitDefaultsReadRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::prometheus::_ReadRequest_default_instance_;
    new (ptr) ::prometheus::ReadRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prometheus::ReadRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReadRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReadRequest}, {
      &protobuf_remote_2eproto::scc_info_Query.base,}};

static void InitDefaultsReadResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::prometheus::_ReadResponse_default_instance_;
    new (ptr) ::prometheus::ReadResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prometheus::ReadResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReadResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReadResponse}, {
      &protobuf_remote_2eproto::scc_info_QueryResult.base,}};

static void InitDefaultsQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::prometheus::_Query_default_instance_;
    new (ptr) ::prometheus::Query();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prometheus::Query::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Query =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsQuery}, {
      &protobuf_types_2eproto::scc_info_LabelMatcher.base,
      &protobuf_types_2eproto::scc_info_ReadHints.base,}};

static void InitDefaultsQueryResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::prometheus::_QueryResult_default_instance_;
    new (ptr) ::prometheus::QueryResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prometheus::QueryResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_QueryResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsQueryResult}, {
      &protobuf_types_2eproto::scc_info_TimeSeries.base,}};

static void InitDefaultsChunkedReadResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::prometheus::_ChunkedReadResponse_default_instance_;
    new (ptr) ::prometheus::ChunkedReadResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prometheus::ChunkedReadResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ChunkedReadResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsChunkedReadResponse}, {
      &protobuf_types_2eproto::scc_info_ChunkedSeries.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_WriteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Query.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChunkedReadResponse.base);
}

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prometheus::WriteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prometheus::WriteRequest, timeseries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prometheus::WriteRequest, metadata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prometheus::ReadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prometheus::ReadRequest, queries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prometheus::ReadRequest, accepted_response_types_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prometheus::ReadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prometheus::ReadResponse, results_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prometheus::Query, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prometheus::Query, start_timestamp_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prometheus::Query, end_timestamp_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prometheus::Query, matchers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prometheus::Query, hints_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prometheus::QueryResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prometheus::QueryResult, timeseries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prometheus::ChunkedReadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prometheus::ChunkedReadResponse, chunked_series_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prometheus::ChunkedReadResponse, query_index_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::prometheus::WriteRequest)},
  { 7, -1, sizeof(::prometheus::ReadRequest)},
  { 14, -1, sizeof(::prometheus::ReadResponse)},
  { 20, -1, sizeof(::prometheus::Query)},
  { 29, -1, sizeof(::prometheus::QueryResult)},
  { 35, -1, sizeof(::prometheus::ChunkedReadResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::prometheus::_WriteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::prometheus::_ReadRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::prometheus::_ReadResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::prometheus::_Query_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::prometheus::_QueryResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::prometheus::_ChunkedReadResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "remote.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014remote.proto\022\nprometheus\032\013types.proto\""
      "n\n\014WriteRequest\022*\n\ntimeseries\030\001 \003(\0132\026.pr"
      "ometheus.TimeSeries\022,\n\010metadata\030\003 \003(\0132\032."
      "prometheus.MetricMetadataJ\004\010\002\020\003\"\256\001\n\013Read"
      "Request\022\"\n\007queries\030\001 \003(\0132\021.prometheus.Qu"
      "ery\022E\n\027accepted_response_types\030\002 \003(\0162$.p"
      "rometheus.ReadRequest.ResponseType\"4\n\014Re"
      "sponseType\022\013\n\007SAMPLES\020\000\022\027\n\023STREAMED_XOR_"
      "CHUNKS\020\001\"8\n\014ReadResponse\022(\n\007results\030\001 \003("
      "\0132\027.prometheus.QueryResult\"\217\001\n\005Query\022\032\n\022"
      "start_timestamp_ms\030\001 \001(\003\022\030\n\020end_timestam"
      "p_ms\030\002 \001(\003\022*\n\010matchers\030\003 \003(\0132\030.prometheu"
      "s.LabelMatcher\022$\n\005hints\030\004 \001(\0132\025.promethe"
      "us.ReadHints\"9\n\013QueryResult\022*\n\ntimeserie"
      "s\030\001 \003(\0132\026.prometheus.TimeSeries\"]\n\023Chunk"
      "edReadResponse\0221\n\016chunked_series\030\001 \003(\0132\031"
      ".prometheus.ChunkedSeries\022\023\n\013query_index"
      "\030\002 \001(\003B\010Z\006prompbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 704);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "remote.proto", &protobuf_RegisterTypes);
  ::protobuf_types_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_remote_2eproto
namespace prometheus {
const ::google::protobuf::EnumDescriptor* ReadRequest_ResponseType_descriptor() {
  protobuf_remote_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_remote_2eproto::file_level_enum_descriptors[0];
}
bool ReadRequest_ResponseType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ReadRequest_ResponseType ReadRequest::SAMPLES;
const ReadRequest_ResponseType ReadRequest::STREAMED_XOR_CHUNKS;
const ReadRequest_ResponseType ReadRequest::ResponseType_MIN;
const ReadRequest_ResponseType ReadRequest::ResponseType_MAX;
const int ReadRequest::ResponseType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void WriteRequest::InitAsDefaultInstance() {
}
void WriteRequest::clear_timeseries() {
  timeseries_.Clear();
}
void WriteRequest::clear_metadata() {
  metadata_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteRequest::kTimeseriesFieldNumber;
const int WriteRequest::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteRequest::WriteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_remote_2eproto::scc_info_WriteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:prometheus.WriteRequest)
}
WriteRequest::WriteRequest(const WriteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      timeseries_(from.timeseries_),
      metadata_(from.metadata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:prometheus.WriteRequest)
}

void WriteRequest::SharedCtor() {
}

WriteRequest::~WriteRequest() {
  // @@protoc_insertion_point(destructor:prometheus.WriteRequest)
  SharedDtor();
}

void WriteRequest::SharedDtor() {
}

void WriteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WriteRequest::descriptor() {
  ::protobuf_remote_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_remote_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WriteRequest& WriteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_remote_2eproto::scc_info_WriteRequest.base);
  return *internal_default_instance();
}


void WriteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:prometheus.WriteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timeseries_.Clear();
  metadata_.Clear();
  _internal_metadata_.Clear();
}

bool WriteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prometheus.WriteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .prometheus.TimeSeries timeseries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_timeseries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .prometheus.MetricMetadata metadata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prometheus.WriteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prometheus.WriteRequest)
  return false;
#undef DO_
}

void WriteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prometheus.WriteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .prometheus.TimeSeries timeseries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->timeseries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->timeseries(static_cast<int>(i)),
      output);
  }

  // repeated .prometheus.MetricMetadata metadata = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metadata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->metadata(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:prometheus.WriteRequest)
}

::google::protobuf::uint8* WriteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:prometheus.WriteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .prometheus.TimeSeries timeseries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->timeseries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->timeseries(static_cast<int>(i)), deterministic, target);
  }

  // repeated .prometheus.MetricMetadata metadata = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metadata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->metadata(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prometheus.WriteRequest)
  return target;
}

size_t WriteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prometheus.WriteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .prometheus.TimeSeries timeseries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->timeseries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->timeseries(static_cast<int>(i)));
    }
  }

  // repeated .prometheus.MetricMetadata metadata = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->metadata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->metadata(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prometheus.WriteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prometheus.WriteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prometheus.WriteRequest)
    MergeFrom(*source);
  }
}

void WriteRequest::MergeFrom(const WriteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prometheus.WriteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  timeseries_.MergeFrom(from.timeseries_);
  metadata_.MergeFrom(from.metadata_);
}

void WriteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prometheus.WriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteRequest::CopyFrom(const WriteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prometheus.WriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteRequest::IsInitialized() const {
  return true;
}

void WriteRequest::Swap(WriteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteRequest::InternalSwap(WriteRequest* other) {
  using std::swap;
  CastToBase(&timeseries_)->InternalSwap(CastToBase(&other->timeseries_));
  CastToBase(&metadata_)->InternalSwap(CastToBase(&other->metadata_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WriteRequest::GetMetadata() const {
  protobuf_remote_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_remote_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadRequest::kQueriesFieldNumber;
const int ReadRequest::kAcceptedResponseTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadRequest::ReadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_remote_2eproto::scc_info_ReadRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:prometheus.ReadRequest)
}
ReadRequest::ReadRequest(const ReadRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      queries_(from.queries_),
      accepted_response_types_(from.accepted_response_types_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:prometheus.ReadRequest)
}

void ReadRequest::SharedCtor() {
}

ReadRequest::~ReadRequest() {
  // @@protoc_insertion_point(destructor:prometheus.ReadRequest)
  SharedDtor();
}

void ReadRequest::SharedDtor() {
}

void ReadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadRequest::descriptor() {
  ::protobuf_remote_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_remote_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadRequest& ReadRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_remote_2eproto::scc_info_ReadRequest.base);
  return *internal_default_instance();
}


void ReadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:prometheus.ReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  queries_.Clear();
  accepted_response_types_.Clear();
  _internal_metadata_.Clear();
}

bool ReadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prometheus.ReadRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .prometheus.Query queries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_queries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .prometheus.ReadRequest.ResponseType accepted_response_types = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_accepted_response_types(static_cast< ::prometheus::ReadRequest_ResponseType >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_accepted_response_types(static_cast< ::prometheus::ReadRequest_ResponseType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prometheus.ReadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prometheus.ReadRequest)
  return false;
#undef DO_
}

void ReadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prometheus.ReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .prometheus.Query queries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->queries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->queries(static_cast<int>(i)),
      output);
  }

  // repeated .prometheus.ReadRequest.ResponseType accepted_response_types = 2;
  if (this->accepted_response_types_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_accepted_response_types_cached_byte_size_));
  }
  for (int i = 0, n = this->accepted_response_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->accepted_response_types(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:prometheus.ReadRequest)
}

::google::protobuf::uint8* ReadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:prometheus.ReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .prometheus.Query queries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->queries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->queries(static_cast<int>(i)), deterministic, target);
  }

  // repeated .prometheus.ReadRequest.ResponseType accepted_response_types = 2;
  if (this->accepted_response_types_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _accepted_response_types_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->accepted_response_types_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prometheus.ReadRequest)
  return target;
}

size_t ReadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prometheus.ReadRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .prometheus.Query queries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->queries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->queries(static_cast<int>(i)));
    }
  }

  // repeated .prometheus.ReadRequest.ResponseType accepted_response_types = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->accepted_response_types_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->accepted_response_types(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _accepted_response_types_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prometheus.ReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prometheus.ReadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prometheus.ReadRequest)
    MergeFrom(*source);
  }
}

void ReadRequest::MergeFrom(const ReadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prometheus.ReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  queries_.MergeFrom(from.queries_);
  accepted_response_types_.MergeFrom(from.accepted_response_types_);
}

void ReadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prometheus.ReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadRequest::CopyFrom(const ReadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prometheus.ReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadRequest::IsInitialized() const {
  return true;
}

void ReadRequest::Swap(ReadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadRequest::InternalSwap(ReadRequest* other) {
  using std::swap;
  CastToBase(&queries_)->InternalSwap(CastToBase(&other->queries_));
  accepted_response_types_.InternalSwap(&other->accepted_response_types_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadRequest::GetMetadata() const {
  protobuf_remote_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_remote_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadResponse::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadResponse::ReadResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_remote_2eproto::scc_info_ReadResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:prometheus.ReadResponse)
}
ReadResponse::ReadResponse(const ReadResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:prometheus.ReadResponse)
}

void ReadResponse::SharedCtor() {
}

ReadResponse::~ReadResponse() {
  // @@protoc_insertion_point(destructor:prometheus.ReadResponse)
  SharedDtor();
}

void ReadResponse::SharedDtor() {
}

void ReadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadResponse::descriptor() {
  ::protobuf_remote_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_remote_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadResponse& ReadResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_remote_2eproto::scc_info_ReadResponse.base);
  return *internal_default_instance();
}


void ReadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:prometheus.ReadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  _internal_metadata_.Clear();
}

bool ReadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prometheus.ReadResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .prometheus.QueryResult results = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prometheus.ReadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prometheus.ReadResponse)
  return false;
#undef DO_
}

void ReadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prometheus.ReadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .prometheus.QueryResult results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->results(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:prometheus.ReadResponse)
}

::google::protobuf::uint8* ReadResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:prometheus.ReadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .prometheus.QueryResult results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->results(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prometheus.ReadResponse)
  return target;
}

size_t ReadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prometheus.ReadResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .prometheus.QueryResult results = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->results(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prometheus.ReadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prometheus.ReadResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prometheus.ReadResponse)
    MergeFrom(*source);
  }
}

void ReadResponse::MergeFrom(const ReadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prometheus.ReadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
}

void ReadResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prometheus.ReadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadResponse::CopyFrom(const ReadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prometheus.ReadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadResponse::IsInitialized() const {
  return true;
}

void ReadResponse::Swap(ReadResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadResponse::InternalSwap(ReadResponse* other) {
  using std::swap;
  CastToBase(&results_)->InternalSwap(CastToBase(&other->results_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadResponse::GetMetadata() const {
  protobuf_remote_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_remote_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Query::InitAsDefaultInstance() {
  ::prometheus::_Query_default_instance_._instance.get_mutable()->hints_ = const_cast< ::prometheus::ReadHints*>(
      ::prometheus::ReadHints::internal_default_instance());
}
void Query::clear_matchers() {
  matchers_.Clear();
}
void Query::clear_hints() {
  if (GetArenaNoVirtual() == NULL && hints_ != NULL) {
    delete hints_;
  }
  hints_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Query::kStartTimestampMsFieldNumber;
const int Query::kEndTimestampMsFieldNumber;
const int Query::kMatchersFieldNumber;
const int Query::kHintsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Query::Query()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_remote_2eproto::scc_info_Query.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:prometheus.Query)
}
Query::Query(const Query& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      matchers_(from.matchers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_hints()) {
    hints_ = new ::prometheus::ReadHints(*from.hints_);
  } else {
    hints_ = NULL;
  }
  ::memcpy(&start_timestamp_ms_, &from.start_timestamp_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_timestamp_ms_) -
    reinterpret_cast<char*>(&start_timestamp_ms_)) + sizeof(end_timestamp_ms_));
  // @@protoc_insertion_point(copy_constructor:prometheus.Query)
}

void Query::SharedCtor() {
  ::memset(&hints_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_timestamp_ms_) -
      reinterpret_cast<char*>(&hints_)) + sizeof(end_timestamp_ms_));
}

Query::~Query() {
  // @@protoc_insertion_point(destructor:prometheus.Query)
  SharedDtor();
}

void Query::SharedDtor() {
  if (this != internal_default_instance()) delete hints_;
}

void Query::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Query::descriptor() {
  ::protobuf_remote_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_remote_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Query& Query::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_remote_2eproto::scc_info_Query.base);
  return *internal_default_instance();
}


void Query::Clear() {
// @@protoc_insertion_point(message_clear_start:prometheus.Query)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  matchers_.Clear();
  if (GetArenaNoVirtual() == NULL && hints_ != NULL) {
    delete hints_;
  }
  hints_ = NULL;
  ::memset(&start_timestamp_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_timestamp_ms_) -
      reinterpret_cast<char*>(&start_timestamp_ms_)) + sizeof(end_timestamp_ms_));
  _internal_metadata_.Clear();
}

bool Query::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prometheus.Query)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 start_timestamp_ms = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_timestamp_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 end_timestamp_ms = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_timestamp_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .prometheus.LabelMatcher matchers = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_matchers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .prometheus.ReadHints hints = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hints()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prometheus.Query)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prometheus.Query)
  return false;
#undef DO_
}

void Query::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prometheus.Query)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 start_timestamp_ms = 1;
  if (this->start_timestamp_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_timestamp_ms(), output);
  }

  // int64 end_timestamp_ms = 2;
  if (this->end_timestamp_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_timestamp_ms(), output);
  }

  // repeated .prometheus.LabelMatcher matchers = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->matchers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->matchers(static_cast<int>(i)),
      output);
  }

  // .prometheus.ReadHints hints = 4;
  if (this->has_hints()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_hints(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:prometheus.Query)
}

::google::protobuf::uint8* Query::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:prometheus.Query)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 start_timestamp_ms = 1;
  if (this->start_timestamp_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_timestamp_ms(), target);
  }

  // int64 end_timestamp_ms = 2;
  if (this->end_timestamp_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_timestamp_ms(), target);
  }

  // repeated .prometheus.LabelMatcher matchers = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->matchers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->matchers(static_cast<int>(i)), deterministic, target);
  }

  // .prometheus.ReadHints hints = 4;
  if (this->has_hints()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_hints(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prometheus.Query)
  return target;
}

size_t Query::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prometheus.Query)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .prometheus.LabelMatcher matchers = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->matchers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->matchers(static_cast<int>(i)));
    }
  }

  // .prometheus.ReadHints hints = 4;
  if (this->has_hints()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hints_);
  }

  // int64 start_timestamp_ms = 1;
  if (this->start_timestamp_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->start_timestamp_ms());
  }

  // int64 end_timestamp_ms = 2;
  if (this->end_timestamp_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->end_timestamp_ms());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Query::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prometheus.Query)
  GOOGLE_DCHECK_NE(&from, this);
  const Query* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Query>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prometheus.Query)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prometheus.Query)
    MergeFrom(*source);
  }
}

void Query::MergeFrom(const Query& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prometheus.Query)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  matchers_.MergeFrom(from.matchers_);
  if (from.has_hints()) {
    mutable_hints()->::prometheus::ReadHints::MergeFrom(from.hints());
  }
  if (from.start_timestamp_ms() != 0) {
    set_start_timestamp_ms(from.start_timestamp_ms());
  }
  if (from.end_timestamp_ms() != 0) {
    set_end_timestamp_ms(from.end_timestamp_ms());
  }
}

void Query::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prometheus.Query)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Query::CopyFrom(const Query& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prometheus.Query)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Query::IsInitialized() const {
  return true;
}

void Query::Swap(Query* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Query::InternalSwap(Query* other) {
  using std::swap;
  CastToBase(&matchers_)->InternalSwap(CastToBase(&other->matchers_));
  swap(hints_, other->hints_);
  swap(start_timestamp_ms_, other->start_timestamp_ms_);
  swap(end_timestamp_ms_, other->end_timestamp_ms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Query::GetMetadata() const {
  protobuf_remote_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_remote_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryResult::InitAsDefaultInstance() {
}
void QueryResult::clear_timeseries() {
  timeseries_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryResult::kTimeseriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryResult::QueryResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_remote_2eproto::scc_info_QueryResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:prometheus.QueryResult)
}
QueryResult::QueryResult(const QueryResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      timeseries_(from.timeseries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:prometheus.QueryResult)
}

void QueryResult::SharedCtor() {
}

QueryResult::~QueryResult() {
  // @@protoc_insertion_point(destructor:prometheus.QueryResult)
  SharedDtor();
}

void QueryResult::SharedDtor() {
}

void QueryResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryResult::descriptor() {
  ::protobuf_remote_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_remote_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryResult& QueryResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_remote_2eproto::scc_info_QueryResult.base);
  return *internal_default_instance();
}


void QueryResult::Clear() {
// @@protoc_insertion_point(message_clear_start:prometheus.QueryResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timeseries_.Clear();
  _internal_metadata_.Clear();
}

bool QueryResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prometheus.QueryResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .prometheus.TimeSeries timeseries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_timeseries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prometheus.QueryResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prometheus.QueryResult)
  return false;
#undef DO_
}

void QueryResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prometheus.QueryResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .prometheus.TimeSeries timeseries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->timeseries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->timeseries(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:prometheus.QueryResult)
}

::google::protobuf::uint8* QueryResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:prometheus.QueryResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .prometheus.TimeSeries timeseries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->timeseries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->timeseries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prometheus.QueryResult)
  return target;
}

size_t QueryResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prometheus.QueryResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .prometheus.TimeSeries timeseries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->timeseries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->timeseries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prometheus.QueryResult)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prometheus.QueryResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prometheus.QueryResult)
    MergeFrom(*source);
  }
}

void QueryResult::MergeFrom(const QueryResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prometheus.QueryResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  timeseries_.MergeFrom(from.timeseries_);
}

void QueryResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prometheus.QueryResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryResult::CopyFrom(const QueryResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prometheus.QueryResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryResult::IsInitialized() const {
  return true;
}

void QueryResult::Swap(QueryResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryResult::InternalSwap(QueryResult* other) {
  using std::swap;
  CastToBase(&timeseries_)->InternalSwap(CastToBase(&other->timeseries_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryResult::GetMetadata() const {
  protobuf_remote_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_remote_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChunkedReadResponse::InitAsDefaultInstance() {
}
void ChunkedReadResponse::clear_chunked_series() {
  chunked_series_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChunkedReadResponse::kChunkedSeriesFieldNumber;
const int ChunkedReadResponse::kQueryIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChunkedReadResponse::ChunkedReadResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_remote_2eproto::scc_info_ChunkedReadResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:prometheus.ChunkedReadResponse)
}
ChunkedReadResponse::ChunkedReadResponse(const ChunkedReadResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      chunked_series_(from.chunked_series_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_index_ = from.query_index_;
  // @@protoc_insertion_point(copy_constructor:prometheus.ChunkedReadResponse)
}

void ChunkedReadResponse::SharedCtor() {
  query_index_ = GOOGLE_LONGLONG(0);
}

ChunkedReadResponse::~ChunkedReadResponse() {
  // @@protoc_insertion_point(destructor:prometheus.ChunkedReadResponse)
  SharedDtor();
}

void ChunkedReadResponse::SharedDtor() {
}

void ChunkedReadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChunkedReadResponse::descriptor() {
  ::protobuf_remote_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_remote_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChunkedReadResponse& ChunkedReadResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_remote_2eproto::scc_info_ChunkedReadResponse.base);
  return *internal_default_instance();
}


void ChunkedReadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:prometheus.ChunkedReadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chunked_series_.Clear();
  query_index_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool ChunkedReadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prometheus.ChunkedReadResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .prometheus.ChunkedSeries chunked_series = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_chunked_series()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 query_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &query_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prometheus.ChunkedReadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prometheus.ChunkedReadResponse)
  return false;
#undef DO_
}

void ChunkedReadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prometheus.ChunkedReadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .prometheus.ChunkedSeries chunked_series = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->chunked_series_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->chunked_series(static_cast<int>(i)),
      output);
  }

  // int64 query_index = 2;
  if (this->query_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->query_index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:prometheus.ChunkedReadResponse)
}

::google::protobuf::uint8* ChunkedReadResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:prometheus.ChunkedReadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .prometheus.ChunkedSeries chunked_series = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->chunked_series_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->chunked_series(static_cast<int>(i)), deterministic, target);
  }

  // int64 query_index = 2;
  if (this->query_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->query_index(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prometheus.ChunkedReadResponse)
  return target;
}

size_t ChunkedReadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prometheus.ChunkedReadResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .prometheus.ChunkedSeries chunked_series = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->chunked_series_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->chunked_series(static_cast<int>(i)));
    }
  }

  // int64 query_index = 2;
  if (this->query_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->query_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChunkedReadResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prometheus.ChunkedReadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ChunkedReadResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChunkedReadResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prometheus.ChunkedReadResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prometheus.ChunkedReadResponse)
    MergeFrom(*source);
  }
}

void ChunkedReadResponse::MergeFrom(const ChunkedReadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prometheus.ChunkedReadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  chunked_series_.MergeFrom(from.chunked_series_);
  if (from.query_index() != 0) {
    set_query_index(from.query_index());
  }
}

void ChunkedReadResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prometheus.ChunkedReadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChunkedReadResponse::CopyFrom(const ChunkedReadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prometheus.ChunkedReadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChunkedReadResponse::IsInitialized() const {
  return true;
}

void ChunkedReadResponse::Swap(ChunkedReadResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChunkedReadResponse::InternalSwap(ChunkedReadResponse* other) {
  using std::swap;
  CastToBase(&chunked_series_)->InternalSwap(CastToBase(&other->chunked_series_));
  swap(query_index_, other->query_index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChunkedReadResponse::GetMetadata() const {
  protobuf_remote_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_remote_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace prometheus
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::prometheus::WriteRequest* Arena::CreateMaybeMessage< ::prometheus::WriteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::prometheus::WriteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::prometheus::ReadRequest* Arena::CreateMaybeMessage< ::prometheus::ReadRequest >(Arena* arena) {
  return Arena::CreateInternal< ::prometheus::ReadRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::prometheus::ReadResponse* Arena::CreateMaybeMessage< ::prometheus::ReadResponse >(Arena* arena) {
  return Arena::CreateInternal< ::prometheus::ReadResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::prometheus::Query* Arena::CreateMaybeMessage< ::prometheus::Query >(Arena* arena) {
  return Arena::CreateInternal< ::prometheus::Query >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::prometheus::QueryResult* Arena::CreateMaybeMessage< ::prometheus::QueryResult >(Arena* arena) {
  return Arena::CreateInternal< ::prometheus::QueryResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::prometheus::ChunkedReadResponse* Arena::CreateMaybeMessage< ::prometheus::ChunkedReadResponse >(Arena* arena) {
  return Arena::CreateInternal< ::prometheus::ChunkedReadResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

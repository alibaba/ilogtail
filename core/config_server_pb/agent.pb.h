// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: agent.proto

#ifndef PROTOBUF_INCLUDED_agent_2eproto
#define PROTOBUF_INCLUDED_agent_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_agent_2eproto 

namespace protobuf_agent_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[14];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_agent_2eproto
namespace configserver {
namespace proto {
class AgentGetConfigListRequest;
class AgentGetConfigListRequestDefaultTypeInternal;
extern AgentGetConfigListRequestDefaultTypeInternal _AgentGetConfigListRequest_default_instance_;
class AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse;
class AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUseDefaultTypeInternal;
extern AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUseDefaultTypeInternal _AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse_default_instance_;
class AgentGetConfigListRequest_TagsEntry_DoNotUse;
class AgentGetConfigListRequest_TagsEntry_DoNotUseDefaultTypeInternal;
extern AgentGetConfigListRequest_TagsEntry_DoNotUseDefaultTypeInternal _AgentGetConfigListRequest_TagsEntry_DoNotUse_default_instance_;
class AgentGetConfigListResponse;
class AgentGetConfigListResponseDefaultTypeInternal;
extern AgentGetConfigListResponseDefaultTypeInternal _AgentGetConfigListResponse_default_instance_;
class AlarmRequest;
class AlarmRequestDefaultTypeInternal;
extern AlarmRequestDefaultTypeInternal _AlarmRequest_default_instance_;
class AlarmResponse;
class AlarmResponseDefaultTypeInternal;
extern AlarmResponseDefaultTypeInternal _AlarmResponse_default_instance_;
class ConfigUpdateInfo;
class ConfigUpdateInfoDefaultTypeInternal;
extern ConfigUpdateInfoDefaultTypeInternal _ConfigUpdateInfo_default_instance_;
class HeartBeatRequest;
class HeartBeatRequestDefaultTypeInternal;
extern HeartBeatRequestDefaultTypeInternal _HeartBeatRequest_default_instance_;
class HeartBeatRequest_TagsEntry_DoNotUse;
class HeartBeatRequest_TagsEntry_DoNotUseDefaultTypeInternal;
extern HeartBeatRequest_TagsEntry_DoNotUseDefaultTypeInternal _HeartBeatRequest_TagsEntry_DoNotUse_default_instance_;
class HeartBeatResponse;
class HeartBeatResponseDefaultTypeInternal;
extern HeartBeatResponseDefaultTypeInternal _HeartBeatResponse_default_instance_;
class RunningStatistics;
class RunningStatisticsDefaultTypeInternal;
extern RunningStatisticsDefaultTypeInternal _RunningStatistics_default_instance_;
class RunningStatisticsRequest;
class RunningStatisticsRequestDefaultTypeInternal;
extern RunningStatisticsRequestDefaultTypeInternal _RunningStatisticsRequest_default_instance_;
class RunningStatisticsResponse;
class RunningStatisticsResponseDefaultTypeInternal;
extern RunningStatisticsResponseDefaultTypeInternal _RunningStatisticsResponse_default_instance_;
class RunningStatistics_ExtrasEntry_DoNotUse;
class RunningStatistics_ExtrasEntry_DoNotUseDefaultTypeInternal;
extern RunningStatistics_ExtrasEntry_DoNotUseDefaultTypeInternal _RunningStatistics_ExtrasEntry_DoNotUse_default_instance_;
}  // namespace proto
}  // namespace configserver
namespace google {
namespace protobuf {
template<> ::configserver::proto::AgentGetConfigListRequest* Arena::CreateMaybeMessage<::configserver::proto::AgentGetConfigListRequest>(Arena*);
template<> ::configserver::proto::AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse* Arena::CreateMaybeMessage<::configserver::proto::AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse>(Arena*);
template<> ::configserver::proto::AgentGetConfigListRequest_TagsEntry_DoNotUse* Arena::CreateMaybeMessage<::configserver::proto::AgentGetConfigListRequest_TagsEntry_DoNotUse>(Arena*);
template<> ::configserver::proto::AgentGetConfigListResponse* Arena::CreateMaybeMessage<::configserver::proto::AgentGetConfigListResponse>(Arena*);
template<> ::configserver::proto::AlarmRequest* Arena::CreateMaybeMessage<::configserver::proto::AlarmRequest>(Arena*);
template<> ::configserver::proto::AlarmResponse* Arena::CreateMaybeMessage<::configserver::proto::AlarmResponse>(Arena*);
template<> ::configserver::proto::ConfigUpdateInfo* Arena::CreateMaybeMessage<::configserver::proto::ConfigUpdateInfo>(Arena*);
template<> ::configserver::proto::HeartBeatRequest* Arena::CreateMaybeMessage<::configserver::proto::HeartBeatRequest>(Arena*);
template<> ::configserver::proto::HeartBeatRequest_TagsEntry_DoNotUse* Arena::CreateMaybeMessage<::configserver::proto::HeartBeatRequest_TagsEntry_DoNotUse>(Arena*);
template<> ::configserver::proto::HeartBeatResponse* Arena::CreateMaybeMessage<::configserver::proto::HeartBeatResponse>(Arena*);
template<> ::configserver::proto::RunningStatistics* Arena::CreateMaybeMessage<::configserver::proto::RunningStatistics>(Arena*);
template<> ::configserver::proto::RunningStatisticsRequest* Arena::CreateMaybeMessage<::configserver::proto::RunningStatisticsRequest>(Arena*);
template<> ::configserver::proto::RunningStatisticsResponse* Arena::CreateMaybeMessage<::configserver::proto::RunningStatisticsResponse>(Arena*);
template<> ::configserver::proto::RunningStatistics_ExtrasEntry_DoNotUse* Arena::CreateMaybeMessage<::configserver::proto::RunningStatistics_ExtrasEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace configserver {
namespace proto {

enum ConfigUpdateInfo_UpdateStatus {
  ConfigUpdateInfo_UpdateStatus_SAME = 0,
  ConfigUpdateInfo_UpdateStatus_NEW = 1,
  ConfigUpdateInfo_UpdateStatus_DELETED = 2,
  ConfigUpdateInfo_UpdateStatus_MODIFIED = 3,
  ConfigUpdateInfo_UpdateStatus_ConfigUpdateInfo_UpdateStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ConfigUpdateInfo_UpdateStatus_ConfigUpdateInfo_UpdateStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ConfigUpdateInfo_UpdateStatus_IsValid(int value);
const ConfigUpdateInfo_UpdateStatus ConfigUpdateInfo_UpdateStatus_UpdateStatus_MIN = ConfigUpdateInfo_UpdateStatus_SAME;
const ConfigUpdateInfo_UpdateStatus ConfigUpdateInfo_UpdateStatus_UpdateStatus_MAX = ConfigUpdateInfo_UpdateStatus_MODIFIED;
const int ConfigUpdateInfo_UpdateStatus_UpdateStatus_ARRAYSIZE = ConfigUpdateInfo_UpdateStatus_UpdateStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConfigUpdateInfo_UpdateStatus_descriptor();
inline const ::std::string& ConfigUpdateInfo_UpdateStatus_Name(ConfigUpdateInfo_UpdateStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConfigUpdateInfo_UpdateStatus_descriptor(), value);
}
inline bool ConfigUpdateInfo_UpdateStatus_Parse(
    const ::std::string& name, ConfigUpdateInfo_UpdateStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConfigUpdateInfo_UpdateStatus>(
    ConfigUpdateInfo_UpdateStatus_descriptor(), name, value);
}
// ===================================================================

class HeartBeatRequest_TagsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<HeartBeatRequest_TagsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<HeartBeatRequest_TagsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  HeartBeatRequest_TagsEntry_DoNotUse();
  HeartBeatRequest_TagsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const HeartBeatRequest_TagsEntry_DoNotUse& other);
  static const HeartBeatRequest_TagsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const HeartBeatRequest_TagsEntry_DoNotUse*>(&_HeartBeatRequest_TagsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class HeartBeatRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:configserver.proto.HeartBeatRequest) */ {
 public:
  HeartBeatRequest();
  virtual ~HeartBeatRequest();

  HeartBeatRequest(const HeartBeatRequest& from);

  inline HeartBeatRequest& operator=(const HeartBeatRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeartBeatRequest(HeartBeatRequest&& from) noexcept
    : HeartBeatRequest() {
    *this = ::std::move(from);
  }

  inline HeartBeatRequest& operator=(HeartBeatRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeatRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeartBeatRequest* internal_default_instance() {
    return reinterpret_cast<const HeartBeatRequest*>(
               &_HeartBeatRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(HeartBeatRequest* other);
  friend void swap(HeartBeatRequest& a, HeartBeatRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeartBeatRequest* New() const final {
    return CreateMaybeMessage<HeartBeatRequest>(NULL);
  }

  HeartBeatRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HeartBeatRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HeartBeatRequest& from);
  void MergeFrom(const HeartBeatRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeartBeatRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> tags = 6;
  int tags_size() const;
  void clear_tags();
  static const int kTagsFieldNumber = 6;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      tags() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_tags();

  // string request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // string agent_id = 2;
  void clear_agent_id();
  static const int kAgentIdFieldNumber = 2;
  const ::std::string& agent_id() const;
  void set_agent_id(const ::std::string& value);
  #if LANG_CXX11
  void set_agent_id(::std::string&& value);
  #endif
  void set_agent_id(const char* value);
  void set_agent_id(const char* value, size_t size);
  ::std::string* mutable_agent_id();
  ::std::string* release_agent_id();
  void set_allocated_agent_id(::std::string* agent_id);

  // string agent_type = 3;
  void clear_agent_type();
  static const int kAgentTypeFieldNumber = 3;
  const ::std::string& agent_type() const;
  void set_agent_type(const ::std::string& value);
  #if LANG_CXX11
  void set_agent_type(::std::string&& value);
  #endif
  void set_agent_type(const char* value);
  void set_agent_type(const char* value, size_t size);
  ::std::string* mutable_agent_type();
  ::std::string* release_agent_type();
  void set_allocated_agent_type(::std::string* agent_type);

  // string agent_version = 4;
  void clear_agent_version();
  static const int kAgentVersionFieldNumber = 4;
  const ::std::string& agent_version() const;
  void set_agent_version(const ::std::string& value);
  #if LANG_CXX11
  void set_agent_version(::std::string&& value);
  #endif
  void set_agent_version(const char* value);
  void set_agent_version(const char* value, size_t size);
  ::std::string* mutable_agent_version();
  ::std::string* release_agent_version();
  void set_allocated_agent_version(::std::string* agent_version);

  // string ip = 5;
  void clear_ip();
  static const int kIpFieldNumber = 5;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // string running_status = 7;
  void clear_running_status();
  static const int kRunningStatusFieldNumber = 7;
  const ::std::string& running_status() const;
  void set_running_status(const ::std::string& value);
  #if LANG_CXX11
  void set_running_status(::std::string&& value);
  #endif
  void set_running_status(const char* value);
  void set_running_status(const char* value, size_t size);
  ::std::string* mutable_running_status();
  ::std::string* release_running_status();
  void set_allocated_running_status(::std::string* running_status);

  // int64 startup_time = 8;
  void clear_startup_time();
  static const int kStartupTimeFieldNumber = 8;
  ::google::protobuf::int64 startup_time() const;
  void set_startup_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:configserver.proto.HeartBeatRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      HeartBeatRequest_TagsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > tags_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::protobuf::internal::ArenaStringPtr agent_id_;
  ::google::protobuf::internal::ArenaStringPtr agent_type_;
  ::google::protobuf::internal::ArenaStringPtr agent_version_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr running_status_;
  ::google::protobuf::int64 startup_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HeartBeatResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:configserver.proto.HeartBeatResponse) */ {
 public:
  HeartBeatResponse();
  virtual ~HeartBeatResponse();

  HeartBeatResponse(const HeartBeatResponse& from);

  inline HeartBeatResponse& operator=(const HeartBeatResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeartBeatResponse(HeartBeatResponse&& from) noexcept
    : HeartBeatResponse() {
    *this = ::std::move(from);
  }

  inline HeartBeatResponse& operator=(HeartBeatResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeatResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeartBeatResponse* internal_default_instance() {
    return reinterpret_cast<const HeartBeatResponse*>(
               &_HeartBeatResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(HeartBeatResponse* other);
  friend void swap(HeartBeatResponse& a, HeartBeatResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeartBeatResponse* New() const final {
    return CreateMaybeMessage<HeartBeatResponse>(NULL);
  }

  HeartBeatResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HeartBeatResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HeartBeatResponse& from);
  void MergeFrom(const HeartBeatResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeartBeatResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string response_id = 1;
  void clear_response_id();
  static const int kResponseIdFieldNumber = 1;
  const ::std::string& response_id() const;
  void set_response_id(const ::std::string& value);
  #if LANG_CXX11
  void set_response_id(::std::string&& value);
  #endif
  void set_response_id(const char* value);
  void set_response_id(const char* value, size_t size);
  ::std::string* mutable_response_id();
  ::std::string* release_response_id();
  void set_allocated_response_id(::std::string* response_id);

  // string code = 2;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // string message = 3;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:configserver.proto.HeartBeatResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr response_id_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RunningStatistics_ExtrasEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<RunningStatistics_ExtrasEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<RunningStatistics_ExtrasEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  RunningStatistics_ExtrasEntry_DoNotUse();
  RunningStatistics_ExtrasEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const RunningStatistics_ExtrasEntry_DoNotUse& other);
  static const RunningStatistics_ExtrasEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const RunningStatistics_ExtrasEntry_DoNotUse*>(&_RunningStatistics_ExtrasEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class RunningStatistics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:configserver.proto.RunningStatistics) */ {
 public:
  RunningStatistics();
  virtual ~RunningStatistics();

  RunningStatistics(const RunningStatistics& from);

  inline RunningStatistics& operator=(const RunningStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RunningStatistics(RunningStatistics&& from) noexcept
    : RunningStatistics() {
    *this = ::std::move(from);
  }

  inline RunningStatistics& operator=(RunningStatistics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RunningStatistics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RunningStatistics* internal_default_instance() {
    return reinterpret_cast<const RunningStatistics*>(
               &_RunningStatistics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(RunningStatistics* other);
  friend void swap(RunningStatistics& a, RunningStatistics& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RunningStatistics* New() const final {
    return CreateMaybeMessage<RunningStatistics>(NULL);
  }

  RunningStatistics* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RunningStatistics>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RunningStatistics& from);
  void MergeFrom(const RunningStatistics& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RunningStatistics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> extras = 100;
  int extras_size() const;
  void clear_extras();
  static const int kExtrasFieldNumber = 100;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      extras() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_extras();

  // int64 memory = 2;
  void clear_memory();
  static const int kMemoryFieldNumber = 2;
  ::google::protobuf::int64 memory() const;
  void set_memory(::google::protobuf::int64 value);

  // float cpu = 1;
  void clear_cpu();
  static const int kCpuFieldNumber = 1;
  float cpu() const;
  void set_cpu(float value);

  // @@protoc_insertion_point(class_scope:configserver.proto.RunningStatistics)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      RunningStatistics_ExtrasEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > extras_;
  ::google::protobuf::int64 memory_;
  float cpu_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RunningStatisticsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:configserver.proto.RunningStatisticsRequest) */ {
 public:
  RunningStatisticsRequest();
  virtual ~RunningStatisticsRequest();

  RunningStatisticsRequest(const RunningStatisticsRequest& from);

  inline RunningStatisticsRequest& operator=(const RunningStatisticsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RunningStatisticsRequest(RunningStatisticsRequest&& from) noexcept
    : RunningStatisticsRequest() {
    *this = ::std::move(from);
  }

  inline RunningStatisticsRequest& operator=(RunningStatisticsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RunningStatisticsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RunningStatisticsRequest* internal_default_instance() {
    return reinterpret_cast<const RunningStatisticsRequest*>(
               &_RunningStatisticsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(RunningStatisticsRequest* other);
  friend void swap(RunningStatisticsRequest& a, RunningStatisticsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RunningStatisticsRequest* New() const final {
    return CreateMaybeMessage<RunningStatisticsRequest>(NULL);
  }

  RunningStatisticsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RunningStatisticsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RunningStatisticsRequest& from);
  void MergeFrom(const RunningStatisticsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RunningStatisticsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // string agent_id = 2;
  void clear_agent_id();
  static const int kAgentIdFieldNumber = 2;
  const ::std::string& agent_id() const;
  void set_agent_id(const ::std::string& value);
  #if LANG_CXX11
  void set_agent_id(::std::string&& value);
  #endif
  void set_agent_id(const char* value);
  void set_agent_id(const char* value, size_t size);
  ::std::string* mutable_agent_id();
  ::std::string* release_agent_id();
  void set_allocated_agent_id(::std::string* agent_id);

  // .configserver.proto.RunningStatistics running_details = 3;
  bool has_running_details() const;
  void clear_running_details();
  static const int kRunningDetailsFieldNumber = 3;
  private:
  const ::configserver::proto::RunningStatistics& _internal_running_details() const;
  public:
  const ::configserver::proto::RunningStatistics& running_details() const;
  ::configserver::proto::RunningStatistics* release_running_details();
  ::configserver::proto::RunningStatistics* mutable_running_details();
  void set_allocated_running_details(::configserver::proto::RunningStatistics* running_details);

  // @@protoc_insertion_point(class_scope:configserver.proto.RunningStatisticsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::protobuf::internal::ArenaStringPtr agent_id_;
  ::configserver::proto::RunningStatistics* running_details_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RunningStatisticsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:configserver.proto.RunningStatisticsResponse) */ {
 public:
  RunningStatisticsResponse();
  virtual ~RunningStatisticsResponse();

  RunningStatisticsResponse(const RunningStatisticsResponse& from);

  inline RunningStatisticsResponse& operator=(const RunningStatisticsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RunningStatisticsResponse(RunningStatisticsResponse&& from) noexcept
    : RunningStatisticsResponse() {
    *this = ::std::move(from);
  }

  inline RunningStatisticsResponse& operator=(RunningStatisticsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RunningStatisticsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RunningStatisticsResponse* internal_default_instance() {
    return reinterpret_cast<const RunningStatisticsResponse*>(
               &_RunningStatisticsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(RunningStatisticsResponse* other);
  friend void swap(RunningStatisticsResponse& a, RunningStatisticsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RunningStatisticsResponse* New() const final {
    return CreateMaybeMessage<RunningStatisticsResponse>(NULL);
  }

  RunningStatisticsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RunningStatisticsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RunningStatisticsResponse& from);
  void MergeFrom(const RunningStatisticsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RunningStatisticsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string response_id = 1;
  void clear_response_id();
  static const int kResponseIdFieldNumber = 1;
  const ::std::string& response_id() const;
  void set_response_id(const ::std::string& value);
  #if LANG_CXX11
  void set_response_id(::std::string&& value);
  #endif
  void set_response_id(const char* value);
  void set_response_id(const char* value, size_t size);
  ::std::string* mutable_response_id();
  ::std::string* release_response_id();
  void set_allocated_response_id(::std::string* response_id);

  // string code = 2;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // string message = 3;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:configserver.proto.RunningStatisticsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr response_id_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AlarmRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:configserver.proto.AlarmRequest) */ {
 public:
  AlarmRequest();
  virtual ~AlarmRequest();

  AlarmRequest(const AlarmRequest& from);

  inline AlarmRequest& operator=(const AlarmRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AlarmRequest(AlarmRequest&& from) noexcept
    : AlarmRequest() {
    *this = ::std::move(from);
  }

  inline AlarmRequest& operator=(AlarmRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AlarmRequest* internal_default_instance() {
    return reinterpret_cast<const AlarmRequest*>(
               &_AlarmRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(AlarmRequest* other);
  friend void swap(AlarmRequest& a, AlarmRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AlarmRequest* New() const final {
    return CreateMaybeMessage<AlarmRequest>(NULL);
  }

  AlarmRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AlarmRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AlarmRequest& from);
  void MergeFrom(const AlarmRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AlarmRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // string agent_id = 2;
  void clear_agent_id();
  static const int kAgentIdFieldNumber = 2;
  const ::std::string& agent_id() const;
  void set_agent_id(const ::std::string& value);
  #if LANG_CXX11
  void set_agent_id(::std::string&& value);
  #endif
  void set_agent_id(const char* value);
  void set_agent_id(const char* value, size_t size);
  ::std::string* mutable_agent_id();
  ::std::string* release_agent_id();
  void set_allocated_agent_id(::std::string* agent_id);

  // string type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // string detail = 4;
  void clear_detail();
  static const int kDetailFieldNumber = 4;
  const ::std::string& detail() const;
  void set_detail(const ::std::string& value);
  #if LANG_CXX11
  void set_detail(::std::string&& value);
  #endif
  void set_detail(const char* value);
  void set_detail(const char* value, size_t size);
  ::std::string* mutable_detail();
  ::std::string* release_detail();
  void set_allocated_detail(::std::string* detail);

  // @@protoc_insertion_point(class_scope:configserver.proto.AlarmRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::protobuf::internal::ArenaStringPtr agent_id_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr detail_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AlarmResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:configserver.proto.AlarmResponse) */ {
 public:
  AlarmResponse();
  virtual ~AlarmResponse();

  AlarmResponse(const AlarmResponse& from);

  inline AlarmResponse& operator=(const AlarmResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AlarmResponse(AlarmResponse&& from) noexcept
    : AlarmResponse() {
    *this = ::std::move(from);
  }

  inline AlarmResponse& operator=(AlarmResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AlarmResponse* internal_default_instance() {
    return reinterpret_cast<const AlarmResponse*>(
               &_AlarmResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(AlarmResponse* other);
  friend void swap(AlarmResponse& a, AlarmResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AlarmResponse* New() const final {
    return CreateMaybeMessage<AlarmResponse>(NULL);
  }

  AlarmResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AlarmResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AlarmResponse& from);
  void MergeFrom(const AlarmResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AlarmResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string response_id = 1;
  void clear_response_id();
  static const int kResponseIdFieldNumber = 1;
  const ::std::string& response_id() const;
  void set_response_id(const ::std::string& value);
  #if LANG_CXX11
  void set_response_id(::std::string&& value);
  #endif
  void set_response_id(const char* value);
  void set_response_id(const char* value, size_t size);
  ::std::string* mutable_response_id();
  ::std::string* release_response_id();
  void set_allocated_response_id(::std::string* response_id);

  // string code = 2;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // string message = 3;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:configserver.proto.AlarmResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr response_id_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse, 
    ::std::string, ::google::protobuf::int64,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse, 
    ::std::string, ::google::protobuf::int64,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
    0 > SuperType;
  AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse();
  AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse& other);
  static const AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse*>(&_AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class AgentGetConfigListRequest_TagsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<AgentGetConfigListRequest_TagsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<AgentGetConfigListRequest_TagsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  AgentGetConfigListRequest_TagsEntry_DoNotUse();
  AgentGetConfigListRequest_TagsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const AgentGetConfigListRequest_TagsEntry_DoNotUse& other);
  static const AgentGetConfigListRequest_TagsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const AgentGetConfigListRequest_TagsEntry_DoNotUse*>(&_AgentGetConfigListRequest_TagsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class AgentGetConfigListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:configserver.proto.AgentGetConfigListRequest) */ {
 public:
  AgentGetConfigListRequest();
  virtual ~AgentGetConfigListRequest();

  AgentGetConfigListRequest(const AgentGetConfigListRequest& from);

  inline AgentGetConfigListRequest& operator=(const AgentGetConfigListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AgentGetConfigListRequest(AgentGetConfigListRequest&& from) noexcept
    : AgentGetConfigListRequest() {
    *this = ::std::move(from);
  }

  inline AgentGetConfigListRequest& operator=(AgentGetConfigListRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AgentGetConfigListRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AgentGetConfigListRequest* internal_default_instance() {
    return reinterpret_cast<const AgentGetConfigListRequest*>(
               &_AgentGetConfigListRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(AgentGetConfigListRequest* other);
  friend void swap(AgentGetConfigListRequest& a, AgentGetConfigListRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AgentGetConfigListRequest* New() const final {
    return CreateMaybeMessage<AgentGetConfigListRequest>(NULL);
  }

  AgentGetConfigListRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AgentGetConfigListRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AgentGetConfigListRequest& from);
  void MergeFrom(const AgentGetConfigListRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgentGetConfigListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, int64> config_versions = 3;
  int config_versions_size() const;
  void clear_config_versions();
  static const int kConfigVersionsFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >&
      config_versions() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >*
      mutable_config_versions();

  // map<string, string> tags = 4;
  int tags_size() const;
  void clear_tags();
  static const int kTagsFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      tags() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_tags();

  // string request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // string agent_id = 2;
  void clear_agent_id();
  static const int kAgentIdFieldNumber = 2;
  const ::std::string& agent_id() const;
  void set_agent_id(const ::std::string& value);
  #if LANG_CXX11
  void set_agent_id(::std::string&& value);
  #endif
  void set_agent_id(const char* value);
  void set_agent_id(const char* value, size_t size);
  ::std::string* mutable_agent_id();
  ::std::string* release_agent_id();
  void set_allocated_agent_id(::std::string* agent_id);

  // @@protoc_insertion_point(class_scope:configserver.proto.AgentGetConfigListRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse,
      ::std::string, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > config_versions_;
  ::google::protobuf::internal::MapField<
      AgentGetConfigListRequest_TagsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > tags_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::protobuf::internal::ArenaStringPtr agent_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigUpdateInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:configserver.proto.ConfigUpdateInfo) */ {
 public:
  ConfigUpdateInfo();
  virtual ~ConfigUpdateInfo();

  ConfigUpdateInfo(const ConfigUpdateInfo& from);

  inline ConfigUpdateInfo& operator=(const ConfigUpdateInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigUpdateInfo(ConfigUpdateInfo&& from) noexcept
    : ConfigUpdateInfo() {
    *this = ::std::move(from);
  }

  inline ConfigUpdateInfo& operator=(ConfigUpdateInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigUpdateInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigUpdateInfo* internal_default_instance() {
    return reinterpret_cast<const ConfigUpdateInfo*>(
               &_ConfigUpdateInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(ConfigUpdateInfo* other);
  friend void swap(ConfigUpdateInfo& a, ConfigUpdateInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigUpdateInfo* New() const final {
    return CreateMaybeMessage<ConfigUpdateInfo>(NULL);
  }

  ConfigUpdateInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigUpdateInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigUpdateInfo& from);
  void MergeFrom(const ConfigUpdateInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigUpdateInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ConfigUpdateInfo_UpdateStatus UpdateStatus;
  static const UpdateStatus SAME =
    ConfigUpdateInfo_UpdateStatus_SAME;
  static const UpdateStatus NEW =
    ConfigUpdateInfo_UpdateStatus_NEW;
  static const UpdateStatus DELETED =
    ConfigUpdateInfo_UpdateStatus_DELETED;
  static const UpdateStatus MODIFIED =
    ConfigUpdateInfo_UpdateStatus_MODIFIED;
  static inline bool UpdateStatus_IsValid(int value) {
    return ConfigUpdateInfo_UpdateStatus_IsValid(value);
  }
  static const UpdateStatus UpdateStatus_MIN =
    ConfigUpdateInfo_UpdateStatus_UpdateStatus_MIN;
  static const UpdateStatus UpdateStatus_MAX =
    ConfigUpdateInfo_UpdateStatus_UpdateStatus_MAX;
  static const int UpdateStatus_ARRAYSIZE =
    ConfigUpdateInfo_UpdateStatus_UpdateStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  UpdateStatus_descriptor() {
    return ConfigUpdateInfo_UpdateStatus_descriptor();
  }
  static inline const ::std::string& UpdateStatus_Name(UpdateStatus value) {
    return ConfigUpdateInfo_UpdateStatus_Name(value);
  }
  static inline bool UpdateStatus_Parse(const ::std::string& name,
      UpdateStatus* value) {
    return ConfigUpdateInfo_UpdateStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string config_name = 1;
  void clear_config_name();
  static const int kConfigNameFieldNumber = 1;
  const ::std::string& config_name() const;
  void set_config_name(const ::std::string& value);
  #if LANG_CXX11
  void set_config_name(::std::string&& value);
  #endif
  void set_config_name(const char* value);
  void set_config_name(const char* value, size_t size);
  ::std::string* mutable_config_name();
  ::std::string* release_config_name();
  void set_allocated_config_name(::std::string* config_name);

  // string content = 4;
  void clear_content();
  static const int kContentFieldNumber = 4;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // int64 config_version = 3;
  void clear_config_version();
  static const int kConfigVersionFieldNumber = 3;
  ::google::protobuf::int64 config_version() const;
  void set_config_version(::google::protobuf::int64 value);

  // .configserver.proto.ConfigUpdateInfo.UpdateStatus update_status = 2;
  void clear_update_status();
  static const int kUpdateStatusFieldNumber = 2;
  ::configserver::proto::ConfigUpdateInfo_UpdateStatus update_status() const;
  void set_update_status(::configserver::proto::ConfigUpdateInfo_UpdateStatus value);

  // @@protoc_insertion_point(class_scope:configserver.proto.ConfigUpdateInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr config_name_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::int64 config_version_;
  int update_status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AgentGetConfigListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:configserver.proto.AgentGetConfigListResponse) */ {
 public:
  AgentGetConfigListResponse();
  virtual ~AgentGetConfigListResponse();

  AgentGetConfigListResponse(const AgentGetConfigListResponse& from);

  inline AgentGetConfigListResponse& operator=(const AgentGetConfigListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AgentGetConfigListResponse(AgentGetConfigListResponse&& from) noexcept
    : AgentGetConfigListResponse() {
    *this = ::std::move(from);
  }

  inline AgentGetConfigListResponse& operator=(AgentGetConfigListResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AgentGetConfigListResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AgentGetConfigListResponse* internal_default_instance() {
    return reinterpret_cast<const AgentGetConfigListResponse*>(
               &_AgentGetConfigListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(AgentGetConfigListResponse* other);
  friend void swap(AgentGetConfigListResponse& a, AgentGetConfigListResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AgentGetConfigListResponse* New() const final {
    return CreateMaybeMessage<AgentGetConfigListResponse>(NULL);
  }

  AgentGetConfigListResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AgentGetConfigListResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AgentGetConfigListResponse& from);
  void MergeFrom(const AgentGetConfigListResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgentGetConfigListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .configserver.proto.ConfigUpdateInfo config_update_infos = 4;
  int config_update_infos_size() const;
  void clear_config_update_infos();
  static const int kConfigUpdateInfosFieldNumber = 4;
  ::configserver::proto::ConfigUpdateInfo* mutable_config_update_infos(int index);
  ::google::protobuf::RepeatedPtrField< ::configserver::proto::ConfigUpdateInfo >*
      mutable_config_update_infos();
  const ::configserver::proto::ConfigUpdateInfo& config_update_infos(int index) const;
  ::configserver::proto::ConfigUpdateInfo* add_config_update_infos();
  const ::google::protobuf::RepeatedPtrField< ::configserver::proto::ConfigUpdateInfo >&
      config_update_infos() const;

  // string response_id = 1;
  void clear_response_id();
  static const int kResponseIdFieldNumber = 1;
  const ::std::string& response_id() const;
  void set_response_id(const ::std::string& value);
  #if LANG_CXX11
  void set_response_id(::std::string&& value);
  #endif
  void set_response_id(const char* value);
  void set_response_id(const char* value, size_t size);
  ::std::string* mutable_response_id();
  ::std::string* release_response_id();
  void set_allocated_response_id(::std::string* response_id);

  // string code = 2;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // string message = 3;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:configserver.proto.AgentGetConfigListResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::configserver::proto::ConfigUpdateInfo > config_update_infos_;
  ::google::protobuf::internal::ArenaStringPtr response_id_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// HeartBeatRequest

// string request_id = 1;
inline void HeartBeatRequest::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HeartBeatRequest::request_id() const {
  // @@protoc_insertion_point(field_get:configserver.proto.HeartBeatRequest.request_id)
  return request_id_.GetNoArena();
}
inline void HeartBeatRequest::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.HeartBeatRequest.request_id)
}
#if LANG_CXX11
inline void HeartBeatRequest::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.HeartBeatRequest.request_id)
}
#endif
inline void HeartBeatRequest::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.HeartBeatRequest.request_id)
}
inline void HeartBeatRequest::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.HeartBeatRequest.request_id)
}
inline ::std::string* HeartBeatRequest::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.HeartBeatRequest.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HeartBeatRequest::release_request_id() {
  // @@protoc_insertion_point(field_release:configserver.proto.HeartBeatRequest.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HeartBeatRequest::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.HeartBeatRequest.request_id)
}

// string agent_id = 2;
inline void HeartBeatRequest::clear_agent_id() {
  agent_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HeartBeatRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:configserver.proto.HeartBeatRequest.agent_id)
  return agent_id_.GetNoArena();
}
inline void HeartBeatRequest::set_agent_id(const ::std::string& value) {
  
  agent_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.HeartBeatRequest.agent_id)
}
#if LANG_CXX11
inline void HeartBeatRequest::set_agent_id(::std::string&& value) {
  
  agent_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.HeartBeatRequest.agent_id)
}
#endif
inline void HeartBeatRequest::set_agent_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  agent_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.HeartBeatRequest.agent_id)
}
inline void HeartBeatRequest::set_agent_id(const char* value, size_t size) {
  
  agent_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.HeartBeatRequest.agent_id)
}
inline ::std::string* HeartBeatRequest::mutable_agent_id() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.HeartBeatRequest.agent_id)
  return agent_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HeartBeatRequest::release_agent_id() {
  // @@protoc_insertion_point(field_release:configserver.proto.HeartBeatRequest.agent_id)
  
  return agent_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HeartBeatRequest::set_allocated_agent_id(::std::string* agent_id) {
  if (agent_id != NULL) {
    
  } else {
    
  }
  agent_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_id);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.HeartBeatRequest.agent_id)
}

// string agent_type = 3;
inline void HeartBeatRequest::clear_agent_type() {
  agent_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HeartBeatRequest::agent_type() const {
  // @@protoc_insertion_point(field_get:configserver.proto.HeartBeatRequest.agent_type)
  return agent_type_.GetNoArena();
}
inline void HeartBeatRequest::set_agent_type(const ::std::string& value) {
  
  agent_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.HeartBeatRequest.agent_type)
}
#if LANG_CXX11
inline void HeartBeatRequest::set_agent_type(::std::string&& value) {
  
  agent_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.HeartBeatRequest.agent_type)
}
#endif
inline void HeartBeatRequest::set_agent_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  agent_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.HeartBeatRequest.agent_type)
}
inline void HeartBeatRequest::set_agent_type(const char* value, size_t size) {
  
  agent_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.HeartBeatRequest.agent_type)
}
inline ::std::string* HeartBeatRequest::mutable_agent_type() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.HeartBeatRequest.agent_type)
  return agent_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HeartBeatRequest::release_agent_type() {
  // @@protoc_insertion_point(field_release:configserver.proto.HeartBeatRequest.agent_type)
  
  return agent_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HeartBeatRequest::set_allocated_agent_type(::std::string* agent_type) {
  if (agent_type != NULL) {
    
  } else {
    
  }
  agent_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_type);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.HeartBeatRequest.agent_type)
}

// string agent_version = 4;
inline void HeartBeatRequest::clear_agent_version() {
  agent_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HeartBeatRequest::agent_version() const {
  // @@protoc_insertion_point(field_get:configserver.proto.HeartBeatRequest.agent_version)
  return agent_version_.GetNoArena();
}
inline void HeartBeatRequest::set_agent_version(const ::std::string& value) {
  
  agent_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.HeartBeatRequest.agent_version)
}
#if LANG_CXX11
inline void HeartBeatRequest::set_agent_version(::std::string&& value) {
  
  agent_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.HeartBeatRequest.agent_version)
}
#endif
inline void HeartBeatRequest::set_agent_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  agent_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.HeartBeatRequest.agent_version)
}
inline void HeartBeatRequest::set_agent_version(const char* value, size_t size) {
  
  agent_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.HeartBeatRequest.agent_version)
}
inline ::std::string* HeartBeatRequest::mutable_agent_version() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.HeartBeatRequest.agent_version)
  return agent_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HeartBeatRequest::release_agent_version() {
  // @@protoc_insertion_point(field_release:configserver.proto.HeartBeatRequest.agent_version)
  
  return agent_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HeartBeatRequest::set_allocated_agent_version(::std::string* agent_version) {
  if (agent_version != NULL) {
    
  } else {
    
  }
  agent_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_version);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.HeartBeatRequest.agent_version)
}

// string ip = 5;
inline void HeartBeatRequest::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HeartBeatRequest::ip() const {
  // @@protoc_insertion_point(field_get:configserver.proto.HeartBeatRequest.ip)
  return ip_.GetNoArena();
}
inline void HeartBeatRequest::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.HeartBeatRequest.ip)
}
#if LANG_CXX11
inline void HeartBeatRequest::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.HeartBeatRequest.ip)
}
#endif
inline void HeartBeatRequest::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.HeartBeatRequest.ip)
}
inline void HeartBeatRequest::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.HeartBeatRequest.ip)
}
inline ::std::string* HeartBeatRequest::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.HeartBeatRequest.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HeartBeatRequest::release_ip() {
  // @@protoc_insertion_point(field_release:configserver.proto.HeartBeatRequest.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HeartBeatRequest::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.HeartBeatRequest.ip)
}

// map<string, string> tags = 6;
inline int HeartBeatRequest::tags_size() const {
  return tags_.size();
}
inline void HeartBeatRequest::clear_tags() {
  tags_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
HeartBeatRequest::tags() const {
  // @@protoc_insertion_point(field_map:configserver.proto.HeartBeatRequest.tags)
  return tags_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
HeartBeatRequest::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_map:configserver.proto.HeartBeatRequest.tags)
  return tags_.MutableMap();
}

// string running_status = 7;
inline void HeartBeatRequest::clear_running_status() {
  running_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HeartBeatRequest::running_status() const {
  // @@protoc_insertion_point(field_get:configserver.proto.HeartBeatRequest.running_status)
  return running_status_.GetNoArena();
}
inline void HeartBeatRequest::set_running_status(const ::std::string& value) {
  
  running_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.HeartBeatRequest.running_status)
}
#if LANG_CXX11
inline void HeartBeatRequest::set_running_status(::std::string&& value) {
  
  running_status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.HeartBeatRequest.running_status)
}
#endif
inline void HeartBeatRequest::set_running_status(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  running_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.HeartBeatRequest.running_status)
}
inline void HeartBeatRequest::set_running_status(const char* value, size_t size) {
  
  running_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.HeartBeatRequest.running_status)
}
inline ::std::string* HeartBeatRequest::mutable_running_status() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.HeartBeatRequest.running_status)
  return running_status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HeartBeatRequest::release_running_status() {
  // @@protoc_insertion_point(field_release:configserver.proto.HeartBeatRequest.running_status)
  
  return running_status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HeartBeatRequest::set_allocated_running_status(::std::string* running_status) {
  if (running_status != NULL) {
    
  } else {
    
  }
  running_status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), running_status);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.HeartBeatRequest.running_status)
}

// int64 startup_time = 8;
inline void HeartBeatRequest::clear_startup_time() {
  startup_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HeartBeatRequest::startup_time() const {
  // @@protoc_insertion_point(field_get:configserver.proto.HeartBeatRequest.startup_time)
  return startup_time_;
}
inline void HeartBeatRequest::set_startup_time(::google::protobuf::int64 value) {
  
  startup_time_ = value;
  // @@protoc_insertion_point(field_set:configserver.proto.HeartBeatRequest.startup_time)
}

// -------------------------------------------------------------------

// HeartBeatResponse

// string response_id = 1;
inline void HeartBeatResponse::clear_response_id() {
  response_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HeartBeatResponse::response_id() const {
  // @@protoc_insertion_point(field_get:configserver.proto.HeartBeatResponse.response_id)
  return response_id_.GetNoArena();
}
inline void HeartBeatResponse::set_response_id(const ::std::string& value) {
  
  response_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.HeartBeatResponse.response_id)
}
#if LANG_CXX11
inline void HeartBeatResponse::set_response_id(::std::string&& value) {
  
  response_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.HeartBeatResponse.response_id)
}
#endif
inline void HeartBeatResponse::set_response_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  response_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.HeartBeatResponse.response_id)
}
inline void HeartBeatResponse::set_response_id(const char* value, size_t size) {
  
  response_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.HeartBeatResponse.response_id)
}
inline ::std::string* HeartBeatResponse::mutable_response_id() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.HeartBeatResponse.response_id)
  return response_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HeartBeatResponse::release_response_id() {
  // @@protoc_insertion_point(field_release:configserver.proto.HeartBeatResponse.response_id)
  
  return response_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HeartBeatResponse::set_allocated_response_id(::std::string* response_id) {
  if (response_id != NULL) {
    
  } else {
    
  }
  response_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_id);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.HeartBeatResponse.response_id)
}

// string code = 2;
inline void HeartBeatResponse::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HeartBeatResponse::code() const {
  // @@protoc_insertion_point(field_get:configserver.proto.HeartBeatResponse.code)
  return code_.GetNoArena();
}
inline void HeartBeatResponse::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.HeartBeatResponse.code)
}
#if LANG_CXX11
inline void HeartBeatResponse::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.HeartBeatResponse.code)
}
#endif
inline void HeartBeatResponse::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.HeartBeatResponse.code)
}
inline void HeartBeatResponse::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.HeartBeatResponse.code)
}
inline ::std::string* HeartBeatResponse::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.HeartBeatResponse.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HeartBeatResponse::release_code() {
  // @@protoc_insertion_point(field_release:configserver.proto.HeartBeatResponse.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HeartBeatResponse::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.HeartBeatResponse.code)
}

// string message = 3;
inline void HeartBeatResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HeartBeatResponse::message() const {
  // @@protoc_insertion_point(field_get:configserver.proto.HeartBeatResponse.message)
  return message_.GetNoArena();
}
inline void HeartBeatResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.HeartBeatResponse.message)
}
#if LANG_CXX11
inline void HeartBeatResponse::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.HeartBeatResponse.message)
}
#endif
inline void HeartBeatResponse::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.HeartBeatResponse.message)
}
inline void HeartBeatResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.HeartBeatResponse.message)
}
inline ::std::string* HeartBeatResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.HeartBeatResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HeartBeatResponse::release_message() {
  // @@protoc_insertion_point(field_release:configserver.proto.HeartBeatResponse.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HeartBeatResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.HeartBeatResponse.message)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// RunningStatistics

// float cpu = 1;
inline void RunningStatistics::clear_cpu() {
  cpu_ = 0;
}
inline float RunningStatistics::cpu() const {
  // @@protoc_insertion_point(field_get:configserver.proto.RunningStatistics.cpu)
  return cpu_;
}
inline void RunningStatistics::set_cpu(float value) {
  
  cpu_ = value;
  // @@protoc_insertion_point(field_set:configserver.proto.RunningStatistics.cpu)
}

// int64 memory = 2;
inline void RunningStatistics::clear_memory() {
  memory_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RunningStatistics::memory() const {
  // @@protoc_insertion_point(field_get:configserver.proto.RunningStatistics.memory)
  return memory_;
}
inline void RunningStatistics::set_memory(::google::protobuf::int64 value) {
  
  memory_ = value;
  // @@protoc_insertion_point(field_set:configserver.proto.RunningStatistics.memory)
}

// map<string, string> extras = 100;
inline int RunningStatistics::extras_size() const {
  return extras_.size();
}
inline void RunningStatistics::clear_extras() {
  extras_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
RunningStatistics::extras() const {
  // @@protoc_insertion_point(field_map:configserver.proto.RunningStatistics.extras)
  return extras_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
RunningStatistics::mutable_extras() {
  // @@protoc_insertion_point(field_mutable_map:configserver.proto.RunningStatistics.extras)
  return extras_.MutableMap();
}

// -------------------------------------------------------------------

// RunningStatisticsRequest

// string request_id = 1;
inline void RunningStatisticsRequest::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RunningStatisticsRequest::request_id() const {
  // @@protoc_insertion_point(field_get:configserver.proto.RunningStatisticsRequest.request_id)
  return request_id_.GetNoArena();
}
inline void RunningStatisticsRequest::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.RunningStatisticsRequest.request_id)
}
#if LANG_CXX11
inline void RunningStatisticsRequest::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.RunningStatisticsRequest.request_id)
}
#endif
inline void RunningStatisticsRequest::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.RunningStatisticsRequest.request_id)
}
inline void RunningStatisticsRequest::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.RunningStatisticsRequest.request_id)
}
inline ::std::string* RunningStatisticsRequest::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.RunningStatisticsRequest.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RunningStatisticsRequest::release_request_id() {
  // @@protoc_insertion_point(field_release:configserver.proto.RunningStatisticsRequest.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunningStatisticsRequest::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.RunningStatisticsRequest.request_id)
}

// string agent_id = 2;
inline void RunningStatisticsRequest::clear_agent_id() {
  agent_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RunningStatisticsRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:configserver.proto.RunningStatisticsRequest.agent_id)
  return agent_id_.GetNoArena();
}
inline void RunningStatisticsRequest::set_agent_id(const ::std::string& value) {
  
  agent_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.RunningStatisticsRequest.agent_id)
}
#if LANG_CXX11
inline void RunningStatisticsRequest::set_agent_id(::std::string&& value) {
  
  agent_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.RunningStatisticsRequest.agent_id)
}
#endif
inline void RunningStatisticsRequest::set_agent_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  agent_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.RunningStatisticsRequest.agent_id)
}
inline void RunningStatisticsRequest::set_agent_id(const char* value, size_t size) {
  
  agent_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.RunningStatisticsRequest.agent_id)
}
inline ::std::string* RunningStatisticsRequest::mutable_agent_id() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.RunningStatisticsRequest.agent_id)
  return agent_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RunningStatisticsRequest::release_agent_id() {
  // @@protoc_insertion_point(field_release:configserver.proto.RunningStatisticsRequest.agent_id)
  
  return agent_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunningStatisticsRequest::set_allocated_agent_id(::std::string* agent_id) {
  if (agent_id != NULL) {
    
  } else {
    
  }
  agent_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_id);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.RunningStatisticsRequest.agent_id)
}

// .configserver.proto.RunningStatistics running_details = 3;
inline bool RunningStatisticsRequest::has_running_details() const {
  return this != internal_default_instance() && running_details_ != NULL;
}
inline void RunningStatisticsRequest::clear_running_details() {
  if (GetArenaNoVirtual() == NULL && running_details_ != NULL) {
    delete running_details_;
  }
  running_details_ = NULL;
}
inline const ::configserver::proto::RunningStatistics& RunningStatisticsRequest::_internal_running_details() const {
  return *running_details_;
}
inline const ::configserver::proto::RunningStatistics& RunningStatisticsRequest::running_details() const {
  const ::configserver::proto::RunningStatistics* p = running_details_;
  // @@protoc_insertion_point(field_get:configserver.proto.RunningStatisticsRequest.running_details)
  return p != NULL ? *p : *reinterpret_cast<const ::configserver::proto::RunningStatistics*>(
      &::configserver::proto::_RunningStatistics_default_instance_);
}
inline ::configserver::proto::RunningStatistics* RunningStatisticsRequest::release_running_details() {
  // @@protoc_insertion_point(field_release:configserver.proto.RunningStatisticsRequest.running_details)
  
  ::configserver::proto::RunningStatistics* temp = running_details_;
  running_details_ = NULL;
  return temp;
}
inline ::configserver::proto::RunningStatistics* RunningStatisticsRequest::mutable_running_details() {
  
  if (running_details_ == NULL) {
    auto* p = CreateMaybeMessage<::configserver::proto::RunningStatistics>(GetArenaNoVirtual());
    running_details_ = p;
  }
  // @@protoc_insertion_point(field_mutable:configserver.proto.RunningStatisticsRequest.running_details)
  return running_details_;
}
inline void RunningStatisticsRequest::set_allocated_running_details(::configserver::proto::RunningStatistics* running_details) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete running_details_;
  }
  if (running_details) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      running_details = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, running_details, submessage_arena);
    }
    
  } else {
    
  }
  running_details_ = running_details;
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.RunningStatisticsRequest.running_details)
}

// -------------------------------------------------------------------

// RunningStatisticsResponse

// string response_id = 1;
inline void RunningStatisticsResponse::clear_response_id() {
  response_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RunningStatisticsResponse::response_id() const {
  // @@protoc_insertion_point(field_get:configserver.proto.RunningStatisticsResponse.response_id)
  return response_id_.GetNoArena();
}
inline void RunningStatisticsResponse::set_response_id(const ::std::string& value) {
  
  response_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.RunningStatisticsResponse.response_id)
}
#if LANG_CXX11
inline void RunningStatisticsResponse::set_response_id(::std::string&& value) {
  
  response_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.RunningStatisticsResponse.response_id)
}
#endif
inline void RunningStatisticsResponse::set_response_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  response_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.RunningStatisticsResponse.response_id)
}
inline void RunningStatisticsResponse::set_response_id(const char* value, size_t size) {
  
  response_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.RunningStatisticsResponse.response_id)
}
inline ::std::string* RunningStatisticsResponse::mutable_response_id() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.RunningStatisticsResponse.response_id)
  return response_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RunningStatisticsResponse::release_response_id() {
  // @@protoc_insertion_point(field_release:configserver.proto.RunningStatisticsResponse.response_id)
  
  return response_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunningStatisticsResponse::set_allocated_response_id(::std::string* response_id) {
  if (response_id != NULL) {
    
  } else {
    
  }
  response_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_id);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.RunningStatisticsResponse.response_id)
}

// string code = 2;
inline void RunningStatisticsResponse::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RunningStatisticsResponse::code() const {
  // @@protoc_insertion_point(field_get:configserver.proto.RunningStatisticsResponse.code)
  return code_.GetNoArena();
}
inline void RunningStatisticsResponse::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.RunningStatisticsResponse.code)
}
#if LANG_CXX11
inline void RunningStatisticsResponse::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.RunningStatisticsResponse.code)
}
#endif
inline void RunningStatisticsResponse::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.RunningStatisticsResponse.code)
}
inline void RunningStatisticsResponse::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.RunningStatisticsResponse.code)
}
inline ::std::string* RunningStatisticsResponse::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.RunningStatisticsResponse.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RunningStatisticsResponse::release_code() {
  // @@protoc_insertion_point(field_release:configserver.proto.RunningStatisticsResponse.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunningStatisticsResponse::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.RunningStatisticsResponse.code)
}

// string message = 3;
inline void RunningStatisticsResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RunningStatisticsResponse::message() const {
  // @@protoc_insertion_point(field_get:configserver.proto.RunningStatisticsResponse.message)
  return message_.GetNoArena();
}
inline void RunningStatisticsResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.RunningStatisticsResponse.message)
}
#if LANG_CXX11
inline void RunningStatisticsResponse::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.RunningStatisticsResponse.message)
}
#endif
inline void RunningStatisticsResponse::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.RunningStatisticsResponse.message)
}
inline void RunningStatisticsResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.RunningStatisticsResponse.message)
}
inline ::std::string* RunningStatisticsResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.RunningStatisticsResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RunningStatisticsResponse::release_message() {
  // @@protoc_insertion_point(field_release:configserver.proto.RunningStatisticsResponse.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunningStatisticsResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.RunningStatisticsResponse.message)
}

// -------------------------------------------------------------------

// AlarmRequest

// string request_id = 1;
inline void AlarmRequest::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlarmRequest::request_id() const {
  // @@protoc_insertion_point(field_get:configserver.proto.AlarmRequest.request_id)
  return request_id_.GetNoArena();
}
inline void AlarmRequest::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.AlarmRequest.request_id)
}
#if LANG_CXX11
inline void AlarmRequest::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.AlarmRequest.request_id)
}
#endif
inline void AlarmRequest::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.AlarmRequest.request_id)
}
inline void AlarmRequest::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.AlarmRequest.request_id)
}
inline ::std::string* AlarmRequest::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.AlarmRequest.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlarmRequest::release_request_id() {
  // @@protoc_insertion_point(field_release:configserver.proto.AlarmRequest.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmRequest::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.AlarmRequest.request_id)
}

// string agent_id = 2;
inline void AlarmRequest::clear_agent_id() {
  agent_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlarmRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:configserver.proto.AlarmRequest.agent_id)
  return agent_id_.GetNoArena();
}
inline void AlarmRequest::set_agent_id(const ::std::string& value) {
  
  agent_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.AlarmRequest.agent_id)
}
#if LANG_CXX11
inline void AlarmRequest::set_agent_id(::std::string&& value) {
  
  agent_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.AlarmRequest.agent_id)
}
#endif
inline void AlarmRequest::set_agent_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  agent_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.AlarmRequest.agent_id)
}
inline void AlarmRequest::set_agent_id(const char* value, size_t size) {
  
  agent_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.AlarmRequest.agent_id)
}
inline ::std::string* AlarmRequest::mutable_agent_id() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.AlarmRequest.agent_id)
  return agent_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlarmRequest::release_agent_id() {
  // @@protoc_insertion_point(field_release:configserver.proto.AlarmRequest.agent_id)
  
  return agent_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmRequest::set_allocated_agent_id(::std::string* agent_id) {
  if (agent_id != NULL) {
    
  } else {
    
  }
  agent_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_id);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.AlarmRequest.agent_id)
}

// string type = 3;
inline void AlarmRequest::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlarmRequest::type() const {
  // @@protoc_insertion_point(field_get:configserver.proto.AlarmRequest.type)
  return type_.GetNoArena();
}
inline void AlarmRequest::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.AlarmRequest.type)
}
#if LANG_CXX11
inline void AlarmRequest::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.AlarmRequest.type)
}
#endif
inline void AlarmRequest::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.AlarmRequest.type)
}
inline void AlarmRequest::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.AlarmRequest.type)
}
inline ::std::string* AlarmRequest::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.AlarmRequest.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlarmRequest::release_type() {
  // @@protoc_insertion_point(field_release:configserver.proto.AlarmRequest.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmRequest::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.AlarmRequest.type)
}

// string detail = 4;
inline void AlarmRequest::clear_detail() {
  detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlarmRequest::detail() const {
  // @@protoc_insertion_point(field_get:configserver.proto.AlarmRequest.detail)
  return detail_.GetNoArena();
}
inline void AlarmRequest::set_detail(const ::std::string& value) {
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.AlarmRequest.detail)
}
#if LANG_CXX11
inline void AlarmRequest::set_detail(::std::string&& value) {
  
  detail_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.AlarmRequest.detail)
}
#endif
inline void AlarmRequest::set_detail(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.AlarmRequest.detail)
}
inline void AlarmRequest::set_detail(const char* value, size_t size) {
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.AlarmRequest.detail)
}
inline ::std::string* AlarmRequest::mutable_detail() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.AlarmRequest.detail)
  return detail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlarmRequest::release_detail() {
  // @@protoc_insertion_point(field_release:configserver.proto.AlarmRequest.detail)
  
  return detail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmRequest::set_allocated_detail(::std::string* detail) {
  if (detail != NULL) {
    
  } else {
    
  }
  detail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detail);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.AlarmRequest.detail)
}

// -------------------------------------------------------------------

// AlarmResponse

// string response_id = 1;
inline void AlarmResponse::clear_response_id() {
  response_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlarmResponse::response_id() const {
  // @@protoc_insertion_point(field_get:configserver.proto.AlarmResponse.response_id)
  return response_id_.GetNoArena();
}
inline void AlarmResponse::set_response_id(const ::std::string& value) {
  
  response_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.AlarmResponse.response_id)
}
#if LANG_CXX11
inline void AlarmResponse::set_response_id(::std::string&& value) {
  
  response_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.AlarmResponse.response_id)
}
#endif
inline void AlarmResponse::set_response_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  response_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.AlarmResponse.response_id)
}
inline void AlarmResponse::set_response_id(const char* value, size_t size) {
  
  response_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.AlarmResponse.response_id)
}
inline ::std::string* AlarmResponse::mutable_response_id() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.AlarmResponse.response_id)
  return response_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlarmResponse::release_response_id() {
  // @@protoc_insertion_point(field_release:configserver.proto.AlarmResponse.response_id)
  
  return response_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmResponse::set_allocated_response_id(::std::string* response_id) {
  if (response_id != NULL) {
    
  } else {
    
  }
  response_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_id);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.AlarmResponse.response_id)
}

// string code = 2;
inline void AlarmResponse::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlarmResponse::code() const {
  // @@protoc_insertion_point(field_get:configserver.proto.AlarmResponse.code)
  return code_.GetNoArena();
}
inline void AlarmResponse::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.AlarmResponse.code)
}
#if LANG_CXX11
inline void AlarmResponse::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.AlarmResponse.code)
}
#endif
inline void AlarmResponse::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.AlarmResponse.code)
}
inline void AlarmResponse::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.AlarmResponse.code)
}
inline ::std::string* AlarmResponse::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.AlarmResponse.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlarmResponse::release_code() {
  // @@protoc_insertion_point(field_release:configserver.proto.AlarmResponse.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmResponse::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.AlarmResponse.code)
}

// string message = 3;
inline void AlarmResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlarmResponse::message() const {
  // @@protoc_insertion_point(field_get:configserver.proto.AlarmResponse.message)
  return message_.GetNoArena();
}
inline void AlarmResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.AlarmResponse.message)
}
#if LANG_CXX11
inline void AlarmResponse::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.AlarmResponse.message)
}
#endif
inline void AlarmResponse::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.AlarmResponse.message)
}
inline void AlarmResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.AlarmResponse.message)
}
inline ::std::string* AlarmResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.AlarmResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlarmResponse::release_message() {
  // @@protoc_insertion_point(field_release:configserver.proto.AlarmResponse.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlarmResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.AlarmResponse.message)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AgentGetConfigListRequest

// string request_id = 1;
inline void AgentGetConfigListRequest::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AgentGetConfigListRequest::request_id() const {
  // @@protoc_insertion_point(field_get:configserver.proto.AgentGetConfigListRequest.request_id)
  return request_id_.GetNoArena();
}
inline void AgentGetConfigListRequest::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.AgentGetConfigListRequest.request_id)
}
#if LANG_CXX11
inline void AgentGetConfigListRequest::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.AgentGetConfigListRequest.request_id)
}
#endif
inline void AgentGetConfigListRequest::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.AgentGetConfigListRequest.request_id)
}
inline void AgentGetConfigListRequest::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.AgentGetConfigListRequest.request_id)
}
inline ::std::string* AgentGetConfigListRequest::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.AgentGetConfigListRequest.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AgentGetConfigListRequest::release_request_id() {
  // @@protoc_insertion_point(field_release:configserver.proto.AgentGetConfigListRequest.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AgentGetConfigListRequest::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.AgentGetConfigListRequest.request_id)
}

// string agent_id = 2;
inline void AgentGetConfigListRequest::clear_agent_id() {
  agent_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AgentGetConfigListRequest::agent_id() const {
  // @@protoc_insertion_point(field_get:configserver.proto.AgentGetConfigListRequest.agent_id)
  return agent_id_.GetNoArena();
}
inline void AgentGetConfigListRequest::set_agent_id(const ::std::string& value) {
  
  agent_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.AgentGetConfigListRequest.agent_id)
}
#if LANG_CXX11
inline void AgentGetConfigListRequest::set_agent_id(::std::string&& value) {
  
  agent_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.AgentGetConfigListRequest.agent_id)
}
#endif
inline void AgentGetConfigListRequest::set_agent_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  agent_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.AgentGetConfigListRequest.agent_id)
}
inline void AgentGetConfigListRequest::set_agent_id(const char* value, size_t size) {
  
  agent_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.AgentGetConfigListRequest.agent_id)
}
inline ::std::string* AgentGetConfigListRequest::mutable_agent_id() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.AgentGetConfigListRequest.agent_id)
  return agent_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AgentGetConfigListRequest::release_agent_id() {
  // @@protoc_insertion_point(field_release:configserver.proto.AgentGetConfigListRequest.agent_id)
  
  return agent_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AgentGetConfigListRequest::set_allocated_agent_id(::std::string* agent_id) {
  if (agent_id != NULL) {
    
  } else {
    
  }
  agent_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_id);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.AgentGetConfigListRequest.agent_id)
}

// map<string, int64> config_versions = 3;
inline int AgentGetConfigListRequest::config_versions_size() const {
  return config_versions_.size();
}
inline void AgentGetConfigListRequest::clear_config_versions() {
  config_versions_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >&
AgentGetConfigListRequest::config_versions() const {
  // @@protoc_insertion_point(field_map:configserver.proto.AgentGetConfigListRequest.config_versions)
  return config_versions_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >*
AgentGetConfigListRequest::mutable_config_versions() {
  // @@protoc_insertion_point(field_mutable_map:configserver.proto.AgentGetConfigListRequest.config_versions)
  return config_versions_.MutableMap();
}

// map<string, string> tags = 4;
inline int AgentGetConfigListRequest::tags_size() const {
  return tags_.size();
}
inline void AgentGetConfigListRequest::clear_tags() {
  tags_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
AgentGetConfigListRequest::tags() const {
  // @@protoc_insertion_point(field_map:configserver.proto.AgentGetConfigListRequest.tags)
  return tags_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
AgentGetConfigListRequest::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_map:configserver.proto.AgentGetConfigListRequest.tags)
  return tags_.MutableMap();
}

// -------------------------------------------------------------------

// ConfigUpdateInfo

// string config_name = 1;
inline void ConfigUpdateInfo::clear_config_name() {
  config_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigUpdateInfo::config_name() const {
  // @@protoc_insertion_point(field_get:configserver.proto.ConfigUpdateInfo.config_name)
  return config_name_.GetNoArena();
}
inline void ConfigUpdateInfo::set_config_name(const ::std::string& value) {
  
  config_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.ConfigUpdateInfo.config_name)
}
#if LANG_CXX11
inline void ConfigUpdateInfo::set_config_name(::std::string&& value) {
  
  config_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.ConfigUpdateInfo.config_name)
}
#endif
inline void ConfigUpdateInfo::set_config_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  config_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.ConfigUpdateInfo.config_name)
}
inline void ConfigUpdateInfo::set_config_name(const char* value, size_t size) {
  
  config_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.ConfigUpdateInfo.config_name)
}
inline ::std::string* ConfigUpdateInfo::mutable_config_name() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.ConfigUpdateInfo.config_name)
  return config_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigUpdateInfo::release_config_name() {
  // @@protoc_insertion_point(field_release:configserver.proto.ConfigUpdateInfo.config_name)
  
  return config_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigUpdateInfo::set_allocated_config_name(::std::string* config_name) {
  if (config_name != NULL) {
    
  } else {
    
  }
  config_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), config_name);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.ConfigUpdateInfo.config_name)
}

// .configserver.proto.ConfigUpdateInfo.UpdateStatus update_status = 2;
inline void ConfigUpdateInfo::clear_update_status() {
  update_status_ = 0;
}
inline ::configserver::proto::ConfigUpdateInfo_UpdateStatus ConfigUpdateInfo::update_status() const {
  // @@protoc_insertion_point(field_get:configserver.proto.ConfigUpdateInfo.update_status)
  return static_cast< ::configserver::proto::ConfigUpdateInfo_UpdateStatus >(update_status_);
}
inline void ConfigUpdateInfo::set_update_status(::configserver::proto::ConfigUpdateInfo_UpdateStatus value) {
  
  update_status_ = value;
  // @@protoc_insertion_point(field_set:configserver.proto.ConfigUpdateInfo.update_status)
}

// int64 config_version = 3;
inline void ConfigUpdateInfo::clear_config_version() {
  config_version_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ConfigUpdateInfo::config_version() const {
  // @@protoc_insertion_point(field_get:configserver.proto.ConfigUpdateInfo.config_version)
  return config_version_;
}
inline void ConfigUpdateInfo::set_config_version(::google::protobuf::int64 value) {
  
  config_version_ = value;
  // @@protoc_insertion_point(field_set:configserver.proto.ConfigUpdateInfo.config_version)
}

// string content = 4;
inline void ConfigUpdateInfo::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigUpdateInfo::content() const {
  // @@protoc_insertion_point(field_get:configserver.proto.ConfigUpdateInfo.content)
  return content_.GetNoArena();
}
inline void ConfigUpdateInfo::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.ConfigUpdateInfo.content)
}
#if LANG_CXX11
inline void ConfigUpdateInfo::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.ConfigUpdateInfo.content)
}
#endif
inline void ConfigUpdateInfo::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.ConfigUpdateInfo.content)
}
inline void ConfigUpdateInfo::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.ConfigUpdateInfo.content)
}
inline ::std::string* ConfigUpdateInfo::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.ConfigUpdateInfo.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigUpdateInfo::release_content() {
  // @@protoc_insertion_point(field_release:configserver.proto.ConfigUpdateInfo.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigUpdateInfo::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.ConfigUpdateInfo.content)
}

// -------------------------------------------------------------------

// AgentGetConfigListResponse

// string response_id = 1;
inline void AgentGetConfigListResponse::clear_response_id() {
  response_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AgentGetConfigListResponse::response_id() const {
  // @@protoc_insertion_point(field_get:configserver.proto.AgentGetConfigListResponse.response_id)
  return response_id_.GetNoArena();
}
inline void AgentGetConfigListResponse::set_response_id(const ::std::string& value) {
  
  response_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.AgentGetConfigListResponse.response_id)
}
#if LANG_CXX11
inline void AgentGetConfigListResponse::set_response_id(::std::string&& value) {
  
  response_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.AgentGetConfigListResponse.response_id)
}
#endif
inline void AgentGetConfigListResponse::set_response_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  response_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.AgentGetConfigListResponse.response_id)
}
inline void AgentGetConfigListResponse::set_response_id(const char* value, size_t size) {
  
  response_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.AgentGetConfigListResponse.response_id)
}
inline ::std::string* AgentGetConfigListResponse::mutable_response_id() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.AgentGetConfigListResponse.response_id)
  return response_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AgentGetConfigListResponse::release_response_id() {
  // @@protoc_insertion_point(field_release:configserver.proto.AgentGetConfigListResponse.response_id)
  
  return response_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AgentGetConfigListResponse::set_allocated_response_id(::std::string* response_id) {
  if (response_id != NULL) {
    
  } else {
    
  }
  response_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_id);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.AgentGetConfigListResponse.response_id)
}

// string code = 2;
inline void AgentGetConfigListResponse::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AgentGetConfigListResponse::code() const {
  // @@protoc_insertion_point(field_get:configserver.proto.AgentGetConfigListResponse.code)
  return code_.GetNoArena();
}
inline void AgentGetConfigListResponse::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.AgentGetConfigListResponse.code)
}
#if LANG_CXX11
inline void AgentGetConfigListResponse::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.AgentGetConfigListResponse.code)
}
#endif
inline void AgentGetConfigListResponse::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.AgentGetConfigListResponse.code)
}
inline void AgentGetConfigListResponse::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.AgentGetConfigListResponse.code)
}
inline ::std::string* AgentGetConfigListResponse::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.AgentGetConfigListResponse.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AgentGetConfigListResponse::release_code() {
  // @@protoc_insertion_point(field_release:configserver.proto.AgentGetConfigListResponse.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AgentGetConfigListResponse::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.AgentGetConfigListResponse.code)
}

// string message = 3;
inline void AgentGetConfigListResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AgentGetConfigListResponse::message() const {
  // @@protoc_insertion_point(field_get:configserver.proto.AgentGetConfigListResponse.message)
  return message_.GetNoArena();
}
inline void AgentGetConfigListResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.AgentGetConfigListResponse.message)
}
#if LANG_CXX11
inline void AgentGetConfigListResponse::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.AgentGetConfigListResponse.message)
}
#endif
inline void AgentGetConfigListResponse::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.AgentGetConfigListResponse.message)
}
inline void AgentGetConfigListResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.AgentGetConfigListResponse.message)
}
inline ::std::string* AgentGetConfigListResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.AgentGetConfigListResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AgentGetConfigListResponse::release_message() {
  // @@protoc_insertion_point(field_release:configserver.proto.AgentGetConfigListResponse.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AgentGetConfigListResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.AgentGetConfigListResponse.message)
}

// repeated .configserver.proto.ConfigUpdateInfo config_update_infos = 4;
inline int AgentGetConfigListResponse::config_update_infos_size() const {
  return config_update_infos_.size();
}
inline void AgentGetConfigListResponse::clear_config_update_infos() {
  config_update_infos_.Clear();
}
inline ::configserver::proto::ConfigUpdateInfo* AgentGetConfigListResponse::mutable_config_update_infos(int index) {
  // @@protoc_insertion_point(field_mutable:configserver.proto.AgentGetConfigListResponse.config_update_infos)
  return config_update_infos_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::configserver::proto::ConfigUpdateInfo >*
AgentGetConfigListResponse::mutable_config_update_infos() {
  // @@protoc_insertion_point(field_mutable_list:configserver.proto.AgentGetConfigListResponse.config_update_infos)
  return &config_update_infos_;
}
inline const ::configserver::proto::ConfigUpdateInfo& AgentGetConfigListResponse::config_update_infos(int index) const {
  // @@protoc_insertion_point(field_get:configserver.proto.AgentGetConfigListResponse.config_update_infos)
  return config_update_infos_.Get(index);
}
inline ::configserver::proto::ConfigUpdateInfo* AgentGetConfigListResponse::add_config_update_infos() {
  // @@protoc_insertion_point(field_add:configserver.proto.AgentGetConfigListResponse.config_update_infos)
  return config_update_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::configserver::proto::ConfigUpdateInfo >&
AgentGetConfigListResponse::config_update_infos() const {
  // @@protoc_insertion_point(field_list:configserver.proto.AgentGetConfigListResponse.config_update_infos)
  return config_update_infos_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace configserver

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::configserver::proto::ConfigUpdateInfo_UpdateStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::configserver::proto::ConfigUpdateInfo_UpdateStatus>() {
  return ::configserver::proto::ConfigUpdateInfo_UpdateStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_agent_2eproto

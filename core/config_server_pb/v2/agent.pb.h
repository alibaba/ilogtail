/*
 * Copyright 2024 iLogtail Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v2/agent.proto

#ifndef PROTOBUF_INCLUDED_v2_2fagent_2eproto
#define PROTOBUF_INCLUDED_v2_2fagent_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_v2_2fagent_2eproto 

namespace protobuf_v2_2fagent_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[12];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_v2_2fagent_2eproto
namespace configserver {
namespace proto {
namespace v2 {
class AgentAttributes;
class AgentAttributesDefaultTypeInternal;
extern AgentAttributesDefaultTypeInternal _AgentAttributes_default_instance_;
class AgentAttributes_ExtrasEntry_DoNotUse;
class AgentAttributes_ExtrasEntry_DoNotUseDefaultTypeInternal;
extern AgentAttributes_ExtrasEntry_DoNotUseDefaultTypeInternal _AgentAttributes_ExtrasEntry_DoNotUse_default_instance_;
class AgentGroupTag;
class AgentGroupTagDefaultTypeInternal;
extern AgentGroupTagDefaultTypeInternal _AgentGroupTag_default_instance_;
class CommandDetail;
class CommandDetailDefaultTypeInternal;
extern CommandDetailDefaultTypeInternal _CommandDetail_default_instance_;
class CommandInfo;
class CommandInfoDefaultTypeInternal;
extern CommandInfoDefaultTypeInternal _CommandInfo_default_instance_;
class ConfigDetail;
class ConfigDetailDefaultTypeInternal;
extern ConfigDetailDefaultTypeInternal _ConfigDetail_default_instance_;
class ConfigInfo;
class ConfigInfoDefaultTypeInternal;
extern ConfigInfoDefaultTypeInternal _ConfigInfo_default_instance_;
class FetchConfigRequest;
class FetchConfigRequestDefaultTypeInternal;
extern FetchConfigRequestDefaultTypeInternal _FetchConfigRequest_default_instance_;
class FetchConfigResponse;
class FetchConfigResponseDefaultTypeInternal;
extern FetchConfigResponseDefaultTypeInternal _FetchConfigResponse_default_instance_;
class HeartBeatRequest;
class HeartBeatRequestDefaultTypeInternal;
extern HeartBeatRequestDefaultTypeInternal _HeartBeatRequest_default_instance_;
class HeartBeatResponse;
class HeartBeatResponseDefaultTypeInternal;
extern HeartBeatResponseDefaultTypeInternal _HeartBeatResponse_default_instance_;
class ServerErrorResponse;
class ServerErrorResponseDefaultTypeInternal;
extern ServerErrorResponseDefaultTypeInternal _ServerErrorResponse_default_instance_;
}  // namespace v2
}  // namespace proto
}  // namespace configserver
namespace google {
namespace protobuf {
template<> ::configserver::proto::v2::AgentAttributes* Arena::CreateMaybeMessage<::configserver::proto::v2::AgentAttributes>(Arena*);
template<> ::configserver::proto::v2::AgentAttributes_ExtrasEntry_DoNotUse* Arena::CreateMaybeMessage<::configserver::proto::v2::AgentAttributes_ExtrasEntry_DoNotUse>(Arena*);
template<> ::configserver::proto::v2::AgentGroupTag* Arena::CreateMaybeMessage<::configserver::proto::v2::AgentGroupTag>(Arena*);
template<> ::configserver::proto::v2::CommandDetail* Arena::CreateMaybeMessage<::configserver::proto::v2::CommandDetail>(Arena*);
template<> ::configserver::proto::v2::CommandInfo* Arena::CreateMaybeMessage<::configserver::proto::v2::CommandInfo>(Arena*);
template<> ::configserver::proto::v2::ConfigDetail* Arena::CreateMaybeMessage<::configserver::proto::v2::ConfigDetail>(Arena*);
template<> ::configserver::proto::v2::ConfigInfo* Arena::CreateMaybeMessage<::configserver::proto::v2::ConfigInfo>(Arena*);
template<> ::configserver::proto::v2::FetchConfigRequest* Arena::CreateMaybeMessage<::configserver::proto::v2::FetchConfigRequest>(Arena*);
template<> ::configserver::proto::v2::FetchConfigResponse* Arena::CreateMaybeMessage<::configserver::proto::v2::FetchConfigResponse>(Arena*);
template<> ::configserver::proto::v2::HeartBeatRequest* Arena::CreateMaybeMessage<::configserver::proto::v2::HeartBeatRequest>(Arena*);
template<> ::configserver::proto::v2::HeartBeatResponse* Arena::CreateMaybeMessage<::configserver::proto::v2::HeartBeatResponse>(Arena*);
template<> ::configserver::proto::v2::ServerErrorResponse* Arena::CreateMaybeMessage<::configserver::proto::v2::ServerErrorResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace configserver {
namespace proto {
namespace v2 {

enum ConfigStatus {
  UNSET = 0,
  APPLYING = 1,
  APPLIED = 2,
  FAILED = 3,
  ConfigStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ConfigStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ConfigStatus_IsValid(int value);
const ConfigStatus ConfigStatus_MIN = UNSET;
const ConfigStatus ConfigStatus_MAX = FAILED;
const int ConfigStatus_ARRAYSIZE = ConfigStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConfigStatus_descriptor();
inline const ::std::string& ConfigStatus_Name(ConfigStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConfigStatus_descriptor(), value);
}
inline bool ConfigStatus_Parse(
    const ::std::string& name, ConfigStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConfigStatus>(
    ConfigStatus_descriptor(), name, value);
}
enum AgentCapabilities {
  UnspecifiedAgentCapability = 0,
  AcceptsPipelineConfig = 1,
  AcceptsProcessConfig = 2,
  AcceptsCustomCommand = 4,
  AgentCapabilities_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AgentCapabilities_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AgentCapabilities_IsValid(int value);
const AgentCapabilities AgentCapabilities_MIN = UnspecifiedAgentCapability;
const AgentCapabilities AgentCapabilities_MAX = AcceptsCustomCommand;
const int AgentCapabilities_ARRAYSIZE = AgentCapabilities_MAX + 1;

const ::google::protobuf::EnumDescriptor* AgentCapabilities_descriptor();
inline const ::std::string& AgentCapabilities_Name(AgentCapabilities value) {
  return ::google::protobuf::internal::NameOfEnum(
    AgentCapabilities_descriptor(), value);
}
inline bool AgentCapabilities_Parse(
    const ::std::string& name, AgentCapabilities* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AgentCapabilities>(
    AgentCapabilities_descriptor(), name, value);
}
enum RequestFlags {
  RequestFlagsUnspecified = 0,
  FullState = 1,
  RequestFlags_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RequestFlags_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RequestFlags_IsValid(int value);
const RequestFlags RequestFlags_MIN = RequestFlagsUnspecified;
const RequestFlags RequestFlags_MAX = FullState;
const int RequestFlags_ARRAYSIZE = RequestFlags_MAX + 1;

const ::google::protobuf::EnumDescriptor* RequestFlags_descriptor();
inline const ::std::string& RequestFlags_Name(RequestFlags value) {
  return ::google::protobuf::internal::NameOfEnum(
    RequestFlags_descriptor(), value);
}
inline bool RequestFlags_Parse(
    const ::std::string& name, RequestFlags* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RequestFlags>(
    RequestFlags_descriptor(), name, value);
}
enum ServerCapabilities {
  UnspecifiedServerCapability = 0,
  RembersAttribute = 1,
  RembersPipelineConfigStatus = 2,
  RembersProcessConfigStatus = 4,
  RembersCustomCommandStatus = 8,
  ServerCapabilities_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ServerCapabilities_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ServerCapabilities_IsValid(int value);
const ServerCapabilities ServerCapabilities_MIN = UnspecifiedServerCapability;
const ServerCapabilities ServerCapabilities_MAX = RembersCustomCommandStatus;
const int ServerCapabilities_ARRAYSIZE = ServerCapabilities_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServerCapabilities_descriptor();
inline const ::std::string& ServerCapabilities_Name(ServerCapabilities value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServerCapabilities_descriptor(), value);
}
inline bool ServerCapabilities_Parse(
    const ::std::string& name, ServerCapabilities* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServerCapabilities>(
    ServerCapabilities_descriptor(), name, value);
}
enum ResponseFlags {
  ResponseFlagsUnspecified = 0,
  ReportFullState = 1,
  FetchPipelineConfigDetail = 2,
  FetchProcessConfigDetail = 4,
  ResponseFlags_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ResponseFlags_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ResponseFlags_IsValid(int value);
const ResponseFlags ResponseFlags_MIN = ResponseFlagsUnspecified;
const ResponseFlags ResponseFlags_MAX = FetchProcessConfigDetail;
const int ResponseFlags_ARRAYSIZE = ResponseFlags_MAX + 1;

const ::google::protobuf::EnumDescriptor* ResponseFlags_descriptor();
inline const ::std::string& ResponseFlags_Name(ResponseFlags value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResponseFlags_descriptor(), value);
}
inline bool ResponseFlags_Parse(
    const ::std::string& name, ResponseFlags* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResponseFlags>(
    ResponseFlags_descriptor(), name, value);
}
// ===================================================================

class AgentGroupTag : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:configserver.proto.v2.AgentGroupTag) */ {
 public:
  AgentGroupTag();
  virtual ~AgentGroupTag();

  AgentGroupTag(const AgentGroupTag& from);

  inline AgentGroupTag& operator=(const AgentGroupTag& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AgentGroupTag(AgentGroupTag&& from) noexcept
    : AgentGroupTag() {
    *this = ::std::move(from);
  }

  inline AgentGroupTag& operator=(AgentGroupTag&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AgentGroupTag& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AgentGroupTag* internal_default_instance() {
    return reinterpret_cast<const AgentGroupTag*>(
               &_AgentGroupTag_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(AgentGroupTag* other);
  friend void swap(AgentGroupTag& a, AgentGroupTag& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AgentGroupTag* New() const final {
    return CreateMaybeMessage<AgentGroupTag>(NULL);
  }

  AgentGroupTag* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AgentGroupTag>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AgentGroupTag& from);
  void MergeFrom(const AgentGroupTag& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgentGroupTag* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:configserver.proto.v2.AgentGroupTag)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_v2_2fagent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:configserver.proto.v2.ConfigInfo) */ {
 public:
  ConfigInfo();
  virtual ~ConfigInfo();

  ConfigInfo(const ConfigInfo& from);

  inline ConfigInfo& operator=(const ConfigInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigInfo(ConfigInfo&& from) noexcept
    : ConfigInfo() {
    *this = ::std::move(from);
  }

  inline ConfigInfo& operator=(ConfigInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigInfo* internal_default_instance() {
    return reinterpret_cast<const ConfigInfo*>(
               &_ConfigInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ConfigInfo* other);
  friend void swap(ConfigInfo& a, ConfigInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigInfo* New() const final {
    return CreateMaybeMessage<ConfigInfo>(NULL);
  }

  ConfigInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigInfo& from);
  void MergeFrom(const ConfigInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string message = 4;
  void clear_message();
  static const int kMessageFieldNumber = 4;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // int64 version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::int64 version() const;
  void set_version(::google::protobuf::int64 value);

  // .configserver.proto.v2.ConfigStatus status = 3;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::configserver::proto::v2::ConfigStatus status() const;
  void set_status(::configserver::proto::v2::ConfigStatus value);

  // @@protoc_insertion_point(class_scope:configserver.proto.v2.ConfigInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int64 version_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_v2_2fagent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CommandInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:configserver.proto.v2.CommandInfo) */ {
 public:
  CommandInfo();
  virtual ~CommandInfo();

  CommandInfo(const CommandInfo& from);

  inline CommandInfo& operator=(const CommandInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommandInfo(CommandInfo&& from) noexcept
    : CommandInfo() {
    *this = ::std::move(from);
  }

  inline CommandInfo& operator=(CommandInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CommandInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommandInfo* internal_default_instance() {
    return reinterpret_cast<const CommandInfo*>(
               &_CommandInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CommandInfo* other);
  friend void swap(CommandInfo& a, CommandInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommandInfo* New() const final {
    return CreateMaybeMessage<CommandInfo>(NULL);
  }

  CommandInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CommandInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CommandInfo& from);
  void MergeFrom(const CommandInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommandInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string message = 4;
  void clear_message();
  static const int kMessageFieldNumber = 4;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // .configserver.proto.v2.ConfigStatus status = 3;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::configserver::proto::v2::ConfigStatus status() const;
  void set_status(::configserver::proto::v2::ConfigStatus value);

  // @@protoc_insertion_point(class_scope:configserver.proto.v2.CommandInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_v2_2fagent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AgentAttributes_ExtrasEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<AgentAttributes_ExtrasEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<AgentAttributes_ExtrasEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  AgentAttributes_ExtrasEntry_DoNotUse();
  AgentAttributes_ExtrasEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const AgentAttributes_ExtrasEntry_DoNotUse& other);
  static const AgentAttributes_ExtrasEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const AgentAttributes_ExtrasEntry_DoNotUse*>(&_AgentAttributes_ExtrasEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class AgentAttributes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:configserver.proto.v2.AgentAttributes) */ {
 public:
  AgentAttributes();
  virtual ~AgentAttributes();

  AgentAttributes(const AgentAttributes& from);

  inline AgentAttributes& operator=(const AgentAttributes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AgentAttributes(AgentAttributes&& from) noexcept
    : AgentAttributes() {
    *this = ::std::move(from);
  }

  inline AgentAttributes& operator=(AgentAttributes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AgentAttributes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AgentAttributes* internal_default_instance() {
    return reinterpret_cast<const AgentAttributes*>(
               &_AgentAttributes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(AgentAttributes* other);
  friend void swap(AgentAttributes& a, AgentAttributes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AgentAttributes* New() const final {
    return CreateMaybeMessage<AgentAttributes>(NULL);
  }

  AgentAttributes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AgentAttributes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AgentAttributes& from);
  void MergeFrom(const AgentAttributes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgentAttributes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bytes> extras = 100;
  int extras_size() const;
  void clear_extras();
  static const int kExtrasFieldNumber = 100;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      extras() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_extras();

  // bytes version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const void* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // bytes ip = 2;
  void clear_ip();
  static const int kIpFieldNumber = 2;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const void* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // bytes hostname = 3;
  void clear_hostname();
  static const int kHostnameFieldNumber = 3;
  const ::std::string& hostname() const;
  void set_hostname(const ::std::string& value);
  #if LANG_CXX11
  void set_hostname(::std::string&& value);
  #endif
  void set_hostname(const char* value);
  void set_hostname(const void* value, size_t size);
  ::std::string* mutable_hostname();
  ::std::string* release_hostname();
  void set_allocated_hostname(::std::string* hostname);

  // @@protoc_insertion_point(class_scope:configserver.proto.v2.AgentAttributes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      AgentAttributes_ExtrasEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > extras_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr hostname_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_v2_2fagent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HeartBeatRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:configserver.proto.v2.HeartBeatRequest) */ {
 public:
  HeartBeatRequest();
  virtual ~HeartBeatRequest();

  HeartBeatRequest(const HeartBeatRequest& from);

  inline HeartBeatRequest& operator=(const HeartBeatRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeartBeatRequest(HeartBeatRequest&& from) noexcept
    : HeartBeatRequest() {
    *this = ::std::move(from);
  }

  inline HeartBeatRequest& operator=(HeartBeatRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeatRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeartBeatRequest* internal_default_instance() {
    return reinterpret_cast<const HeartBeatRequest*>(
               &_HeartBeatRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(HeartBeatRequest* other);
  friend void swap(HeartBeatRequest& a, HeartBeatRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeartBeatRequest* New() const final {
    return CreateMaybeMessage<HeartBeatRequest>(NULL);
  }

  HeartBeatRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HeartBeatRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HeartBeatRequest& from);
  void MergeFrom(const HeartBeatRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeartBeatRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .configserver.proto.v2.AgentGroupTag tags = 7;
  int tags_size() const;
  void clear_tags();
  static const int kTagsFieldNumber = 7;
  ::configserver::proto::v2::AgentGroupTag* mutable_tags(int index);
  ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::AgentGroupTag >*
      mutable_tags();
  const ::configserver::proto::v2::AgentGroupTag& tags(int index) const;
  ::configserver::proto::v2::AgentGroupTag* add_tags();
  const ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::AgentGroupTag >&
      tags() const;

  // repeated .configserver.proto.v2.ConfigInfo pipeline_configs = 10;
  int pipeline_configs_size() const;
  void clear_pipeline_configs();
  static const int kPipelineConfigsFieldNumber = 10;
  ::configserver::proto::v2::ConfigInfo* mutable_pipeline_configs(int index);
  ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigInfo >*
      mutable_pipeline_configs();
  const ::configserver::proto::v2::ConfigInfo& pipeline_configs(int index) const;
  ::configserver::proto::v2::ConfigInfo* add_pipeline_configs();
  const ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigInfo >&
      pipeline_configs() const;

  // repeated .configserver.proto.v2.ConfigInfo process_configs = 11;
  int process_configs_size() const;
  void clear_process_configs();
  static const int kProcessConfigsFieldNumber = 11;
  ::configserver::proto::v2::ConfigInfo* mutable_process_configs(int index);
  ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigInfo >*
      mutable_process_configs();
  const ::configserver::proto::v2::ConfigInfo& process_configs(int index) const;
  ::configserver::proto::v2::ConfigInfo* add_process_configs();
  const ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigInfo >&
      process_configs() const;

  // repeated .configserver.proto.v2.CommandInfo custom_commands = 12;
  int custom_commands_size() const;
  void clear_custom_commands();
  static const int kCustomCommandsFieldNumber = 12;
  ::configserver::proto::v2::CommandInfo* mutable_custom_commands(int index);
  ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::CommandInfo >*
      mutable_custom_commands();
  const ::configserver::proto::v2::CommandInfo& custom_commands(int index) const;
  ::configserver::proto::v2::CommandInfo* add_custom_commands();
  const ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::CommandInfo >&
      custom_commands() const;

  // bytes request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const void* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // bytes instance_id = 4;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 4;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const void* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // string agent_type = 5;
  void clear_agent_type();
  static const int kAgentTypeFieldNumber = 5;
  const ::std::string& agent_type() const;
  void set_agent_type(const ::std::string& value);
  #if LANG_CXX11
  void set_agent_type(::std::string&& value);
  #endif
  void set_agent_type(const char* value);
  void set_agent_type(const char* value, size_t size);
  ::std::string* mutable_agent_type();
  ::std::string* release_agent_type();
  void set_allocated_agent_type(::std::string* agent_type);

  // string running_status = 8;
  void clear_running_status();
  static const int kRunningStatusFieldNumber = 8;
  const ::std::string& running_status() const;
  void set_running_status(const ::std::string& value);
  #if LANG_CXX11
  void set_running_status(::std::string&& value);
  #endif
  void set_running_status(const char* value);
  void set_running_status(const char* value, size_t size);
  ::std::string* mutable_running_status();
  ::std::string* release_running_status();
  void set_allocated_running_status(::std::string* running_status);

  // bytes opaque = 14;
  void clear_opaque();
  static const int kOpaqueFieldNumber = 14;
  const ::std::string& opaque() const;
  void set_opaque(const ::std::string& value);
  #if LANG_CXX11
  void set_opaque(::std::string&& value);
  #endif
  void set_opaque(const char* value);
  void set_opaque(const void* value, size_t size);
  ::std::string* mutable_opaque();
  ::std::string* release_opaque();
  void set_allocated_opaque(::std::string* opaque);

  // .configserver.proto.v2.AgentAttributes attributes = 6;
  bool has_attributes() const;
  void clear_attributes();
  static const int kAttributesFieldNumber = 6;
  private:
  const ::configserver::proto::v2::AgentAttributes& _internal_attributes() const;
  public:
  const ::configserver::proto::v2::AgentAttributes& attributes() const;
  ::configserver::proto::v2::AgentAttributes* release_attributes();
  ::configserver::proto::v2::AgentAttributes* mutable_attributes();
  void set_allocated_attributes(::configserver::proto::v2::AgentAttributes* attributes);

  // uint64 sequence_num = 2;
  void clear_sequence_num();
  static const int kSequenceNumFieldNumber = 2;
  ::google::protobuf::uint64 sequence_num() const;
  void set_sequence_num(::google::protobuf::uint64 value);

  // uint64 capabilities = 3;
  void clear_capabilities();
  static const int kCapabilitiesFieldNumber = 3;
  ::google::protobuf::uint64 capabilities() const;
  void set_capabilities(::google::protobuf::uint64 value);

  // int64 startup_time = 9;
  void clear_startup_time();
  static const int kStartupTimeFieldNumber = 9;
  ::google::protobuf::int64 startup_time() const;
  void set_startup_time(::google::protobuf::int64 value);

  // uint64 flags = 13;
  void clear_flags();
  static const int kFlagsFieldNumber = 13;
  ::google::protobuf::uint64 flags() const;
  void set_flags(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:configserver.proto.v2.HeartBeatRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::AgentGroupTag > tags_;
  ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigInfo > pipeline_configs_;
  ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigInfo > process_configs_;
  ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::CommandInfo > custom_commands_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  ::google::protobuf::internal::ArenaStringPtr agent_type_;
  ::google::protobuf::internal::ArenaStringPtr running_status_;
  ::google::protobuf::internal::ArenaStringPtr opaque_;
  ::configserver::proto::v2::AgentAttributes* attributes_;
  ::google::protobuf::uint64 sequence_num_;
  ::google::protobuf::uint64 capabilities_;
  ::google::protobuf::int64 startup_time_;
  ::google::protobuf::uint64 flags_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_v2_2fagent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfigDetail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:configserver.proto.v2.ConfigDetail) */ {
 public:
  ConfigDetail();
  virtual ~ConfigDetail();

  ConfigDetail(const ConfigDetail& from);

  inline ConfigDetail& operator=(const ConfigDetail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigDetail(ConfigDetail&& from) noexcept
    : ConfigDetail() {
    *this = ::std::move(from);
  }

  inline ConfigDetail& operator=(ConfigDetail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigDetail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigDetail* internal_default_instance() {
    return reinterpret_cast<const ConfigDetail*>(
               &_ConfigDetail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ConfigDetail* other);
  friend void swap(ConfigDetail& a, ConfigDetail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigDetail* New() const final {
    return CreateMaybeMessage<ConfigDetail>(NULL);
  }

  ConfigDetail* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigDetail>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigDetail& from);
  void MergeFrom(const ConfigDetail& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigDetail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes detail = 3;
  void clear_detail();
  static const int kDetailFieldNumber = 3;
  const ::std::string& detail() const;
  void set_detail(const ::std::string& value);
  #if LANG_CXX11
  void set_detail(::std::string&& value);
  #endif
  void set_detail(const char* value);
  void set_detail(const void* value, size_t size);
  ::std::string* mutable_detail();
  ::std::string* release_detail();
  void set_allocated_detail(::std::string* detail);

  // int64 version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::int64 version() const;
  void set_version(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:configserver.proto.v2.ConfigDetail)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr detail_;
  ::google::protobuf::int64 version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_v2_2fagent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CommandDetail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:configserver.proto.v2.CommandDetail) */ {
 public:
  CommandDetail();
  virtual ~CommandDetail();

  CommandDetail(const CommandDetail& from);

  inline CommandDetail& operator=(const CommandDetail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommandDetail(CommandDetail&& from) noexcept
    : CommandDetail() {
    *this = ::std::move(from);
  }

  inline CommandDetail& operator=(CommandDetail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CommandDetail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommandDetail* internal_default_instance() {
    return reinterpret_cast<const CommandDetail*>(
               &_CommandDetail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CommandDetail* other);
  friend void swap(CommandDetail& a, CommandDetail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommandDetail* New() const final {
    return CreateMaybeMessage<CommandDetail>(NULL);
  }

  CommandDetail* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CommandDetail>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CommandDetail& from);
  void MergeFrom(const CommandDetail& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommandDetail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes detail = 3;
  void clear_detail();
  static const int kDetailFieldNumber = 3;
  const ::std::string& detail() const;
  void set_detail(const ::std::string& value);
  #if LANG_CXX11
  void set_detail(::std::string&& value);
  #endif
  void set_detail(const char* value);
  void set_detail(const void* value, size_t size);
  ::std::string* mutable_detail();
  ::std::string* release_detail();
  void set_allocated_detail(::std::string* detail);

  // int64 expire_time = 4;
  void clear_expire_time();
  static const int kExpireTimeFieldNumber = 4;
  ::google::protobuf::int64 expire_time() const;
  void set_expire_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:configserver.proto.v2.CommandDetail)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr detail_;
  ::google::protobuf::int64 expire_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_v2_2fagent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerErrorResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:configserver.proto.v2.ServerErrorResponse) */ {
 public:
  ServerErrorResponse();
  virtual ~ServerErrorResponse();

  ServerErrorResponse(const ServerErrorResponse& from);

  inline ServerErrorResponse& operator=(const ServerErrorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerErrorResponse(ServerErrorResponse&& from) noexcept
    : ServerErrorResponse() {
    *this = ::std::move(from);
  }

  inline ServerErrorResponse& operator=(ServerErrorResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerErrorResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServerErrorResponse* internal_default_instance() {
    return reinterpret_cast<const ServerErrorResponse*>(
               &_ServerErrorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(ServerErrorResponse* other);
  friend void swap(ServerErrorResponse& a, ServerErrorResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerErrorResponse* New() const final {
    return CreateMaybeMessage<ServerErrorResponse>(NULL);
  }

  ServerErrorResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ServerErrorResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ServerErrorResponse& from);
  void MergeFrom(const ServerErrorResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerErrorResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string error_message = 2;
  void clear_error_message();
  static const int kErrorMessageFieldNumber = 2;
  const ::std::string& error_message() const;
  void set_error_message(const ::std::string& value);
  #if LANG_CXX11
  void set_error_message(::std::string&& value);
  #endif
  void set_error_message(const char* value);
  void set_error_message(const char* value, size_t size);
  ::std::string* mutable_error_message();
  ::std::string* release_error_message();
  void set_allocated_error_message(::std::string* error_message);

  // int32 error_code = 1;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::int32 error_code() const;
  void set_error_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:configserver.proto.v2.ServerErrorResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr error_message_;
  ::google::protobuf::int32 error_code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_v2_2fagent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HeartBeatResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:configserver.proto.v2.HeartBeatResponse) */ {
 public:
  HeartBeatResponse();
  virtual ~HeartBeatResponse();

  HeartBeatResponse(const HeartBeatResponse& from);

  inline HeartBeatResponse& operator=(const HeartBeatResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeartBeatResponse(HeartBeatResponse&& from) noexcept
    : HeartBeatResponse() {
    *this = ::std::move(from);
  }

  inline HeartBeatResponse& operator=(HeartBeatResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeatResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeartBeatResponse* internal_default_instance() {
    return reinterpret_cast<const HeartBeatResponse*>(
               &_HeartBeatResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(HeartBeatResponse* other);
  friend void swap(HeartBeatResponse& a, HeartBeatResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeartBeatResponse* New() const final {
    return CreateMaybeMessage<HeartBeatResponse>(NULL);
  }

  HeartBeatResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HeartBeatResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HeartBeatResponse& from);
  void MergeFrom(const HeartBeatResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeartBeatResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .configserver.proto.v2.ConfigDetail pipeline_config_updates = 4;
  int pipeline_config_updates_size() const;
  void clear_pipeline_config_updates();
  static const int kPipelineConfigUpdatesFieldNumber = 4;
  ::configserver::proto::v2::ConfigDetail* mutable_pipeline_config_updates(int index);
  ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigDetail >*
      mutable_pipeline_config_updates();
  const ::configserver::proto::v2::ConfigDetail& pipeline_config_updates(int index) const;
  ::configserver::proto::v2::ConfigDetail* add_pipeline_config_updates();
  const ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigDetail >&
      pipeline_config_updates() const;

  // repeated .configserver.proto.v2.ConfigDetail process_config_updates = 5;
  int process_config_updates_size() const;
  void clear_process_config_updates();
  static const int kProcessConfigUpdatesFieldNumber = 5;
  ::configserver::proto::v2::ConfigDetail* mutable_process_config_updates(int index);
  ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigDetail >*
      mutable_process_config_updates();
  const ::configserver::proto::v2::ConfigDetail& process_config_updates(int index) const;
  ::configserver::proto::v2::ConfigDetail* add_process_config_updates();
  const ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigDetail >&
      process_config_updates() const;

  // repeated .configserver.proto.v2.CommandDetail custom_command_updates = 6;
  int custom_command_updates_size() const;
  void clear_custom_command_updates();
  static const int kCustomCommandUpdatesFieldNumber = 6;
  ::configserver::proto::v2::CommandDetail* mutable_custom_command_updates(int index);
  ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::CommandDetail >*
      mutable_custom_command_updates();
  const ::configserver::proto::v2::CommandDetail& custom_command_updates(int index) const;
  ::configserver::proto::v2::CommandDetail* add_custom_command_updates();
  const ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::CommandDetail >&
      custom_command_updates() const;

  // bytes request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const void* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // bytes opaque = 8;
  void clear_opaque();
  static const int kOpaqueFieldNumber = 8;
  const ::std::string& opaque() const;
  void set_opaque(const ::std::string& value);
  #if LANG_CXX11
  void set_opaque(::std::string&& value);
  #endif
  void set_opaque(const char* value);
  void set_opaque(const void* value, size_t size);
  ::std::string* mutable_opaque();
  ::std::string* release_opaque();
  void set_allocated_opaque(::std::string* opaque);

  // .configserver.proto.v2.ServerErrorResponse error_response = 2;
  bool has_error_response() const;
  void clear_error_response();
  static const int kErrorResponseFieldNumber = 2;
  private:
  const ::configserver::proto::v2::ServerErrorResponse& _internal_error_response() const;
  public:
  const ::configserver::proto::v2::ServerErrorResponse& error_response() const;
  ::configserver::proto::v2::ServerErrorResponse* release_error_response();
  ::configserver::proto::v2::ServerErrorResponse* mutable_error_response();
  void set_allocated_error_response(::configserver::proto::v2::ServerErrorResponse* error_response);

  // uint64 capabilities = 3;
  void clear_capabilities();
  static const int kCapabilitiesFieldNumber = 3;
  ::google::protobuf::uint64 capabilities() const;
  void set_capabilities(::google::protobuf::uint64 value);

  // uint64 flags = 7;
  void clear_flags();
  static const int kFlagsFieldNumber = 7;
  ::google::protobuf::uint64 flags() const;
  void set_flags(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:configserver.proto.v2.HeartBeatResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigDetail > pipeline_config_updates_;
  ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigDetail > process_config_updates_;
  ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::CommandDetail > custom_command_updates_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::protobuf::internal::ArenaStringPtr opaque_;
  ::configserver::proto::v2::ServerErrorResponse* error_response_;
  ::google::protobuf::uint64 capabilities_;
  ::google::protobuf::uint64 flags_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_v2_2fagent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FetchConfigRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:configserver.proto.v2.FetchConfigRequest) */ {
 public:
  FetchConfigRequest();
  virtual ~FetchConfigRequest();

  FetchConfigRequest(const FetchConfigRequest& from);

  inline FetchConfigRequest& operator=(const FetchConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FetchConfigRequest(FetchConfigRequest&& from) noexcept
    : FetchConfigRequest() {
    *this = ::std::move(from);
  }

  inline FetchConfigRequest& operator=(FetchConfigRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FetchConfigRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FetchConfigRequest* internal_default_instance() {
    return reinterpret_cast<const FetchConfigRequest*>(
               &_FetchConfigRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(FetchConfigRequest* other);
  friend void swap(FetchConfigRequest& a, FetchConfigRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FetchConfigRequest* New() const final {
    return CreateMaybeMessage<FetchConfigRequest>(NULL);
  }

  FetchConfigRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FetchConfigRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FetchConfigRequest& from);
  void MergeFrom(const FetchConfigRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FetchConfigRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .configserver.proto.v2.ConfigInfo req_configs = 3;
  int req_configs_size() const;
  void clear_req_configs();
  static const int kReqConfigsFieldNumber = 3;
  ::configserver::proto::v2::ConfigInfo* mutable_req_configs(int index);
  ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigInfo >*
      mutable_req_configs();
  const ::configserver::proto::v2::ConfigInfo& req_configs(int index) const;
  ::configserver::proto::v2::ConfigInfo* add_req_configs();
  const ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigInfo >&
      req_configs() const;

  // bytes request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const void* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // bytes instance_id = 2;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 2;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const void* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // @@protoc_insertion_point(class_scope:configserver.proto.v2.FetchConfigRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigInfo > req_configs_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_v2_2fagent_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FetchConfigResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:configserver.proto.v2.FetchConfigResponse) */ {
 public:
  FetchConfigResponse();
  virtual ~FetchConfigResponse();

  FetchConfigResponse(const FetchConfigResponse& from);

  inline FetchConfigResponse& operator=(const FetchConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FetchConfigResponse(FetchConfigResponse&& from) noexcept
    : FetchConfigResponse() {
    *this = ::std::move(from);
  }

  inline FetchConfigResponse& operator=(FetchConfigResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FetchConfigResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FetchConfigResponse* internal_default_instance() {
    return reinterpret_cast<const FetchConfigResponse*>(
               &_FetchConfigResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(FetchConfigResponse* other);
  friend void swap(FetchConfigResponse& a, FetchConfigResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FetchConfigResponse* New() const final {
    return CreateMaybeMessage<FetchConfigResponse>(NULL);
  }

  FetchConfigResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FetchConfigResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FetchConfigResponse& from);
  void MergeFrom(const FetchConfigResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FetchConfigResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .configserver.proto.v2.ConfigDetail config_details = 3;
  int config_details_size() const;
  void clear_config_details();
  static const int kConfigDetailsFieldNumber = 3;
  ::configserver::proto::v2::ConfigDetail* mutable_config_details(int index);
  ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigDetail >*
      mutable_config_details();
  const ::configserver::proto::v2::ConfigDetail& config_details(int index) const;
  ::configserver::proto::v2::ConfigDetail* add_config_details();
  const ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigDetail >&
      config_details() const;

  // bytes request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const void* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // .configserver.proto.v2.ServerErrorResponse error_response = 2;
  bool has_error_response() const;
  void clear_error_response();
  static const int kErrorResponseFieldNumber = 2;
  private:
  const ::configserver::proto::v2::ServerErrorResponse& _internal_error_response() const;
  public:
  const ::configserver::proto::v2::ServerErrorResponse& error_response() const;
  ::configserver::proto::v2::ServerErrorResponse* release_error_response();
  ::configserver::proto::v2::ServerErrorResponse* mutable_error_response();
  void set_allocated_error_response(::configserver::proto::v2::ServerErrorResponse* error_response);

  // @@protoc_insertion_point(class_scope:configserver.proto.v2.FetchConfigResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigDetail > config_details_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::configserver::proto::v2::ServerErrorResponse* error_response_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_v2_2fagent_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AgentGroupTag

// string name = 1;
inline void AgentGroupTag::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AgentGroupTag::name() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.AgentGroupTag.name)
  return name_.GetNoArena();
}
inline void AgentGroupTag::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.v2.AgentGroupTag.name)
}
#if LANG_CXX11
inline void AgentGroupTag::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.v2.AgentGroupTag.name)
}
#endif
inline void AgentGroupTag::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.v2.AgentGroupTag.name)
}
inline void AgentGroupTag::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.v2.AgentGroupTag.name)
}
inline ::std::string* AgentGroupTag::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.AgentGroupTag.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AgentGroupTag::release_name() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.AgentGroupTag.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AgentGroupTag::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.AgentGroupTag.name)
}

// string value = 2;
inline void AgentGroupTag::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AgentGroupTag::value() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.AgentGroupTag.value)
  return value_.GetNoArena();
}
inline void AgentGroupTag::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.v2.AgentGroupTag.value)
}
#if LANG_CXX11
inline void AgentGroupTag::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.v2.AgentGroupTag.value)
}
#endif
inline void AgentGroupTag::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.v2.AgentGroupTag.value)
}
inline void AgentGroupTag::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.v2.AgentGroupTag.value)
}
inline ::std::string* AgentGroupTag::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.AgentGroupTag.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AgentGroupTag::release_value() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.AgentGroupTag.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AgentGroupTag::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.AgentGroupTag.value)
}

// -------------------------------------------------------------------

// ConfigInfo

// string name = 1;
inline void ConfigInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigInfo::name() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.ConfigInfo.name)
  return name_.GetNoArena();
}
inline void ConfigInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.v2.ConfigInfo.name)
}
#if LANG_CXX11
inline void ConfigInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.v2.ConfigInfo.name)
}
#endif
inline void ConfigInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.v2.ConfigInfo.name)
}
inline void ConfigInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.v2.ConfigInfo.name)
}
inline ::std::string* ConfigInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.ConfigInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigInfo::release_name() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.ConfigInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.ConfigInfo.name)
}

// int64 version = 2;
inline void ConfigInfo::clear_version() {
  version_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ConfigInfo::version() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.ConfigInfo.version)
  return version_;
}
inline void ConfigInfo::set_version(::google::protobuf::int64 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:configserver.proto.v2.ConfigInfo.version)
}

// .configserver.proto.v2.ConfigStatus status = 3;
inline void ConfigInfo::clear_status() {
  status_ = 0;
}
inline ::configserver::proto::v2::ConfigStatus ConfigInfo::status() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.ConfigInfo.status)
  return static_cast< ::configserver::proto::v2::ConfigStatus >(status_);
}
inline void ConfigInfo::set_status(::configserver::proto::v2::ConfigStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:configserver.proto.v2.ConfigInfo.status)
}

// string message = 4;
inline void ConfigInfo::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigInfo::message() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.ConfigInfo.message)
  return message_.GetNoArena();
}
inline void ConfigInfo::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.v2.ConfigInfo.message)
}
#if LANG_CXX11
inline void ConfigInfo::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.v2.ConfigInfo.message)
}
#endif
inline void ConfigInfo::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.v2.ConfigInfo.message)
}
inline void ConfigInfo::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.v2.ConfigInfo.message)
}
inline ::std::string* ConfigInfo::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.ConfigInfo.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigInfo::release_message() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.ConfigInfo.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigInfo::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.ConfigInfo.message)
}

// -------------------------------------------------------------------

// CommandInfo

// string type = 1;
inline void CommandInfo::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommandInfo::type() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.CommandInfo.type)
  return type_.GetNoArena();
}
inline void CommandInfo::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.v2.CommandInfo.type)
}
#if LANG_CXX11
inline void CommandInfo::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.v2.CommandInfo.type)
}
#endif
inline void CommandInfo::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.v2.CommandInfo.type)
}
inline void CommandInfo::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.v2.CommandInfo.type)
}
inline ::std::string* CommandInfo::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.CommandInfo.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommandInfo::release_type() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.CommandInfo.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommandInfo::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.CommandInfo.type)
}

// string name = 2;
inline void CommandInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommandInfo::name() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.CommandInfo.name)
  return name_.GetNoArena();
}
inline void CommandInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.v2.CommandInfo.name)
}
#if LANG_CXX11
inline void CommandInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.v2.CommandInfo.name)
}
#endif
inline void CommandInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.v2.CommandInfo.name)
}
inline void CommandInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.v2.CommandInfo.name)
}
inline ::std::string* CommandInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.CommandInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommandInfo::release_name() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.CommandInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommandInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.CommandInfo.name)
}

// .configserver.proto.v2.ConfigStatus status = 3;
inline void CommandInfo::clear_status() {
  status_ = 0;
}
inline ::configserver::proto::v2::ConfigStatus CommandInfo::status() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.CommandInfo.status)
  return static_cast< ::configserver::proto::v2::ConfigStatus >(status_);
}
inline void CommandInfo::set_status(::configserver::proto::v2::ConfigStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:configserver.proto.v2.CommandInfo.status)
}

// string message = 4;
inline void CommandInfo::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommandInfo::message() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.CommandInfo.message)
  return message_.GetNoArena();
}
inline void CommandInfo::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.v2.CommandInfo.message)
}
#if LANG_CXX11
inline void CommandInfo::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.v2.CommandInfo.message)
}
#endif
inline void CommandInfo::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.v2.CommandInfo.message)
}
inline void CommandInfo::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.v2.CommandInfo.message)
}
inline ::std::string* CommandInfo::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.CommandInfo.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommandInfo::release_message() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.CommandInfo.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommandInfo::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.CommandInfo.message)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AgentAttributes

// bytes version = 1;
inline void AgentAttributes::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AgentAttributes::version() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.AgentAttributes.version)
  return version_.GetNoArena();
}
inline void AgentAttributes::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.v2.AgentAttributes.version)
}
#if LANG_CXX11
inline void AgentAttributes::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.v2.AgentAttributes.version)
}
#endif
inline void AgentAttributes::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.v2.AgentAttributes.version)
}
inline void AgentAttributes::set_version(const void* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.v2.AgentAttributes.version)
}
inline ::std::string* AgentAttributes::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.AgentAttributes.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AgentAttributes::release_version() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.AgentAttributes.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AgentAttributes::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.AgentAttributes.version)
}

// bytes ip = 2;
inline void AgentAttributes::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AgentAttributes::ip() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.AgentAttributes.ip)
  return ip_.GetNoArena();
}
inline void AgentAttributes::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.v2.AgentAttributes.ip)
}
#if LANG_CXX11
inline void AgentAttributes::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.v2.AgentAttributes.ip)
}
#endif
inline void AgentAttributes::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.v2.AgentAttributes.ip)
}
inline void AgentAttributes::set_ip(const void* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.v2.AgentAttributes.ip)
}
inline ::std::string* AgentAttributes::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.AgentAttributes.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AgentAttributes::release_ip() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.AgentAttributes.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AgentAttributes::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.AgentAttributes.ip)
}

// bytes hostname = 3;
inline void AgentAttributes::clear_hostname() {
  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AgentAttributes::hostname() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.AgentAttributes.hostname)
  return hostname_.GetNoArena();
}
inline void AgentAttributes::set_hostname(const ::std::string& value) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.v2.AgentAttributes.hostname)
}
#if LANG_CXX11
inline void AgentAttributes::set_hostname(::std::string&& value) {
  
  hostname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.v2.AgentAttributes.hostname)
}
#endif
inline void AgentAttributes::set_hostname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.v2.AgentAttributes.hostname)
}
inline void AgentAttributes::set_hostname(const void* value, size_t size) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.v2.AgentAttributes.hostname)
}
inline ::std::string* AgentAttributes::mutable_hostname() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.AgentAttributes.hostname)
  return hostname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AgentAttributes::release_hostname() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.AgentAttributes.hostname)
  
  return hostname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AgentAttributes::set_allocated_hostname(::std::string* hostname) {
  if (hostname != NULL) {
    
  } else {
    
  }
  hostname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostname);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.AgentAttributes.hostname)
}

// map<string, bytes> extras = 100;
inline int AgentAttributes::extras_size() const {
  return extras_.size();
}
inline void AgentAttributes::clear_extras() {
  extras_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
AgentAttributes::extras() const {
  // @@protoc_insertion_point(field_map:configserver.proto.v2.AgentAttributes.extras)
  return extras_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
AgentAttributes::mutable_extras() {
  // @@protoc_insertion_point(field_mutable_map:configserver.proto.v2.AgentAttributes.extras)
  return extras_.MutableMap();
}

// -------------------------------------------------------------------

// HeartBeatRequest

// bytes request_id = 1;
inline void HeartBeatRequest::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HeartBeatRequest::request_id() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.HeartBeatRequest.request_id)
  return request_id_.GetNoArena();
}
inline void HeartBeatRequest::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.v2.HeartBeatRequest.request_id)
}
#if LANG_CXX11
inline void HeartBeatRequest::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.v2.HeartBeatRequest.request_id)
}
#endif
inline void HeartBeatRequest::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.v2.HeartBeatRequest.request_id)
}
inline void HeartBeatRequest::set_request_id(const void* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.v2.HeartBeatRequest.request_id)
}
inline ::std::string* HeartBeatRequest::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.HeartBeatRequest.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HeartBeatRequest::release_request_id() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.HeartBeatRequest.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HeartBeatRequest::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.HeartBeatRequest.request_id)
}

// uint64 sequence_num = 2;
inline void HeartBeatRequest::clear_sequence_num() {
  sequence_num_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 HeartBeatRequest::sequence_num() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.HeartBeatRequest.sequence_num)
  return sequence_num_;
}
inline void HeartBeatRequest::set_sequence_num(::google::protobuf::uint64 value) {
  
  sequence_num_ = value;
  // @@protoc_insertion_point(field_set:configserver.proto.v2.HeartBeatRequest.sequence_num)
}

// uint64 capabilities = 3;
inline void HeartBeatRequest::clear_capabilities() {
  capabilities_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 HeartBeatRequest::capabilities() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.HeartBeatRequest.capabilities)
  return capabilities_;
}
inline void HeartBeatRequest::set_capabilities(::google::protobuf::uint64 value) {
  
  capabilities_ = value;
  // @@protoc_insertion_point(field_set:configserver.proto.v2.HeartBeatRequest.capabilities)
}

// bytes instance_id = 4;
inline void HeartBeatRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HeartBeatRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.HeartBeatRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void HeartBeatRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.v2.HeartBeatRequest.instance_id)
}
#if LANG_CXX11
inline void HeartBeatRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.v2.HeartBeatRequest.instance_id)
}
#endif
inline void HeartBeatRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.v2.HeartBeatRequest.instance_id)
}
inline void HeartBeatRequest::set_instance_id(const void* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.v2.HeartBeatRequest.instance_id)
}
inline ::std::string* HeartBeatRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.HeartBeatRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HeartBeatRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.HeartBeatRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HeartBeatRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.HeartBeatRequest.instance_id)
}

// string agent_type = 5;
inline void HeartBeatRequest::clear_agent_type() {
  agent_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HeartBeatRequest::agent_type() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.HeartBeatRequest.agent_type)
  return agent_type_.GetNoArena();
}
inline void HeartBeatRequest::set_agent_type(const ::std::string& value) {
  
  agent_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.v2.HeartBeatRequest.agent_type)
}
#if LANG_CXX11
inline void HeartBeatRequest::set_agent_type(::std::string&& value) {
  
  agent_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.v2.HeartBeatRequest.agent_type)
}
#endif
inline void HeartBeatRequest::set_agent_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  agent_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.v2.HeartBeatRequest.agent_type)
}
inline void HeartBeatRequest::set_agent_type(const char* value, size_t size) {
  
  agent_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.v2.HeartBeatRequest.agent_type)
}
inline ::std::string* HeartBeatRequest::mutable_agent_type() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.HeartBeatRequest.agent_type)
  return agent_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HeartBeatRequest::release_agent_type() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.HeartBeatRequest.agent_type)
  
  return agent_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HeartBeatRequest::set_allocated_agent_type(::std::string* agent_type) {
  if (agent_type != NULL) {
    
  } else {
    
  }
  agent_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_type);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.HeartBeatRequest.agent_type)
}

// .configserver.proto.v2.AgentAttributes attributes = 6;
inline bool HeartBeatRequest::has_attributes() const {
  return this != internal_default_instance() && attributes_ != NULL;
}
inline void HeartBeatRequest::clear_attributes() {
  if (GetArenaNoVirtual() == NULL && attributes_ != NULL) {
    delete attributes_;
  }
  attributes_ = NULL;
}
inline const ::configserver::proto::v2::AgentAttributes& HeartBeatRequest::_internal_attributes() const {
  return *attributes_;
}
inline const ::configserver::proto::v2::AgentAttributes& HeartBeatRequest::attributes() const {
  const ::configserver::proto::v2::AgentAttributes* p = attributes_;
  // @@protoc_insertion_point(field_get:configserver.proto.v2.HeartBeatRequest.attributes)
  return p != NULL ? *p : *reinterpret_cast<const ::configserver::proto::v2::AgentAttributes*>(
      &::configserver::proto::v2::_AgentAttributes_default_instance_);
}
inline ::configserver::proto::v2::AgentAttributes* HeartBeatRequest::release_attributes() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.HeartBeatRequest.attributes)
  
  ::configserver::proto::v2::AgentAttributes* temp = attributes_;
  attributes_ = NULL;
  return temp;
}
inline ::configserver::proto::v2::AgentAttributes* HeartBeatRequest::mutable_attributes() {
  
  if (attributes_ == NULL) {
    auto* p = CreateMaybeMessage<::configserver::proto::v2::AgentAttributes>(GetArenaNoVirtual());
    attributes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.HeartBeatRequest.attributes)
  return attributes_;
}
inline void HeartBeatRequest::set_allocated_attributes(::configserver::proto::v2::AgentAttributes* attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete attributes_;
  }
  if (attributes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attributes, submessage_arena);
    }
    
  } else {
    
  }
  attributes_ = attributes;
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.HeartBeatRequest.attributes)
}

// repeated .configserver.proto.v2.AgentGroupTag tags = 7;
inline int HeartBeatRequest::tags_size() const {
  return tags_.size();
}
inline void HeartBeatRequest::clear_tags() {
  tags_.Clear();
}
inline ::configserver::proto::v2::AgentGroupTag* HeartBeatRequest::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.HeartBeatRequest.tags)
  return tags_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::AgentGroupTag >*
HeartBeatRequest::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:configserver.proto.v2.HeartBeatRequest.tags)
  return &tags_;
}
inline const ::configserver::proto::v2::AgentGroupTag& HeartBeatRequest::tags(int index) const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.HeartBeatRequest.tags)
  return tags_.Get(index);
}
inline ::configserver::proto::v2::AgentGroupTag* HeartBeatRequest::add_tags() {
  // @@protoc_insertion_point(field_add:configserver.proto.v2.HeartBeatRequest.tags)
  return tags_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::AgentGroupTag >&
HeartBeatRequest::tags() const {
  // @@protoc_insertion_point(field_list:configserver.proto.v2.HeartBeatRequest.tags)
  return tags_;
}

// string running_status = 8;
inline void HeartBeatRequest::clear_running_status() {
  running_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HeartBeatRequest::running_status() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.HeartBeatRequest.running_status)
  return running_status_.GetNoArena();
}
inline void HeartBeatRequest::set_running_status(const ::std::string& value) {
  
  running_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.v2.HeartBeatRequest.running_status)
}
#if LANG_CXX11
inline void HeartBeatRequest::set_running_status(::std::string&& value) {
  
  running_status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.v2.HeartBeatRequest.running_status)
}
#endif
inline void HeartBeatRequest::set_running_status(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  running_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.v2.HeartBeatRequest.running_status)
}
inline void HeartBeatRequest::set_running_status(const char* value, size_t size) {
  
  running_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.v2.HeartBeatRequest.running_status)
}
inline ::std::string* HeartBeatRequest::mutable_running_status() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.HeartBeatRequest.running_status)
  return running_status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HeartBeatRequest::release_running_status() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.HeartBeatRequest.running_status)
  
  return running_status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HeartBeatRequest::set_allocated_running_status(::std::string* running_status) {
  if (running_status != NULL) {
    
  } else {
    
  }
  running_status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), running_status);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.HeartBeatRequest.running_status)
}

// int64 startup_time = 9;
inline void HeartBeatRequest::clear_startup_time() {
  startup_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HeartBeatRequest::startup_time() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.HeartBeatRequest.startup_time)
  return startup_time_;
}
inline void HeartBeatRequest::set_startup_time(::google::protobuf::int64 value) {
  
  startup_time_ = value;
  // @@protoc_insertion_point(field_set:configserver.proto.v2.HeartBeatRequest.startup_time)
}

// repeated .configserver.proto.v2.ConfigInfo pipeline_configs = 10;
inline int HeartBeatRequest::pipeline_configs_size() const {
  return pipeline_configs_.size();
}
inline void HeartBeatRequest::clear_pipeline_configs() {
  pipeline_configs_.Clear();
}
inline ::configserver::proto::v2::ConfigInfo* HeartBeatRequest::mutable_pipeline_configs(int index) {
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.HeartBeatRequest.pipeline_configs)
  return pipeline_configs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigInfo >*
HeartBeatRequest::mutable_pipeline_configs() {
  // @@protoc_insertion_point(field_mutable_list:configserver.proto.v2.HeartBeatRequest.pipeline_configs)
  return &pipeline_configs_;
}
inline const ::configserver::proto::v2::ConfigInfo& HeartBeatRequest::pipeline_configs(int index) const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.HeartBeatRequest.pipeline_configs)
  return pipeline_configs_.Get(index);
}
inline ::configserver::proto::v2::ConfigInfo* HeartBeatRequest::add_pipeline_configs() {
  // @@protoc_insertion_point(field_add:configserver.proto.v2.HeartBeatRequest.pipeline_configs)
  return pipeline_configs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigInfo >&
HeartBeatRequest::pipeline_configs() const {
  // @@protoc_insertion_point(field_list:configserver.proto.v2.HeartBeatRequest.pipeline_configs)
  return pipeline_configs_;
}

// repeated .configserver.proto.v2.ConfigInfo process_configs = 11;
inline int HeartBeatRequest::process_configs_size() const {
  return process_configs_.size();
}
inline void HeartBeatRequest::clear_process_configs() {
  process_configs_.Clear();
}
inline ::configserver::proto::v2::ConfigInfo* HeartBeatRequest::mutable_process_configs(int index) {
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.HeartBeatRequest.process_configs)
  return process_configs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigInfo >*
HeartBeatRequest::mutable_process_configs() {
  // @@protoc_insertion_point(field_mutable_list:configserver.proto.v2.HeartBeatRequest.process_configs)
  return &process_configs_;
}
inline const ::configserver::proto::v2::ConfigInfo& HeartBeatRequest::process_configs(int index) const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.HeartBeatRequest.process_configs)
  return process_configs_.Get(index);
}
inline ::configserver::proto::v2::ConfigInfo* HeartBeatRequest::add_process_configs() {
  // @@protoc_insertion_point(field_add:configserver.proto.v2.HeartBeatRequest.process_configs)
  return process_configs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigInfo >&
HeartBeatRequest::process_configs() const {
  // @@protoc_insertion_point(field_list:configserver.proto.v2.HeartBeatRequest.process_configs)
  return process_configs_;
}

// repeated .configserver.proto.v2.CommandInfo custom_commands = 12;
inline int HeartBeatRequest::custom_commands_size() const {
  return custom_commands_.size();
}
inline void HeartBeatRequest::clear_custom_commands() {
  custom_commands_.Clear();
}
inline ::configserver::proto::v2::CommandInfo* HeartBeatRequest::mutable_custom_commands(int index) {
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.HeartBeatRequest.custom_commands)
  return custom_commands_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::CommandInfo >*
HeartBeatRequest::mutable_custom_commands() {
  // @@protoc_insertion_point(field_mutable_list:configserver.proto.v2.HeartBeatRequest.custom_commands)
  return &custom_commands_;
}
inline const ::configserver::proto::v2::CommandInfo& HeartBeatRequest::custom_commands(int index) const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.HeartBeatRequest.custom_commands)
  return custom_commands_.Get(index);
}
inline ::configserver::proto::v2::CommandInfo* HeartBeatRequest::add_custom_commands() {
  // @@protoc_insertion_point(field_add:configserver.proto.v2.HeartBeatRequest.custom_commands)
  return custom_commands_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::CommandInfo >&
HeartBeatRequest::custom_commands() const {
  // @@protoc_insertion_point(field_list:configserver.proto.v2.HeartBeatRequest.custom_commands)
  return custom_commands_;
}

// uint64 flags = 13;
inline void HeartBeatRequest::clear_flags() {
  flags_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 HeartBeatRequest::flags() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.HeartBeatRequest.flags)
  return flags_;
}
inline void HeartBeatRequest::set_flags(::google::protobuf::uint64 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:configserver.proto.v2.HeartBeatRequest.flags)
}

// bytes opaque = 14;
inline void HeartBeatRequest::clear_opaque() {
  opaque_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HeartBeatRequest::opaque() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.HeartBeatRequest.opaque)
  return opaque_.GetNoArena();
}
inline void HeartBeatRequest::set_opaque(const ::std::string& value) {
  
  opaque_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.v2.HeartBeatRequest.opaque)
}
#if LANG_CXX11
inline void HeartBeatRequest::set_opaque(::std::string&& value) {
  
  opaque_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.v2.HeartBeatRequest.opaque)
}
#endif
inline void HeartBeatRequest::set_opaque(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  opaque_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.v2.HeartBeatRequest.opaque)
}
inline void HeartBeatRequest::set_opaque(const void* value, size_t size) {
  
  opaque_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.v2.HeartBeatRequest.opaque)
}
inline ::std::string* HeartBeatRequest::mutable_opaque() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.HeartBeatRequest.opaque)
  return opaque_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HeartBeatRequest::release_opaque() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.HeartBeatRequest.opaque)
  
  return opaque_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HeartBeatRequest::set_allocated_opaque(::std::string* opaque) {
  if (opaque != NULL) {
    
  } else {
    
  }
  opaque_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), opaque);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.HeartBeatRequest.opaque)
}

// -------------------------------------------------------------------

// ConfigDetail

// string name = 1;
inline void ConfigDetail::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigDetail::name() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.ConfigDetail.name)
  return name_.GetNoArena();
}
inline void ConfigDetail::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.v2.ConfigDetail.name)
}
#if LANG_CXX11
inline void ConfigDetail::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.v2.ConfigDetail.name)
}
#endif
inline void ConfigDetail::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.v2.ConfigDetail.name)
}
inline void ConfigDetail::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.v2.ConfigDetail.name)
}
inline ::std::string* ConfigDetail::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.ConfigDetail.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigDetail::release_name() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.ConfigDetail.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigDetail::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.ConfigDetail.name)
}

// int64 version = 2;
inline void ConfigDetail::clear_version() {
  version_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ConfigDetail::version() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.ConfigDetail.version)
  return version_;
}
inline void ConfigDetail::set_version(::google::protobuf::int64 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:configserver.proto.v2.ConfigDetail.version)
}

// bytes detail = 3;
inline void ConfigDetail::clear_detail() {
  detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigDetail::detail() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.ConfigDetail.detail)
  return detail_.GetNoArena();
}
inline void ConfigDetail::set_detail(const ::std::string& value) {
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.v2.ConfigDetail.detail)
}
#if LANG_CXX11
inline void ConfigDetail::set_detail(::std::string&& value) {
  
  detail_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.v2.ConfigDetail.detail)
}
#endif
inline void ConfigDetail::set_detail(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.v2.ConfigDetail.detail)
}
inline void ConfigDetail::set_detail(const void* value, size_t size) {
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.v2.ConfigDetail.detail)
}
inline ::std::string* ConfigDetail::mutable_detail() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.ConfigDetail.detail)
  return detail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigDetail::release_detail() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.ConfigDetail.detail)
  
  return detail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigDetail::set_allocated_detail(::std::string* detail) {
  if (detail != NULL) {
    
  } else {
    
  }
  detail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detail);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.ConfigDetail.detail)
}

// -------------------------------------------------------------------

// CommandDetail

// string type = 1;
inline void CommandDetail::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommandDetail::type() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.CommandDetail.type)
  return type_.GetNoArena();
}
inline void CommandDetail::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.v2.CommandDetail.type)
}
#if LANG_CXX11
inline void CommandDetail::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.v2.CommandDetail.type)
}
#endif
inline void CommandDetail::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.v2.CommandDetail.type)
}
inline void CommandDetail::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.v2.CommandDetail.type)
}
inline ::std::string* CommandDetail::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.CommandDetail.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommandDetail::release_type() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.CommandDetail.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommandDetail::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.CommandDetail.type)
}

// string name = 2;
inline void CommandDetail::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommandDetail::name() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.CommandDetail.name)
  return name_.GetNoArena();
}
inline void CommandDetail::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.v2.CommandDetail.name)
}
#if LANG_CXX11
inline void CommandDetail::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.v2.CommandDetail.name)
}
#endif
inline void CommandDetail::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.v2.CommandDetail.name)
}
inline void CommandDetail::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.v2.CommandDetail.name)
}
inline ::std::string* CommandDetail::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.CommandDetail.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommandDetail::release_name() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.CommandDetail.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommandDetail::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.CommandDetail.name)
}

// bytes detail = 3;
inline void CommandDetail::clear_detail() {
  detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommandDetail::detail() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.CommandDetail.detail)
  return detail_.GetNoArena();
}
inline void CommandDetail::set_detail(const ::std::string& value) {
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.v2.CommandDetail.detail)
}
#if LANG_CXX11
inline void CommandDetail::set_detail(::std::string&& value) {
  
  detail_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.v2.CommandDetail.detail)
}
#endif
inline void CommandDetail::set_detail(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.v2.CommandDetail.detail)
}
inline void CommandDetail::set_detail(const void* value, size_t size) {
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.v2.CommandDetail.detail)
}
inline ::std::string* CommandDetail::mutable_detail() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.CommandDetail.detail)
  return detail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommandDetail::release_detail() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.CommandDetail.detail)
  
  return detail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommandDetail::set_allocated_detail(::std::string* detail) {
  if (detail != NULL) {
    
  } else {
    
  }
  detail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detail);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.CommandDetail.detail)
}

// int64 expire_time = 4;
inline void CommandDetail::clear_expire_time() {
  expire_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CommandDetail::expire_time() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.CommandDetail.expire_time)
  return expire_time_;
}
inline void CommandDetail::set_expire_time(::google::protobuf::int64 value) {
  
  expire_time_ = value;
  // @@protoc_insertion_point(field_set:configserver.proto.v2.CommandDetail.expire_time)
}

// -------------------------------------------------------------------

// ServerErrorResponse

// int32 error_code = 1;
inline void ServerErrorResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::google::protobuf::int32 ServerErrorResponse::error_code() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.ServerErrorResponse.error_code)
  return error_code_;
}
inline void ServerErrorResponse::set_error_code(::google::protobuf::int32 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:configserver.proto.v2.ServerErrorResponse.error_code)
}

// string error_message = 2;
inline void ServerErrorResponse::clear_error_message() {
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ServerErrorResponse::error_message() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.ServerErrorResponse.error_message)
  return error_message_.GetNoArena();
}
inline void ServerErrorResponse::set_error_message(const ::std::string& value) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.v2.ServerErrorResponse.error_message)
}
#if LANG_CXX11
inline void ServerErrorResponse::set_error_message(::std::string&& value) {
  
  error_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.v2.ServerErrorResponse.error_message)
}
#endif
inline void ServerErrorResponse::set_error_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.v2.ServerErrorResponse.error_message)
}
inline void ServerErrorResponse::set_error_message(const char* value, size_t size) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.v2.ServerErrorResponse.error_message)
}
inline ::std::string* ServerErrorResponse::mutable_error_message() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.ServerErrorResponse.error_message)
  return error_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServerErrorResponse::release_error_message() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.ServerErrorResponse.error_message)
  
  return error_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerErrorResponse::set_allocated_error_message(::std::string* error_message) {
  if (error_message != NULL) {
    
  } else {
    
  }
  error_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_message);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.ServerErrorResponse.error_message)
}

// -------------------------------------------------------------------

// HeartBeatResponse

// bytes request_id = 1;
inline void HeartBeatResponse::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HeartBeatResponse::request_id() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.HeartBeatResponse.request_id)
  return request_id_.GetNoArena();
}
inline void HeartBeatResponse::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.v2.HeartBeatResponse.request_id)
}
#if LANG_CXX11
inline void HeartBeatResponse::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.v2.HeartBeatResponse.request_id)
}
#endif
inline void HeartBeatResponse::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.v2.HeartBeatResponse.request_id)
}
inline void HeartBeatResponse::set_request_id(const void* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.v2.HeartBeatResponse.request_id)
}
inline ::std::string* HeartBeatResponse::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.HeartBeatResponse.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HeartBeatResponse::release_request_id() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.HeartBeatResponse.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HeartBeatResponse::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.HeartBeatResponse.request_id)
}

// .configserver.proto.v2.ServerErrorResponse error_response = 2;
inline bool HeartBeatResponse::has_error_response() const {
  return this != internal_default_instance() && error_response_ != NULL;
}
inline void HeartBeatResponse::clear_error_response() {
  if (GetArenaNoVirtual() == NULL && error_response_ != NULL) {
    delete error_response_;
  }
  error_response_ = NULL;
}
inline const ::configserver::proto::v2::ServerErrorResponse& HeartBeatResponse::_internal_error_response() const {
  return *error_response_;
}
inline const ::configserver::proto::v2::ServerErrorResponse& HeartBeatResponse::error_response() const {
  const ::configserver::proto::v2::ServerErrorResponse* p = error_response_;
  // @@protoc_insertion_point(field_get:configserver.proto.v2.HeartBeatResponse.error_response)
  return p != NULL ? *p : *reinterpret_cast<const ::configserver::proto::v2::ServerErrorResponse*>(
      &::configserver::proto::v2::_ServerErrorResponse_default_instance_);
}
inline ::configserver::proto::v2::ServerErrorResponse* HeartBeatResponse::release_error_response() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.HeartBeatResponse.error_response)
  
  ::configserver::proto::v2::ServerErrorResponse* temp = error_response_;
  error_response_ = NULL;
  return temp;
}
inline ::configserver::proto::v2::ServerErrorResponse* HeartBeatResponse::mutable_error_response() {
  
  if (error_response_ == NULL) {
    auto* p = CreateMaybeMessage<::configserver::proto::v2::ServerErrorResponse>(GetArenaNoVirtual());
    error_response_ = p;
  }
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.HeartBeatResponse.error_response)
  return error_response_;
}
inline void HeartBeatResponse::set_allocated_error_response(::configserver::proto::v2::ServerErrorResponse* error_response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete error_response_;
  }
  if (error_response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      error_response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, error_response, submessage_arena);
    }
    
  } else {
    
  }
  error_response_ = error_response;
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.HeartBeatResponse.error_response)
}

// uint64 capabilities = 3;
inline void HeartBeatResponse::clear_capabilities() {
  capabilities_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 HeartBeatResponse::capabilities() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.HeartBeatResponse.capabilities)
  return capabilities_;
}
inline void HeartBeatResponse::set_capabilities(::google::protobuf::uint64 value) {
  
  capabilities_ = value;
  // @@protoc_insertion_point(field_set:configserver.proto.v2.HeartBeatResponse.capabilities)
}

// repeated .configserver.proto.v2.ConfigDetail pipeline_config_updates = 4;
inline int HeartBeatResponse::pipeline_config_updates_size() const {
  return pipeline_config_updates_.size();
}
inline void HeartBeatResponse::clear_pipeline_config_updates() {
  pipeline_config_updates_.Clear();
}
inline ::configserver::proto::v2::ConfigDetail* HeartBeatResponse::mutable_pipeline_config_updates(int index) {
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.HeartBeatResponse.pipeline_config_updates)
  return pipeline_config_updates_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigDetail >*
HeartBeatResponse::mutable_pipeline_config_updates() {
  // @@protoc_insertion_point(field_mutable_list:configserver.proto.v2.HeartBeatResponse.pipeline_config_updates)
  return &pipeline_config_updates_;
}
inline const ::configserver::proto::v2::ConfigDetail& HeartBeatResponse::pipeline_config_updates(int index) const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.HeartBeatResponse.pipeline_config_updates)
  return pipeline_config_updates_.Get(index);
}
inline ::configserver::proto::v2::ConfigDetail* HeartBeatResponse::add_pipeline_config_updates() {
  // @@protoc_insertion_point(field_add:configserver.proto.v2.HeartBeatResponse.pipeline_config_updates)
  return pipeline_config_updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigDetail >&
HeartBeatResponse::pipeline_config_updates() const {
  // @@protoc_insertion_point(field_list:configserver.proto.v2.HeartBeatResponse.pipeline_config_updates)
  return pipeline_config_updates_;
}

// repeated .configserver.proto.v2.ConfigDetail process_config_updates = 5;
inline int HeartBeatResponse::process_config_updates_size() const {
  return process_config_updates_.size();
}
inline void HeartBeatResponse::clear_process_config_updates() {
  process_config_updates_.Clear();
}
inline ::configserver::proto::v2::ConfigDetail* HeartBeatResponse::mutable_process_config_updates(int index) {
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.HeartBeatResponse.process_config_updates)
  return process_config_updates_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigDetail >*
HeartBeatResponse::mutable_process_config_updates() {
  // @@protoc_insertion_point(field_mutable_list:configserver.proto.v2.HeartBeatResponse.process_config_updates)
  return &process_config_updates_;
}
inline const ::configserver::proto::v2::ConfigDetail& HeartBeatResponse::process_config_updates(int index) const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.HeartBeatResponse.process_config_updates)
  return process_config_updates_.Get(index);
}
inline ::configserver::proto::v2::ConfigDetail* HeartBeatResponse::add_process_config_updates() {
  // @@protoc_insertion_point(field_add:configserver.proto.v2.HeartBeatResponse.process_config_updates)
  return process_config_updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigDetail >&
HeartBeatResponse::process_config_updates() const {
  // @@protoc_insertion_point(field_list:configserver.proto.v2.HeartBeatResponse.process_config_updates)
  return process_config_updates_;
}

// repeated .configserver.proto.v2.CommandDetail custom_command_updates = 6;
inline int HeartBeatResponse::custom_command_updates_size() const {
  return custom_command_updates_.size();
}
inline void HeartBeatResponse::clear_custom_command_updates() {
  custom_command_updates_.Clear();
}
inline ::configserver::proto::v2::CommandDetail* HeartBeatResponse::mutable_custom_command_updates(int index) {
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.HeartBeatResponse.custom_command_updates)
  return custom_command_updates_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::CommandDetail >*
HeartBeatResponse::mutable_custom_command_updates() {
  // @@protoc_insertion_point(field_mutable_list:configserver.proto.v2.HeartBeatResponse.custom_command_updates)
  return &custom_command_updates_;
}
inline const ::configserver::proto::v2::CommandDetail& HeartBeatResponse::custom_command_updates(int index) const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.HeartBeatResponse.custom_command_updates)
  return custom_command_updates_.Get(index);
}
inline ::configserver::proto::v2::CommandDetail* HeartBeatResponse::add_custom_command_updates() {
  // @@protoc_insertion_point(field_add:configserver.proto.v2.HeartBeatResponse.custom_command_updates)
  return custom_command_updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::CommandDetail >&
HeartBeatResponse::custom_command_updates() const {
  // @@protoc_insertion_point(field_list:configserver.proto.v2.HeartBeatResponse.custom_command_updates)
  return custom_command_updates_;
}

// uint64 flags = 7;
inline void HeartBeatResponse::clear_flags() {
  flags_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 HeartBeatResponse::flags() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.HeartBeatResponse.flags)
  return flags_;
}
inline void HeartBeatResponse::set_flags(::google::protobuf::uint64 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:configserver.proto.v2.HeartBeatResponse.flags)
}

// bytes opaque = 8;
inline void HeartBeatResponse::clear_opaque() {
  opaque_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HeartBeatResponse::opaque() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.HeartBeatResponse.opaque)
  return opaque_.GetNoArena();
}
inline void HeartBeatResponse::set_opaque(const ::std::string& value) {
  
  opaque_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.v2.HeartBeatResponse.opaque)
}
#if LANG_CXX11
inline void HeartBeatResponse::set_opaque(::std::string&& value) {
  
  opaque_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.v2.HeartBeatResponse.opaque)
}
#endif
inline void HeartBeatResponse::set_opaque(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  opaque_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.v2.HeartBeatResponse.opaque)
}
inline void HeartBeatResponse::set_opaque(const void* value, size_t size) {
  
  opaque_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.v2.HeartBeatResponse.opaque)
}
inline ::std::string* HeartBeatResponse::mutable_opaque() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.HeartBeatResponse.opaque)
  return opaque_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HeartBeatResponse::release_opaque() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.HeartBeatResponse.opaque)
  
  return opaque_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HeartBeatResponse::set_allocated_opaque(::std::string* opaque) {
  if (opaque != NULL) {
    
  } else {
    
  }
  opaque_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), opaque);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.HeartBeatResponse.opaque)
}

// -------------------------------------------------------------------

// FetchConfigRequest

// bytes request_id = 1;
inline void FetchConfigRequest::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FetchConfigRequest::request_id() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.FetchConfigRequest.request_id)
  return request_id_.GetNoArena();
}
inline void FetchConfigRequest::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.v2.FetchConfigRequest.request_id)
}
#if LANG_CXX11
inline void FetchConfigRequest::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.v2.FetchConfigRequest.request_id)
}
#endif
inline void FetchConfigRequest::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.v2.FetchConfigRequest.request_id)
}
inline void FetchConfigRequest::set_request_id(const void* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.v2.FetchConfigRequest.request_id)
}
inline ::std::string* FetchConfigRequest::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.FetchConfigRequest.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FetchConfigRequest::release_request_id() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.FetchConfigRequest.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FetchConfigRequest::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.FetchConfigRequest.request_id)
}

// bytes instance_id = 2;
inline void FetchConfigRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FetchConfigRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.FetchConfigRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void FetchConfigRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.v2.FetchConfigRequest.instance_id)
}
#if LANG_CXX11
inline void FetchConfigRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.v2.FetchConfigRequest.instance_id)
}
#endif
inline void FetchConfigRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.v2.FetchConfigRequest.instance_id)
}
inline void FetchConfigRequest::set_instance_id(const void* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.v2.FetchConfigRequest.instance_id)
}
inline ::std::string* FetchConfigRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.FetchConfigRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FetchConfigRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.FetchConfigRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FetchConfigRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.FetchConfigRequest.instance_id)
}

// repeated .configserver.proto.v2.ConfigInfo req_configs = 3;
inline int FetchConfigRequest::req_configs_size() const {
  return req_configs_.size();
}
inline void FetchConfigRequest::clear_req_configs() {
  req_configs_.Clear();
}
inline ::configserver::proto::v2::ConfigInfo* FetchConfigRequest::mutable_req_configs(int index) {
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.FetchConfigRequest.req_configs)
  return req_configs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigInfo >*
FetchConfigRequest::mutable_req_configs() {
  // @@protoc_insertion_point(field_mutable_list:configserver.proto.v2.FetchConfigRequest.req_configs)
  return &req_configs_;
}
inline const ::configserver::proto::v2::ConfigInfo& FetchConfigRequest::req_configs(int index) const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.FetchConfigRequest.req_configs)
  return req_configs_.Get(index);
}
inline ::configserver::proto::v2::ConfigInfo* FetchConfigRequest::add_req_configs() {
  // @@protoc_insertion_point(field_add:configserver.proto.v2.FetchConfigRequest.req_configs)
  return req_configs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigInfo >&
FetchConfigRequest::req_configs() const {
  // @@protoc_insertion_point(field_list:configserver.proto.v2.FetchConfigRequest.req_configs)
  return req_configs_;
}

// -------------------------------------------------------------------

// FetchConfigResponse

// bytes request_id = 1;
inline void FetchConfigResponse::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FetchConfigResponse::request_id() const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.FetchConfigResponse.request_id)
  return request_id_.GetNoArena();
}
inline void FetchConfigResponse::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:configserver.proto.v2.FetchConfigResponse.request_id)
}
#if LANG_CXX11
inline void FetchConfigResponse::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:configserver.proto.v2.FetchConfigResponse.request_id)
}
#endif
inline void FetchConfigResponse::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:configserver.proto.v2.FetchConfigResponse.request_id)
}
inline void FetchConfigResponse::set_request_id(const void* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:configserver.proto.v2.FetchConfigResponse.request_id)
}
inline ::std::string* FetchConfigResponse::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.FetchConfigResponse.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FetchConfigResponse::release_request_id() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.FetchConfigResponse.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FetchConfigResponse::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.FetchConfigResponse.request_id)
}

// .configserver.proto.v2.ServerErrorResponse error_response = 2;
inline bool FetchConfigResponse::has_error_response() const {
  return this != internal_default_instance() && error_response_ != NULL;
}
inline void FetchConfigResponse::clear_error_response() {
  if (GetArenaNoVirtual() == NULL && error_response_ != NULL) {
    delete error_response_;
  }
  error_response_ = NULL;
}
inline const ::configserver::proto::v2::ServerErrorResponse& FetchConfigResponse::_internal_error_response() const {
  return *error_response_;
}
inline const ::configserver::proto::v2::ServerErrorResponse& FetchConfigResponse::error_response() const {
  const ::configserver::proto::v2::ServerErrorResponse* p = error_response_;
  // @@protoc_insertion_point(field_get:configserver.proto.v2.FetchConfigResponse.error_response)
  return p != NULL ? *p : *reinterpret_cast<const ::configserver::proto::v2::ServerErrorResponse*>(
      &::configserver::proto::v2::_ServerErrorResponse_default_instance_);
}
inline ::configserver::proto::v2::ServerErrorResponse* FetchConfigResponse::release_error_response() {
  // @@protoc_insertion_point(field_release:configserver.proto.v2.FetchConfigResponse.error_response)
  
  ::configserver::proto::v2::ServerErrorResponse* temp = error_response_;
  error_response_ = NULL;
  return temp;
}
inline ::configserver::proto::v2::ServerErrorResponse* FetchConfigResponse::mutable_error_response() {
  
  if (error_response_ == NULL) {
    auto* p = CreateMaybeMessage<::configserver::proto::v2::ServerErrorResponse>(GetArenaNoVirtual());
    error_response_ = p;
  }
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.FetchConfigResponse.error_response)
  return error_response_;
}
inline void FetchConfigResponse::set_allocated_error_response(::configserver::proto::v2::ServerErrorResponse* error_response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete error_response_;
  }
  if (error_response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      error_response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, error_response, submessage_arena);
    }
    
  } else {
    
  }
  error_response_ = error_response;
  // @@protoc_insertion_point(field_set_allocated:configserver.proto.v2.FetchConfigResponse.error_response)
}

// repeated .configserver.proto.v2.ConfigDetail config_details = 3;
inline int FetchConfigResponse::config_details_size() const {
  return config_details_.size();
}
inline void FetchConfigResponse::clear_config_details() {
  config_details_.Clear();
}
inline ::configserver::proto::v2::ConfigDetail* FetchConfigResponse::mutable_config_details(int index) {
  // @@protoc_insertion_point(field_mutable:configserver.proto.v2.FetchConfigResponse.config_details)
  return config_details_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigDetail >*
FetchConfigResponse::mutable_config_details() {
  // @@protoc_insertion_point(field_mutable_list:configserver.proto.v2.FetchConfigResponse.config_details)
  return &config_details_;
}
inline const ::configserver::proto::v2::ConfigDetail& FetchConfigResponse::config_details(int index) const {
  // @@protoc_insertion_point(field_get:configserver.proto.v2.FetchConfigResponse.config_details)
  return config_details_.Get(index);
}
inline ::configserver::proto::v2::ConfigDetail* FetchConfigResponse::add_config_details() {
  // @@protoc_insertion_point(field_add:configserver.proto.v2.FetchConfigResponse.config_details)
  return config_details_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::configserver::proto::v2::ConfigDetail >&
FetchConfigResponse::config_details() const {
  // @@protoc_insertion_point(field_list:configserver.proto.v2.FetchConfigResponse.config_details)
  return config_details_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace proto
}  // namespace configserver

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::configserver::proto::v2::ConfigStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::configserver::proto::v2::ConfigStatus>() {
  return ::configserver::proto::v2::ConfigStatus_descriptor();
}
template <> struct is_proto_enum< ::configserver::proto::v2::AgentCapabilities> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::configserver::proto::v2::AgentCapabilities>() {
  return ::configserver::proto::v2::AgentCapabilities_descriptor();
}
template <> struct is_proto_enum< ::configserver::proto::v2::RequestFlags> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::configserver::proto::v2::RequestFlags>() {
  return ::configserver::proto::v2::RequestFlags_descriptor();
}
template <> struct is_proto_enum< ::configserver::proto::v2::ServerCapabilities> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::configserver::proto::v2::ServerCapabilities>() {
  return ::configserver::proto::v2::ServerCapabilities_descriptor();
}
template <> struct is_proto_enum< ::configserver::proto::v2::ResponseFlags> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::configserver::proto::v2::ResponseFlags>() {
  return ::configserver::proto::v2::ResponseFlags_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_v2_2fagent_2eproto

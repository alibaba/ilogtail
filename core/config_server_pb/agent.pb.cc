// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: agent.proto

#include "agent.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace configserver {
namespace proto {
PROTOBUF_CONSTEXPR HeartBeatRequest_TagsEntry_DoNotUse::HeartBeatRequest_TagsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct HeartBeatRequest_TagsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeartBeatRequest_TagsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeartBeatRequest_TagsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    HeartBeatRequest_TagsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeartBeatRequest_TagsEntry_DoNotUseDefaultTypeInternal _HeartBeatRequest_TagsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR HeartBeatRequest::HeartBeatRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tags_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.request_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.agent_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.agent_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.agent_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ip_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.running_status_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.startup_time_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct HeartBeatRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeartBeatRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeartBeatRequestDefaultTypeInternal() {}
  union {
    HeartBeatRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeartBeatRequestDefaultTypeInternal _HeartBeatRequest_default_instance_;
PROTOBUF_CONSTEXPR HeartBeatResponse::HeartBeatResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.response_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct HeartBeatResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeartBeatResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeartBeatResponseDefaultTypeInternal() {}
  union {
    HeartBeatResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeartBeatResponseDefaultTypeInternal _HeartBeatResponse_default_instance_;
PROTOBUF_CONSTEXPR RunningStatistics_ExtrasEntry_DoNotUse::RunningStatistics_ExtrasEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct RunningStatistics_ExtrasEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RunningStatistics_ExtrasEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RunningStatistics_ExtrasEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RunningStatistics_ExtrasEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RunningStatistics_ExtrasEntry_DoNotUseDefaultTypeInternal _RunningStatistics_ExtrasEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR RunningStatistics::RunningStatistics(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.extras_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.memory_)*/int64_t{0}
  , /*decltype(_impl_.cpu_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RunningStatisticsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RunningStatisticsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RunningStatisticsDefaultTypeInternal() {}
  union {
    RunningStatistics _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RunningStatisticsDefaultTypeInternal _RunningStatistics_default_instance_;
PROTOBUF_CONSTEXPR RunningStatisticsRequest::RunningStatisticsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.request_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.agent_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.running_details_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RunningStatisticsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RunningStatisticsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RunningStatisticsRequestDefaultTypeInternal() {}
  union {
    RunningStatisticsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RunningStatisticsRequestDefaultTypeInternal _RunningStatisticsRequest_default_instance_;
PROTOBUF_CONSTEXPR RunningStatisticsResponse::RunningStatisticsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.response_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RunningStatisticsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RunningStatisticsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RunningStatisticsResponseDefaultTypeInternal() {}
  union {
    RunningStatisticsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RunningStatisticsResponseDefaultTypeInternal _RunningStatisticsResponse_default_instance_;
PROTOBUF_CONSTEXPR AlarmRequest::AlarmRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.request_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.agent_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.detail_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AlarmRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AlarmRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AlarmRequestDefaultTypeInternal() {}
  union {
    AlarmRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AlarmRequestDefaultTypeInternal _AlarmRequest_default_instance_;
PROTOBUF_CONSTEXPR AlarmResponse::AlarmResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.response_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AlarmResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AlarmResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AlarmResponseDefaultTypeInternal() {}
  union {
    AlarmResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AlarmResponseDefaultTypeInternal _AlarmResponse_default_instance_;
PROTOBUF_CONSTEXPR AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse::AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUseDefaultTypeInternal _AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR AgentGetConfigListRequest_TagsEntry_DoNotUse::AgentGetConfigListRequest_TagsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct AgentGetConfigListRequest_TagsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AgentGetConfigListRequest_TagsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AgentGetConfigListRequest_TagsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AgentGetConfigListRequest_TagsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AgentGetConfigListRequest_TagsEntry_DoNotUseDefaultTypeInternal _AgentGetConfigListRequest_TagsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR AgentGetConfigListRequest::AgentGetConfigListRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.config_versions_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.tags_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.request_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.agent_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AgentGetConfigListRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AgentGetConfigListRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AgentGetConfigListRequestDefaultTypeInternal() {}
  union {
    AgentGetConfigListRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AgentGetConfigListRequestDefaultTypeInternal _AgentGetConfigListRequest_default_instance_;
PROTOBUF_CONSTEXPR ConfigUpdateInfo::ConfigUpdateInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.config_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.content_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.config_version_)*/int64_t{0}
  , /*decltype(_impl_.update_status_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ConfigUpdateInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConfigUpdateInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConfigUpdateInfoDefaultTypeInternal() {}
  union {
    ConfigUpdateInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConfigUpdateInfoDefaultTypeInternal _ConfigUpdateInfo_default_instance_;
PROTOBUF_CONSTEXPR AgentGetConfigListResponse::AgentGetConfigListResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.config_update_infos_)*/{}
  , /*decltype(_impl_.response_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AgentGetConfigListResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AgentGetConfigListResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AgentGetConfigListResponseDefaultTypeInternal() {}
  union {
    AgentGetConfigListResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AgentGetConfigListResponseDefaultTypeInternal _AgentGetConfigListResponse_default_instance_;
}  // namespace proto
}  // namespace configserver
static ::_pb::Metadata file_level_metadata_agent_2eproto[14];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_agent_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_agent_2eproto = nullptr;

const uint32_t TableStruct_agent_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::configserver::proto::HeartBeatRequest_TagsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::HeartBeatRequest_TagsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::configserver::proto::HeartBeatRequest_TagsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::HeartBeatRequest_TagsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::configserver::proto::HeartBeatRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::configserver::proto::HeartBeatRequest, _impl_.request_id_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::HeartBeatRequest, _impl_.agent_id_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::HeartBeatRequest, _impl_.agent_type_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::HeartBeatRequest, _impl_.agent_version_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::HeartBeatRequest, _impl_.ip_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::HeartBeatRequest, _impl_.tags_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::HeartBeatRequest, _impl_.running_status_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::HeartBeatRequest, _impl_.startup_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::configserver::proto::HeartBeatResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::configserver::proto::HeartBeatResponse, _impl_.response_id_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::HeartBeatResponse, _impl_.code_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::HeartBeatResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::RunningStatistics_ExtrasEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::RunningStatistics_ExtrasEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::configserver::proto::RunningStatistics_ExtrasEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::RunningStatistics_ExtrasEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::configserver::proto::RunningStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::configserver::proto::RunningStatistics, _impl_.cpu_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::RunningStatistics, _impl_.memory_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::RunningStatistics, _impl_.extras_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::configserver::proto::RunningStatisticsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::configserver::proto::RunningStatisticsRequest, _impl_.request_id_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::RunningStatisticsRequest, _impl_.agent_id_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::RunningStatisticsRequest, _impl_.running_details_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::configserver::proto::RunningStatisticsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::configserver::proto::RunningStatisticsResponse, _impl_.response_id_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::RunningStatisticsResponse, _impl_.code_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::RunningStatisticsResponse, _impl_.message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AlarmRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AlarmRequest, _impl_.request_id_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AlarmRequest, _impl_.agent_id_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AlarmRequest, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AlarmRequest, _impl_.detail_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AlarmResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AlarmResponse, _impl_.response_id_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AlarmResponse, _impl_.code_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AlarmResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AgentGetConfigListRequest_TagsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AgentGetConfigListRequest_TagsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AgentGetConfigListRequest_TagsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AgentGetConfigListRequest_TagsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AgentGetConfigListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AgentGetConfigListRequest, _impl_.request_id_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AgentGetConfigListRequest, _impl_.agent_id_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AgentGetConfigListRequest, _impl_.config_versions_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AgentGetConfigListRequest, _impl_.tags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::configserver::proto::ConfigUpdateInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::configserver::proto::ConfigUpdateInfo, _impl_.config_name_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::ConfigUpdateInfo, _impl_.update_status_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::ConfigUpdateInfo, _impl_.config_version_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::ConfigUpdateInfo, _impl_.content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AgentGetConfigListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AgentGetConfigListResponse, _impl_.response_id_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AgentGetConfigListResponse, _impl_.code_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AgentGetConfigListResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::configserver::proto::AgentGetConfigListResponse, _impl_.config_update_infos_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::configserver::proto::HeartBeatRequest_TagsEntry_DoNotUse)},
  { 10, -1, -1, sizeof(::configserver::proto::HeartBeatRequest)},
  { 24, -1, -1, sizeof(::configserver::proto::HeartBeatResponse)},
  { 33, 41, -1, sizeof(::configserver::proto::RunningStatistics_ExtrasEntry_DoNotUse)},
  { 43, -1, -1, sizeof(::configserver::proto::RunningStatistics)},
  { 52, -1, -1, sizeof(::configserver::proto::RunningStatisticsRequest)},
  { 61, -1, -1, sizeof(::configserver::proto::RunningStatisticsResponse)},
  { 70, -1, -1, sizeof(::configserver::proto::AlarmRequest)},
  { 80, -1, -1, sizeof(::configserver::proto::AlarmResponse)},
  { 89, 97, -1, sizeof(::configserver::proto::AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse)},
  { 99, 107, -1, sizeof(::configserver::proto::AgentGetConfigListRequest_TagsEntry_DoNotUse)},
  { 109, -1, -1, sizeof(::configserver::proto::AgentGetConfigListRequest)},
  { 119, -1, -1, sizeof(::configserver::proto::ConfigUpdateInfo)},
  { 129, -1, -1, sizeof(::configserver::proto::AgentGetConfigListResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::configserver::proto::_HeartBeatRequest_TagsEntry_DoNotUse_default_instance_._instance,
  &::configserver::proto::_HeartBeatRequest_default_instance_._instance,
  &::configserver::proto::_HeartBeatResponse_default_instance_._instance,
  &::configserver::proto::_RunningStatistics_ExtrasEntry_DoNotUse_default_instance_._instance,
  &::configserver::proto::_RunningStatistics_default_instance_._instance,
  &::configserver::proto::_RunningStatisticsRequest_default_instance_._instance,
  &::configserver::proto::_RunningStatisticsResponse_default_instance_._instance,
  &::configserver::proto::_AlarmRequest_default_instance_._instance,
  &::configserver::proto::_AlarmResponse_default_instance_._instance,
  &::configserver::proto::_AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse_default_instance_._instance,
  &::configserver::proto::_AgentGetConfigListRequest_TagsEntry_DoNotUse_default_instance_._instance,
  &::configserver::proto::_AgentGetConfigListRequest_default_instance_._instance,
  &::configserver::proto::_ConfigUpdateInfo_default_instance_._instance,
  &::configserver::proto::_AgentGetConfigListResponse_default_instance_._instance,
};

const char descriptor_table_protodef_agent_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013agent.proto\022\022configserver.proto\"\210\002\n\020He"
  "artBeatRequest\022\022\n\nrequest_id\030\001 \001(\t\022\020\n\010ag"
  "ent_id\030\002 \001(\t\022\022\n\nagent_type\030\003 \001(\t\022\025\n\ragen"
  "t_version\030\004 \001(\t\022\n\n\002ip\030\005 \001(\t\022<\n\004tags\030\006 \003("
  "\0132..configserver.proto.HeartBeatRequest."
  "TagsEntry\022\026\n\016running_status\030\007 \001(\t\022\024\n\014sta"
  "rtup_time\030\010 \001(\003\032+\n\tTagsEntry\022\013\n\003key\030\001 \001("
  "\t\022\r\n\005value\030\002 \001(\t:\0028\001\"G\n\021HeartBeatRespons"
  "e\022\023\n\013response_id\030\001 \001(\t\022\014\n\004code\030\002 \001(\t\022\017\n\007"
  "message\030\003 \001(\t\"\242\001\n\021RunningStatistics\022\013\n\003c"
  "pu\030\001 \001(\002\022\016\n\006memory\030\002 \001(\003\022A\n\006extras\030d \003(\013"
  "21.configserver.proto.RunningStatistics."
  "ExtrasEntry\032-\n\013ExtrasEntry\022\013\n\003key\030\001 \001(\t\022"
  "\r\n\005value\030\002 \001(\t:\0028\001\"\200\001\n\030RunningStatistics"
  "Request\022\022\n\nrequest_id\030\001 \001(\t\022\020\n\010agent_id\030"
  "\002 \001(\t\022>\n\017running_details\030\003 \001(\0132%.configs"
  "erver.proto.RunningStatistics\"O\n\031Running"
  "StatisticsResponse\022\023\n\013response_id\030\001 \001(\t\022"
  "\014\n\004code\030\002 \001(\t\022\017\n\007message\030\003 \001(\t\"R\n\014AlarmR"
  "equest\022\022\n\nrequest_id\030\001 \001(\t\022\020\n\010agent_id\030\002"
  " \001(\t\022\014\n\004type\030\003 \001(\t\022\016\n\006detail\030\004 \001(\t\"C\n\rAl"
  "armResponse\022\023\n\013response_id\030\001 \001(\t\022\014\n\004code"
  "\030\002 \001(\t\022\017\n\007message\030\003 \001(\t\"\310\002\n\031AgentGetConf"
  "igListRequest\022\022\n\nrequest_id\030\001 \001(\t\022\020\n\010age"
  "nt_id\030\002 \001(\t\022Z\n\017config_versions\030\003 \003(\0132A.c"
  "onfigserver.proto.AgentGetConfigListRequ"
  "est.ConfigVersionsEntry\022E\n\004tags\030\004 \003(\01327."
  "configserver.proto.AgentGetConfigListReq"
  "uest.TagsEntry\0325\n\023ConfigVersionsEntry\022\013\n"
  "\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\003:\0028\001\032+\n\tTagsEnt"
  "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\330\001\n\020C"
  "onfigUpdateInfo\022\023\n\013config_name\030\001 \001(\t\022H\n\r"
  "update_status\030\002 \001(\01621.configserver.proto"
  ".ConfigUpdateInfo.UpdateStatus\022\026\n\016config"
  "_version\030\003 \001(\003\022\017\n\007content\030\004 \001(\t\"<\n\014Updat"
  "eStatus\022\010\n\004SAME\020\000\022\007\n\003NEW\020\001\022\013\n\007DELETED\020\002\022"
  "\014\n\010MODIFIED\020\003\"\223\001\n\032AgentGetConfigListResp"
  "onse\022\023\n\013response_id\030\001 \001(\t\022\014\n\004code\030\002 \001(\t\022"
  "\017\n\007message\030\003 \001(\t\022A\n\023config_update_infos\030"
  "\004 \003(\0132$.configserver.proto.ConfigUpdateI"
  "nfoB\026Z\024.;configserver_protob\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_agent_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_agent_2eproto = {
    false, false, 1635, descriptor_table_protodef_agent_2eproto,
    "agent.proto",
    &descriptor_table_agent_2eproto_once, nullptr, 0, 14,
    schemas, file_default_instances, TableStruct_agent_2eproto::offsets,
    file_level_metadata_agent_2eproto, file_level_enum_descriptors_agent_2eproto,
    file_level_service_descriptors_agent_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_agent_2eproto_getter() {
  return &descriptor_table_agent_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_agent_2eproto(&descriptor_table_agent_2eproto);
namespace configserver {
namespace proto {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ConfigUpdateInfo_UpdateStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_agent_2eproto);
  return file_level_enum_descriptors_agent_2eproto[0];
}
bool ConfigUpdateInfo_UpdateStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr ConfigUpdateInfo_UpdateStatus ConfigUpdateInfo::SAME;
constexpr ConfigUpdateInfo_UpdateStatus ConfigUpdateInfo::NEW;
constexpr ConfigUpdateInfo_UpdateStatus ConfigUpdateInfo::DELETED;
constexpr ConfigUpdateInfo_UpdateStatus ConfigUpdateInfo::MODIFIED;
constexpr ConfigUpdateInfo_UpdateStatus ConfigUpdateInfo::UpdateStatus_MIN;
constexpr ConfigUpdateInfo_UpdateStatus ConfigUpdateInfo::UpdateStatus_MAX;
constexpr int ConfigUpdateInfo::UpdateStatus_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

HeartBeatRequest_TagsEntry_DoNotUse::HeartBeatRequest_TagsEntry_DoNotUse() {}
HeartBeatRequest_TagsEntry_DoNotUse::HeartBeatRequest_TagsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void HeartBeatRequest_TagsEntry_DoNotUse::MergeFrom(const HeartBeatRequest_TagsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata HeartBeatRequest_TagsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_agent_2eproto_getter, &descriptor_table_agent_2eproto_once,
      file_level_metadata_agent_2eproto[0]);
}

// ===================================================================

class HeartBeatRequest::_Internal {
 public:
};

HeartBeatRequest::HeartBeatRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &HeartBeatRequest::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:configserver.proto.HeartBeatRequest)
}
HeartBeatRequest::HeartBeatRequest(const HeartBeatRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  HeartBeatRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.tags_)*/{}
    , decltype(_impl_.request_id_){}
    , decltype(_impl_.agent_id_){}
    , decltype(_impl_.agent_type_){}
    , decltype(_impl_.agent_version_){}
    , decltype(_impl_.ip_){}
    , decltype(_impl_.running_status_){}
    , decltype(_impl_.startup_time_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.tags_.MergeFrom(from._impl_.tags_);
  _impl_.request_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.request_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_request_id().empty()) {
    _this->_impl_.request_id_.Set(from._internal_request_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.agent_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.agent_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_agent_id().empty()) {
    _this->_impl_.agent_id_.Set(from._internal_agent_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.agent_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.agent_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_agent_type().empty()) {
    _this->_impl_.agent_type_.Set(from._internal_agent_type(), 
      _this->GetArenaForAllocation());
  }
  _impl_.agent_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.agent_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_agent_version().empty()) {
    _this->_impl_.agent_version_.Set(from._internal_agent_version(), 
      _this->GetArenaForAllocation());
  }
  _impl_.ip_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ip_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ip().empty()) {
    _this->_impl_.ip_.Set(from._internal_ip(), 
      _this->GetArenaForAllocation());
  }
  _impl_.running_status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.running_status_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_running_status().empty()) {
    _this->_impl_.running_status_.Set(from._internal_running_status(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.startup_time_ = from._impl_.startup_time_;
  // @@protoc_insertion_point(copy_constructor:configserver.proto.HeartBeatRequest)
}

inline void HeartBeatRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.tags_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.request_id_){}
    , decltype(_impl_.agent_id_){}
    , decltype(_impl_.agent_type_){}
    , decltype(_impl_.agent_version_){}
    , decltype(_impl_.ip_){}
    , decltype(_impl_.running_status_){}
    , decltype(_impl_.startup_time_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.request_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.request_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.agent_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.agent_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.agent_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.agent_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.agent_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.agent_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.ip_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ip_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.running_status_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.running_status_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

HeartBeatRequest::~HeartBeatRequest() {
  // @@protoc_insertion_point(destructor:configserver.proto.HeartBeatRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void HeartBeatRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tags_.Destruct();
  _impl_.tags_.~MapField();
  _impl_.request_id_.Destroy();
  _impl_.agent_id_.Destroy();
  _impl_.agent_type_.Destroy();
  _impl_.agent_version_.Destroy();
  _impl_.ip_.Destroy();
  _impl_.running_status_.Destroy();
}

void HeartBeatRequest::ArenaDtor(void* object) {
  HeartBeatRequest* _this = reinterpret_cast< HeartBeatRequest* >(object);
  _this->_impl_.tags_.Destruct();
}
void HeartBeatRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void HeartBeatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:configserver.proto.HeartBeatRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.Clear();
  _impl_.request_id_.ClearToEmpty();
  _impl_.agent_id_.ClearToEmpty();
  _impl_.agent_type_.ClearToEmpty();
  _impl_.agent_version_.ClearToEmpty();
  _impl_.ip_.ClearToEmpty();
  _impl_.running_status_.ClearToEmpty();
  _impl_.startup_time_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HeartBeatRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_request_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.HeartBeatRequest.request_id"));
        } else
          goto handle_unusual;
        continue;
      // string agent_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_agent_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.HeartBeatRequest.agent_id"));
        } else
          goto handle_unusual;
        continue;
      // string agent_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_agent_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.HeartBeatRequest.agent_type"));
        } else
          goto handle_unusual;
        continue;
      // string agent_version = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_agent_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.HeartBeatRequest.agent_version"));
        } else
          goto handle_unusual;
        continue;
      // string ip = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_ip();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.HeartBeatRequest.ip"));
        } else
          goto handle_unusual;
        continue;
      // map<string, string> tags = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.tags_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string running_status = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_running_status();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.HeartBeatRequest.running_status"));
        } else
          goto handle_unusual;
        continue;
      // int64 startup_time = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.startup_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HeartBeatRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:configserver.proto.HeartBeatRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (!this->_internal_request_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_request_id().data(), static_cast<int>(this->_internal_request_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.HeartBeatRequest.request_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_request_id(), target);
  }

  // string agent_id = 2;
  if (!this->_internal_agent_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_agent_id().data(), static_cast<int>(this->_internal_agent_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.HeartBeatRequest.agent_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_agent_id(), target);
  }

  // string agent_type = 3;
  if (!this->_internal_agent_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_agent_type().data(), static_cast<int>(this->_internal_agent_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.HeartBeatRequest.agent_type");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_agent_type(), target);
  }

  // string agent_version = 4;
  if (!this->_internal_agent_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_agent_version().data(), static_cast<int>(this->_internal_agent_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.HeartBeatRequest.agent_version");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_agent_version(), target);
  }

  // string ip = 5;
  if (!this->_internal_ip().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.HeartBeatRequest.ip");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_ip(), target);
  }

  // map<string, string> tags = 6;
  if (!this->_internal_tags().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = HeartBeatRequest_TagsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_tags();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "configserver.proto.HeartBeatRequest.TagsEntry.key");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.second.data(), static_cast<int>(entry.second.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "configserver.proto.HeartBeatRequest.TagsEntry.value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(6, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(6, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // string running_status = 7;
  if (!this->_internal_running_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_running_status().data(), static_cast<int>(this->_internal_running_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.HeartBeatRequest.running_status");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_running_status(), target);
  }

  // int64 startup_time = 8;
  if (this->_internal_startup_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(8, this->_internal_startup_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:configserver.proto.HeartBeatRequest)
  return target;
}

size_t HeartBeatRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:configserver.proto.HeartBeatRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> tags = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_tags_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_tags().begin();
      it != this->_internal_tags().end(); ++it) {
    total_size += HeartBeatRequest_TagsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string request_id = 1;
  if (!this->_internal_request_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_request_id());
  }

  // string agent_id = 2;
  if (!this->_internal_agent_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_agent_id());
  }

  // string agent_type = 3;
  if (!this->_internal_agent_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_agent_type());
  }

  // string agent_version = 4;
  if (!this->_internal_agent_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_agent_version());
  }

  // string ip = 5;
  if (!this->_internal_ip().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  // string running_status = 7;
  if (!this->_internal_running_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_running_status());
  }

  // int64 startup_time = 8;
  if (this->_internal_startup_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_startup_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HeartBeatRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    HeartBeatRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HeartBeatRequest::GetClassData() const { return &_class_data_; }


void HeartBeatRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<HeartBeatRequest*>(&to_msg);
  auto& from = static_cast<const HeartBeatRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:configserver.proto.HeartBeatRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.tags_.MergeFrom(from._impl_.tags_);
  if (!from._internal_request_id().empty()) {
    _this->_internal_set_request_id(from._internal_request_id());
  }
  if (!from._internal_agent_id().empty()) {
    _this->_internal_set_agent_id(from._internal_agent_id());
  }
  if (!from._internal_agent_type().empty()) {
    _this->_internal_set_agent_type(from._internal_agent_type());
  }
  if (!from._internal_agent_version().empty()) {
    _this->_internal_set_agent_version(from._internal_agent_version());
  }
  if (!from._internal_ip().empty()) {
    _this->_internal_set_ip(from._internal_ip());
  }
  if (!from._internal_running_status().empty()) {
    _this->_internal_set_running_status(from._internal_running_status());
  }
  if (from._internal_startup_time() != 0) {
    _this->_internal_set_startup_time(from._internal_startup_time());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HeartBeatRequest::CopyFrom(const HeartBeatRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:configserver.proto.HeartBeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartBeatRequest::IsInitialized() const {
  return true;
}

void HeartBeatRequest::InternalSwap(HeartBeatRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.request_id_, lhs_arena,
      &other->_impl_.request_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.agent_id_, lhs_arena,
      &other->_impl_.agent_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.agent_type_, lhs_arena,
      &other->_impl_.agent_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.agent_version_, lhs_arena,
      &other->_impl_.agent_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.ip_, lhs_arena,
      &other->_impl_.ip_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.running_status_, lhs_arena,
      &other->_impl_.running_status_, rhs_arena
  );
  swap(_impl_.startup_time_, other->_impl_.startup_time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HeartBeatRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_agent_2eproto_getter, &descriptor_table_agent_2eproto_once,
      file_level_metadata_agent_2eproto[1]);
}

// ===================================================================

class HeartBeatResponse::_Internal {
 public:
};

HeartBeatResponse::HeartBeatResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:configserver.proto.HeartBeatResponse)
}
HeartBeatResponse::HeartBeatResponse(const HeartBeatResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  HeartBeatResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.response_id_){}
    , decltype(_impl_.code_){}
    , decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.response_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.response_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_response_id().empty()) {
    _this->_impl_.response_id_.Set(from._internal_response_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_code().empty()) {
    _this->_impl_.code_.Set(from._internal_code(), 
      _this->GetArenaForAllocation());
  }
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:configserver.proto.HeartBeatResponse)
}

inline void HeartBeatResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.response_id_){}
    , decltype(_impl_.code_){}
    , decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.response_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.response_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

HeartBeatResponse::~HeartBeatResponse() {
  // @@protoc_insertion_point(destructor:configserver.proto.HeartBeatResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void HeartBeatResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.response_id_.Destroy();
  _impl_.code_.Destroy();
  _impl_.message_.Destroy();
}

void HeartBeatResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void HeartBeatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:configserver.proto.HeartBeatResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.response_id_.ClearToEmpty();
  _impl_.code_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HeartBeatResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string response_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_response_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.HeartBeatResponse.response_id"));
        } else
          goto handle_unusual;
        continue;
      // string code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.HeartBeatResponse.code"));
        } else
          goto handle_unusual;
        continue;
      // string message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.HeartBeatResponse.message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HeartBeatResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:configserver.proto.HeartBeatResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string response_id = 1;
  if (!this->_internal_response_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_response_id().data(), static_cast<int>(this->_internal_response_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.HeartBeatResponse.response_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_response_id(), target);
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_code().data(), static_cast<int>(this->_internal_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.HeartBeatResponse.code");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_code(), target);
  }

  // string message = 3;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.HeartBeatResponse.message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:configserver.proto.HeartBeatResponse)
  return target;
}

size_t HeartBeatResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:configserver.proto.HeartBeatResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string response_id = 1;
  if (!this->_internal_response_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_response_id());
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_code());
  }

  // string message = 3;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HeartBeatResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    HeartBeatResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HeartBeatResponse::GetClassData() const { return &_class_data_; }


void HeartBeatResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<HeartBeatResponse*>(&to_msg);
  auto& from = static_cast<const HeartBeatResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:configserver.proto.HeartBeatResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_response_id().empty()) {
    _this->_internal_set_response_id(from._internal_response_id());
  }
  if (!from._internal_code().empty()) {
    _this->_internal_set_code(from._internal_code());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HeartBeatResponse::CopyFrom(const HeartBeatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:configserver.proto.HeartBeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartBeatResponse::IsInitialized() const {
  return true;
}

void HeartBeatResponse::InternalSwap(HeartBeatResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.response_id_, lhs_arena,
      &other->_impl_.response_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.code_, lhs_arena,
      &other->_impl_.code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata HeartBeatResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_agent_2eproto_getter, &descriptor_table_agent_2eproto_once,
      file_level_metadata_agent_2eproto[2]);
}

// ===================================================================

RunningStatistics_ExtrasEntry_DoNotUse::RunningStatistics_ExtrasEntry_DoNotUse() {}
RunningStatistics_ExtrasEntry_DoNotUse::RunningStatistics_ExtrasEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void RunningStatistics_ExtrasEntry_DoNotUse::MergeFrom(const RunningStatistics_ExtrasEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata RunningStatistics_ExtrasEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_agent_2eproto_getter, &descriptor_table_agent_2eproto_once,
      file_level_metadata_agent_2eproto[3]);
}

// ===================================================================

class RunningStatistics::_Internal {
 public:
};

RunningStatistics::RunningStatistics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &RunningStatistics::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:configserver.proto.RunningStatistics)
}
RunningStatistics::RunningStatistics(const RunningStatistics& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RunningStatistics* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.extras_)*/{}
    , decltype(_impl_.memory_){}
    , decltype(_impl_.cpu_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.extras_.MergeFrom(from._impl_.extras_);
  ::memcpy(&_impl_.memory_, &from._impl_.memory_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.cpu_) -
    reinterpret_cast<char*>(&_impl_.memory_)) + sizeof(_impl_.cpu_));
  // @@protoc_insertion_point(copy_constructor:configserver.proto.RunningStatistics)
}

inline void RunningStatistics::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.extras_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.memory_){int64_t{0}}
    , decltype(_impl_.cpu_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RunningStatistics::~RunningStatistics() {
  // @@protoc_insertion_point(destructor:configserver.proto.RunningStatistics)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void RunningStatistics::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.extras_.Destruct();
  _impl_.extras_.~MapField();
}

void RunningStatistics::ArenaDtor(void* object) {
  RunningStatistics* _this = reinterpret_cast< RunningStatistics* >(object);
  _this->_impl_.extras_.Destruct();
}
void RunningStatistics::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RunningStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:configserver.proto.RunningStatistics)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extras_.Clear();
  ::memset(&_impl_.memory_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.cpu_) -
      reinterpret_cast<char*>(&_impl_.memory_)) + sizeof(_impl_.cpu_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RunningStatistics::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float cpu = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.cpu_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // int64 memory = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.memory_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> extras = 100;
      case 100:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&_impl_.extras_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<802>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RunningStatistics::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:configserver.proto.RunningStatistics)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float cpu = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_cpu = this->_internal_cpu();
  uint32_t raw_cpu;
  memcpy(&raw_cpu, &tmp_cpu, sizeof(tmp_cpu));
  if (raw_cpu != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_cpu(), target);
  }

  // int64 memory = 2;
  if (this->_internal_memory() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_memory(), target);
  }

  // map<string, string> extras = 100;
  if (!this->_internal_extras().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = RunningStatistics_ExtrasEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_extras();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "configserver.proto.RunningStatistics.ExtrasEntry.key");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.second.data(), static_cast<int>(entry.second.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "configserver.proto.RunningStatistics.ExtrasEntry.value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(100, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(100, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:configserver.proto.RunningStatistics)
  return target;
}

size_t RunningStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:configserver.proto.RunningStatistics)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> extras = 100;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_extras_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_extras().begin();
      it != this->_internal_extras().end(); ++it) {
    total_size += RunningStatistics_ExtrasEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // int64 memory = 2;
  if (this->_internal_memory() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_memory());
  }

  // float cpu = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_cpu = this->_internal_cpu();
  uint32_t raw_cpu;
  memcpy(&raw_cpu, &tmp_cpu, sizeof(tmp_cpu));
  if (raw_cpu != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RunningStatistics::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RunningStatistics::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RunningStatistics::GetClassData() const { return &_class_data_; }


void RunningStatistics::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RunningStatistics*>(&to_msg);
  auto& from = static_cast<const RunningStatistics&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:configserver.proto.RunningStatistics)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.extras_.MergeFrom(from._impl_.extras_);
  if (from._internal_memory() != 0) {
    _this->_internal_set_memory(from._internal_memory());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_cpu = from._internal_cpu();
  uint32_t raw_cpu;
  memcpy(&raw_cpu, &tmp_cpu, sizeof(tmp_cpu));
  if (raw_cpu != 0) {
    _this->_internal_set_cpu(from._internal_cpu());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RunningStatistics::CopyFrom(const RunningStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:configserver.proto.RunningStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunningStatistics::IsInitialized() const {
  return true;
}

void RunningStatistics::InternalSwap(RunningStatistics* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.extras_.InternalSwap(&other->_impl_.extras_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RunningStatistics, _impl_.cpu_)
      + sizeof(RunningStatistics::_impl_.cpu_)
      - PROTOBUF_FIELD_OFFSET(RunningStatistics, _impl_.memory_)>(
          reinterpret_cast<char*>(&_impl_.memory_),
          reinterpret_cast<char*>(&other->_impl_.memory_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RunningStatistics::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_agent_2eproto_getter, &descriptor_table_agent_2eproto_once,
      file_level_metadata_agent_2eproto[4]);
}

// ===================================================================

class RunningStatisticsRequest::_Internal {
 public:
  static const ::configserver::proto::RunningStatistics& running_details(const RunningStatisticsRequest* msg);
};

const ::configserver::proto::RunningStatistics&
RunningStatisticsRequest::_Internal::running_details(const RunningStatisticsRequest* msg) {
  return *msg->_impl_.running_details_;
}
RunningStatisticsRequest::RunningStatisticsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:configserver.proto.RunningStatisticsRequest)
}
RunningStatisticsRequest::RunningStatisticsRequest(const RunningStatisticsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RunningStatisticsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.request_id_){}
    , decltype(_impl_.agent_id_){}
    , decltype(_impl_.running_details_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.request_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.request_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_request_id().empty()) {
    _this->_impl_.request_id_.Set(from._internal_request_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.agent_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.agent_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_agent_id().empty()) {
    _this->_impl_.agent_id_.Set(from._internal_agent_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_running_details()) {
    _this->_impl_.running_details_ = new ::configserver::proto::RunningStatistics(*from._impl_.running_details_);
  }
  // @@protoc_insertion_point(copy_constructor:configserver.proto.RunningStatisticsRequest)
}

inline void RunningStatisticsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.request_id_){}
    , decltype(_impl_.agent_id_){}
    , decltype(_impl_.running_details_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.request_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.request_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.agent_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.agent_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RunningStatisticsRequest::~RunningStatisticsRequest() {
  // @@protoc_insertion_point(destructor:configserver.proto.RunningStatisticsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RunningStatisticsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.request_id_.Destroy();
  _impl_.agent_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.running_details_;
}

void RunningStatisticsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RunningStatisticsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:configserver.proto.RunningStatisticsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.request_id_.ClearToEmpty();
  _impl_.agent_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.running_details_ != nullptr) {
    delete _impl_.running_details_;
  }
  _impl_.running_details_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RunningStatisticsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_request_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.RunningStatisticsRequest.request_id"));
        } else
          goto handle_unusual;
        continue;
      // string agent_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_agent_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.RunningStatisticsRequest.agent_id"));
        } else
          goto handle_unusual;
        continue;
      // .configserver.proto.RunningStatistics running_details = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_running_details(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RunningStatisticsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:configserver.proto.RunningStatisticsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (!this->_internal_request_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_request_id().data(), static_cast<int>(this->_internal_request_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.RunningStatisticsRequest.request_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_request_id(), target);
  }

  // string agent_id = 2;
  if (!this->_internal_agent_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_agent_id().data(), static_cast<int>(this->_internal_agent_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.RunningStatisticsRequest.agent_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_agent_id(), target);
  }

  // .configserver.proto.RunningStatistics running_details = 3;
  if (this->_internal_has_running_details()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::running_details(this),
        _Internal::running_details(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:configserver.proto.RunningStatisticsRequest)
  return target;
}

size_t RunningStatisticsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:configserver.proto.RunningStatisticsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string request_id = 1;
  if (!this->_internal_request_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_request_id());
  }

  // string agent_id = 2;
  if (!this->_internal_agent_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_agent_id());
  }

  // .configserver.proto.RunningStatistics running_details = 3;
  if (this->_internal_has_running_details()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.running_details_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RunningStatisticsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RunningStatisticsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RunningStatisticsRequest::GetClassData() const { return &_class_data_; }


void RunningStatisticsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RunningStatisticsRequest*>(&to_msg);
  auto& from = static_cast<const RunningStatisticsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:configserver.proto.RunningStatisticsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_request_id().empty()) {
    _this->_internal_set_request_id(from._internal_request_id());
  }
  if (!from._internal_agent_id().empty()) {
    _this->_internal_set_agent_id(from._internal_agent_id());
  }
  if (from._internal_has_running_details()) {
    _this->_internal_mutable_running_details()->::configserver::proto::RunningStatistics::MergeFrom(
        from._internal_running_details());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RunningStatisticsRequest::CopyFrom(const RunningStatisticsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:configserver.proto.RunningStatisticsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunningStatisticsRequest::IsInitialized() const {
  return true;
}

void RunningStatisticsRequest::InternalSwap(RunningStatisticsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.request_id_, lhs_arena,
      &other->_impl_.request_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.agent_id_, lhs_arena,
      &other->_impl_.agent_id_, rhs_arena
  );
  swap(_impl_.running_details_, other->_impl_.running_details_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RunningStatisticsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_agent_2eproto_getter, &descriptor_table_agent_2eproto_once,
      file_level_metadata_agent_2eproto[5]);
}

// ===================================================================

class RunningStatisticsResponse::_Internal {
 public:
};

RunningStatisticsResponse::RunningStatisticsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:configserver.proto.RunningStatisticsResponse)
}
RunningStatisticsResponse::RunningStatisticsResponse(const RunningStatisticsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RunningStatisticsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.response_id_){}
    , decltype(_impl_.code_){}
    , decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.response_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.response_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_response_id().empty()) {
    _this->_impl_.response_id_.Set(from._internal_response_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_code().empty()) {
    _this->_impl_.code_.Set(from._internal_code(), 
      _this->GetArenaForAllocation());
  }
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:configserver.proto.RunningStatisticsResponse)
}

inline void RunningStatisticsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.response_id_){}
    , decltype(_impl_.code_){}
    , decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.response_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.response_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RunningStatisticsResponse::~RunningStatisticsResponse() {
  // @@protoc_insertion_point(destructor:configserver.proto.RunningStatisticsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RunningStatisticsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.response_id_.Destroy();
  _impl_.code_.Destroy();
  _impl_.message_.Destroy();
}

void RunningStatisticsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RunningStatisticsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:configserver.proto.RunningStatisticsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.response_id_.ClearToEmpty();
  _impl_.code_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RunningStatisticsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string response_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_response_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.RunningStatisticsResponse.response_id"));
        } else
          goto handle_unusual;
        continue;
      // string code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.RunningStatisticsResponse.code"));
        } else
          goto handle_unusual;
        continue;
      // string message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.RunningStatisticsResponse.message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RunningStatisticsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:configserver.proto.RunningStatisticsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string response_id = 1;
  if (!this->_internal_response_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_response_id().data(), static_cast<int>(this->_internal_response_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.RunningStatisticsResponse.response_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_response_id(), target);
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_code().data(), static_cast<int>(this->_internal_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.RunningStatisticsResponse.code");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_code(), target);
  }

  // string message = 3;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.RunningStatisticsResponse.message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:configserver.proto.RunningStatisticsResponse)
  return target;
}

size_t RunningStatisticsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:configserver.proto.RunningStatisticsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string response_id = 1;
  if (!this->_internal_response_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_response_id());
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_code());
  }

  // string message = 3;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RunningStatisticsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RunningStatisticsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RunningStatisticsResponse::GetClassData() const { return &_class_data_; }


void RunningStatisticsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RunningStatisticsResponse*>(&to_msg);
  auto& from = static_cast<const RunningStatisticsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:configserver.proto.RunningStatisticsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_response_id().empty()) {
    _this->_internal_set_response_id(from._internal_response_id());
  }
  if (!from._internal_code().empty()) {
    _this->_internal_set_code(from._internal_code());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RunningStatisticsResponse::CopyFrom(const RunningStatisticsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:configserver.proto.RunningStatisticsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunningStatisticsResponse::IsInitialized() const {
  return true;
}

void RunningStatisticsResponse::InternalSwap(RunningStatisticsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.response_id_, lhs_arena,
      &other->_impl_.response_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.code_, lhs_arena,
      &other->_impl_.code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RunningStatisticsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_agent_2eproto_getter, &descriptor_table_agent_2eproto_once,
      file_level_metadata_agent_2eproto[6]);
}

// ===================================================================

class AlarmRequest::_Internal {
 public:
};

AlarmRequest::AlarmRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:configserver.proto.AlarmRequest)
}
AlarmRequest::AlarmRequest(const AlarmRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AlarmRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.request_id_){}
    , decltype(_impl_.agent_id_){}
    , decltype(_impl_.type_){}
    , decltype(_impl_.detail_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.request_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.request_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_request_id().empty()) {
    _this->_impl_.request_id_.Set(from._internal_request_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.agent_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.agent_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_agent_id().empty()) {
    _this->_impl_.agent_id_.Set(from._internal_agent_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    _this->_impl_.type_.Set(from._internal_type(), 
      _this->GetArenaForAllocation());
  }
  _impl_.detail_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.detail_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_detail().empty()) {
    _this->_impl_.detail_.Set(from._internal_detail(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:configserver.proto.AlarmRequest)
}

inline void AlarmRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.request_id_){}
    , decltype(_impl_.agent_id_){}
    , decltype(_impl_.type_){}
    , decltype(_impl_.detail_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.request_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.request_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.agent_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.agent_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.detail_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.detail_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AlarmRequest::~AlarmRequest() {
  // @@protoc_insertion_point(destructor:configserver.proto.AlarmRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AlarmRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.request_id_.Destroy();
  _impl_.agent_id_.Destroy();
  _impl_.type_.Destroy();
  _impl_.detail_.Destroy();
}

void AlarmRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AlarmRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:configserver.proto.AlarmRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.request_id_.ClearToEmpty();
  _impl_.agent_id_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  _impl_.detail_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AlarmRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_request_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.AlarmRequest.request_id"));
        } else
          goto handle_unusual;
        continue;
      // string agent_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_agent_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.AlarmRequest.agent_id"));
        } else
          goto handle_unusual;
        continue;
      // string type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.AlarmRequest.type"));
        } else
          goto handle_unusual;
        continue;
      // string detail = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_detail();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.AlarmRequest.detail"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AlarmRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:configserver.proto.AlarmRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (!this->_internal_request_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_request_id().data(), static_cast<int>(this->_internal_request_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.AlarmRequest.request_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_request_id(), target);
  }

  // string agent_id = 2;
  if (!this->_internal_agent_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_agent_id().data(), static_cast<int>(this->_internal_agent_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.AlarmRequest.agent_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_agent_id(), target);
  }

  // string type = 3;
  if (!this->_internal_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.AlarmRequest.type");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_type(), target);
  }

  // string detail = 4;
  if (!this->_internal_detail().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_detail().data(), static_cast<int>(this->_internal_detail().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.AlarmRequest.detail");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_detail(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:configserver.proto.AlarmRequest)
  return target;
}

size_t AlarmRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:configserver.proto.AlarmRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string request_id = 1;
  if (!this->_internal_request_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_request_id());
  }

  // string agent_id = 2;
  if (!this->_internal_agent_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_agent_id());
  }

  // string type = 3;
  if (!this->_internal_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string detail = 4;
  if (!this->_internal_detail().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_detail());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AlarmRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AlarmRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AlarmRequest::GetClassData() const { return &_class_data_; }


void AlarmRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AlarmRequest*>(&to_msg);
  auto& from = static_cast<const AlarmRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:configserver.proto.AlarmRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_request_id().empty()) {
    _this->_internal_set_request_id(from._internal_request_id());
  }
  if (!from._internal_agent_id().empty()) {
    _this->_internal_set_agent_id(from._internal_agent_id());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_detail().empty()) {
    _this->_internal_set_detail(from._internal_detail());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AlarmRequest::CopyFrom(const AlarmRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:configserver.proto.AlarmRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmRequest::IsInitialized() const {
  return true;
}

void AlarmRequest::InternalSwap(AlarmRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.request_id_, lhs_arena,
      &other->_impl_.request_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.agent_id_, lhs_arena,
      &other->_impl_.agent_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_, lhs_arena,
      &other->_impl_.type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.detail_, lhs_arena,
      &other->_impl_.detail_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AlarmRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_agent_2eproto_getter, &descriptor_table_agent_2eproto_once,
      file_level_metadata_agent_2eproto[7]);
}

// ===================================================================

class AlarmResponse::_Internal {
 public:
};

AlarmResponse::AlarmResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:configserver.proto.AlarmResponse)
}
AlarmResponse::AlarmResponse(const AlarmResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AlarmResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.response_id_){}
    , decltype(_impl_.code_){}
    , decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.response_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.response_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_response_id().empty()) {
    _this->_impl_.response_id_.Set(from._internal_response_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_code().empty()) {
    _this->_impl_.code_.Set(from._internal_code(), 
      _this->GetArenaForAllocation());
  }
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:configserver.proto.AlarmResponse)
}

inline void AlarmResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.response_id_){}
    , decltype(_impl_.code_){}
    , decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.response_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.response_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AlarmResponse::~AlarmResponse() {
  // @@protoc_insertion_point(destructor:configserver.proto.AlarmResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AlarmResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.response_id_.Destroy();
  _impl_.code_.Destroy();
  _impl_.message_.Destroy();
}

void AlarmResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AlarmResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:configserver.proto.AlarmResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.response_id_.ClearToEmpty();
  _impl_.code_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AlarmResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string response_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_response_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.AlarmResponse.response_id"));
        } else
          goto handle_unusual;
        continue;
      // string code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.AlarmResponse.code"));
        } else
          goto handle_unusual;
        continue;
      // string message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.AlarmResponse.message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AlarmResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:configserver.proto.AlarmResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string response_id = 1;
  if (!this->_internal_response_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_response_id().data(), static_cast<int>(this->_internal_response_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.AlarmResponse.response_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_response_id(), target);
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_code().data(), static_cast<int>(this->_internal_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.AlarmResponse.code");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_code(), target);
  }

  // string message = 3;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.AlarmResponse.message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:configserver.proto.AlarmResponse)
  return target;
}

size_t AlarmResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:configserver.proto.AlarmResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string response_id = 1;
  if (!this->_internal_response_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_response_id());
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_code());
  }

  // string message = 3;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AlarmResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AlarmResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AlarmResponse::GetClassData() const { return &_class_data_; }


void AlarmResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AlarmResponse*>(&to_msg);
  auto& from = static_cast<const AlarmResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:configserver.proto.AlarmResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_response_id().empty()) {
    _this->_internal_set_response_id(from._internal_response_id());
  }
  if (!from._internal_code().empty()) {
    _this->_internal_set_code(from._internal_code());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AlarmResponse::CopyFrom(const AlarmResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:configserver.proto.AlarmResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmResponse::IsInitialized() const {
  return true;
}

void AlarmResponse::InternalSwap(AlarmResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.response_id_, lhs_arena,
      &other->_impl_.response_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.code_, lhs_arena,
      &other->_impl_.code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AlarmResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_agent_2eproto_getter, &descriptor_table_agent_2eproto_once,
      file_level_metadata_agent_2eproto[8]);
}

// ===================================================================

AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse::AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse() {}
AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse::AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse::MergeFrom(const AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_agent_2eproto_getter, &descriptor_table_agent_2eproto_once,
      file_level_metadata_agent_2eproto[9]);
}

// ===================================================================

AgentGetConfigListRequest_TagsEntry_DoNotUse::AgentGetConfigListRequest_TagsEntry_DoNotUse() {}
AgentGetConfigListRequest_TagsEntry_DoNotUse::AgentGetConfigListRequest_TagsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void AgentGetConfigListRequest_TagsEntry_DoNotUse::MergeFrom(const AgentGetConfigListRequest_TagsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata AgentGetConfigListRequest_TagsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_agent_2eproto_getter, &descriptor_table_agent_2eproto_once,
      file_level_metadata_agent_2eproto[10]);
}

// ===================================================================

class AgentGetConfigListRequest::_Internal {
 public:
};

AgentGetConfigListRequest::AgentGetConfigListRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &AgentGetConfigListRequest::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:configserver.proto.AgentGetConfigListRequest)
}
AgentGetConfigListRequest::AgentGetConfigListRequest(const AgentGetConfigListRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AgentGetConfigListRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.config_versions_)*/{}
    , /*decltype(_impl_.tags_)*/{}
    , decltype(_impl_.request_id_){}
    , decltype(_impl_.agent_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.config_versions_.MergeFrom(from._impl_.config_versions_);
  _this->_impl_.tags_.MergeFrom(from._impl_.tags_);
  _impl_.request_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.request_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_request_id().empty()) {
    _this->_impl_.request_id_.Set(from._internal_request_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.agent_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.agent_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_agent_id().empty()) {
    _this->_impl_.agent_id_.Set(from._internal_agent_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:configserver.proto.AgentGetConfigListRequest)
}

inline void AgentGetConfigListRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.config_versions_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.tags_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.request_id_){}
    , decltype(_impl_.agent_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.request_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.request_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.agent_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.agent_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AgentGetConfigListRequest::~AgentGetConfigListRequest() {
  // @@protoc_insertion_point(destructor:configserver.proto.AgentGetConfigListRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void AgentGetConfigListRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.config_versions_.Destruct();
  _impl_.config_versions_.~MapField();
  _impl_.tags_.Destruct();
  _impl_.tags_.~MapField();
  _impl_.request_id_.Destroy();
  _impl_.agent_id_.Destroy();
}

void AgentGetConfigListRequest::ArenaDtor(void* object) {
  AgentGetConfigListRequest* _this = reinterpret_cast< AgentGetConfigListRequest* >(object);
  _this->_impl_.config_versions_.Destruct();
  _this->_impl_.tags_.Destruct();
}
void AgentGetConfigListRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AgentGetConfigListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:configserver.proto.AgentGetConfigListRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.config_versions_.Clear();
  _impl_.tags_.Clear();
  _impl_.request_id_.ClearToEmpty();
  _impl_.agent_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentGetConfigListRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_request_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.AgentGetConfigListRequest.request_id"));
        } else
          goto handle_unusual;
        continue;
      // string agent_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_agent_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.AgentGetConfigListRequest.agent_id"));
        } else
          goto handle_unusual;
        continue;
      // map<string, int64> config_versions = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.config_versions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, string> tags = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.tags_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AgentGetConfigListRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:configserver.proto.AgentGetConfigListRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (!this->_internal_request_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_request_id().data(), static_cast<int>(this->_internal_request_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.AgentGetConfigListRequest.request_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_request_id(), target);
  }

  // string agent_id = 2;
  if (!this->_internal_agent_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_agent_id().data(), static_cast<int>(this->_internal_agent_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.AgentGetConfigListRequest.agent_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_agent_id(), target);
  }

  // map<string, int64> config_versions = 3;
  if (!this->_internal_config_versions().empty()) {
    using MapType = ::_pb::Map<std::string, int64_t>;
    using WireHelper = AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_config_versions();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "configserver.proto.AgentGetConfigListRequest.ConfigVersionsEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, string> tags = 4;
  if (!this->_internal_tags().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = AgentGetConfigListRequest_TagsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_tags();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "configserver.proto.AgentGetConfigListRequest.TagsEntry.key");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.second.data(), static_cast<int>(entry.second.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "configserver.proto.AgentGetConfigListRequest.TagsEntry.value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:configserver.proto.AgentGetConfigListRequest)
  return target;
}

size_t AgentGetConfigListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:configserver.proto.AgentGetConfigListRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, int64> config_versions = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_config_versions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, int64_t >::const_iterator
      it = this->_internal_config_versions().begin();
      it != this->_internal_config_versions().end(); ++it) {
    total_size += AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, string> tags = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_tags_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_tags().begin();
      it != this->_internal_tags().end(); ++it) {
    total_size += AgentGetConfigListRequest_TagsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string request_id = 1;
  if (!this->_internal_request_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_request_id());
  }

  // string agent_id = 2;
  if (!this->_internal_agent_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_agent_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentGetConfigListRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AgentGetConfigListRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentGetConfigListRequest::GetClassData() const { return &_class_data_; }


void AgentGetConfigListRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AgentGetConfigListRequest*>(&to_msg);
  auto& from = static_cast<const AgentGetConfigListRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:configserver.proto.AgentGetConfigListRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.config_versions_.MergeFrom(from._impl_.config_versions_);
  _this->_impl_.tags_.MergeFrom(from._impl_.tags_);
  if (!from._internal_request_id().empty()) {
    _this->_internal_set_request_id(from._internal_request_id());
  }
  if (!from._internal_agent_id().empty()) {
    _this->_internal_set_agent_id(from._internal_agent_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentGetConfigListRequest::CopyFrom(const AgentGetConfigListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:configserver.proto.AgentGetConfigListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentGetConfigListRequest::IsInitialized() const {
  return true;
}

void AgentGetConfigListRequest::InternalSwap(AgentGetConfigListRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.config_versions_.InternalSwap(&other->_impl_.config_versions_);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.request_id_, lhs_arena,
      &other->_impl_.request_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.agent_id_, lhs_arena,
      &other->_impl_.agent_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentGetConfigListRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_agent_2eproto_getter, &descriptor_table_agent_2eproto_once,
      file_level_metadata_agent_2eproto[11]);
}

// ===================================================================

class ConfigUpdateInfo::_Internal {
 public:
};

ConfigUpdateInfo::ConfigUpdateInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:configserver.proto.ConfigUpdateInfo)
}
ConfigUpdateInfo::ConfigUpdateInfo(const ConfigUpdateInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ConfigUpdateInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.config_name_){}
    , decltype(_impl_.content_){}
    , decltype(_impl_.config_version_){}
    , decltype(_impl_.update_status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.config_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.config_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_config_name().empty()) {
    _this->_impl_.config_name_.Set(from._internal_config_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    _this->_impl_.content_.Set(from._internal_content(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.config_version_, &from._impl_.config_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.update_status_) -
    reinterpret_cast<char*>(&_impl_.config_version_)) + sizeof(_impl_.update_status_));
  // @@protoc_insertion_point(copy_constructor:configserver.proto.ConfigUpdateInfo)
}

inline void ConfigUpdateInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.config_name_){}
    , decltype(_impl_.content_){}
    , decltype(_impl_.config_version_){int64_t{0}}
    , decltype(_impl_.update_status_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.config_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.config_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ConfigUpdateInfo::~ConfigUpdateInfo() {
  // @@protoc_insertion_point(destructor:configserver.proto.ConfigUpdateInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ConfigUpdateInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.config_name_.Destroy();
  _impl_.content_.Destroy();
}

void ConfigUpdateInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ConfigUpdateInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:configserver.proto.ConfigUpdateInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.config_name_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  ::memset(&_impl_.config_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.update_status_) -
      reinterpret_cast<char*>(&_impl_.config_version_)) + sizeof(_impl_.update_status_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConfigUpdateInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string config_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_config_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.ConfigUpdateInfo.config_name"));
        } else
          goto handle_unusual;
        continue;
      // .configserver.proto.ConfigUpdateInfo.UpdateStatus update_status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_update_status(static_cast<::configserver::proto::ConfigUpdateInfo_UpdateStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // int64 config_version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.config_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string content = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.ConfigUpdateInfo.content"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConfigUpdateInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:configserver.proto.ConfigUpdateInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string config_name = 1;
  if (!this->_internal_config_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_config_name().data(), static_cast<int>(this->_internal_config_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.ConfigUpdateInfo.config_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_config_name(), target);
  }

  // .configserver.proto.ConfigUpdateInfo.UpdateStatus update_status = 2;
  if (this->_internal_update_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_update_status(), target);
  }

  // int64 config_version = 3;
  if (this->_internal_config_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_config_version(), target);
  }

  // string content = 4;
  if (!this->_internal_content().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.ConfigUpdateInfo.content");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_content(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:configserver.proto.ConfigUpdateInfo)
  return target;
}

size_t ConfigUpdateInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:configserver.proto.ConfigUpdateInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string config_name = 1;
  if (!this->_internal_config_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_config_name());
  }

  // string content = 4;
  if (!this->_internal_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  // int64 config_version = 3;
  if (this->_internal_config_version() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_config_version());
  }

  // .configserver.proto.ConfigUpdateInfo.UpdateStatus update_status = 2;
  if (this->_internal_update_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_update_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConfigUpdateInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ConfigUpdateInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConfigUpdateInfo::GetClassData() const { return &_class_data_; }


void ConfigUpdateInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ConfigUpdateInfo*>(&to_msg);
  auto& from = static_cast<const ConfigUpdateInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:configserver.proto.ConfigUpdateInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_config_name().empty()) {
    _this->_internal_set_config_name(from._internal_config_name());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (from._internal_config_version() != 0) {
    _this->_internal_set_config_version(from._internal_config_version());
  }
  if (from._internal_update_status() != 0) {
    _this->_internal_set_update_status(from._internal_update_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConfigUpdateInfo::CopyFrom(const ConfigUpdateInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:configserver.proto.ConfigUpdateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigUpdateInfo::IsInitialized() const {
  return true;
}

void ConfigUpdateInfo::InternalSwap(ConfigUpdateInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.config_name_, lhs_arena,
      &other->_impl_.config_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.content_, lhs_arena,
      &other->_impl_.content_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConfigUpdateInfo, _impl_.update_status_)
      + sizeof(ConfigUpdateInfo::_impl_.update_status_)
      - PROTOBUF_FIELD_OFFSET(ConfigUpdateInfo, _impl_.config_version_)>(
          reinterpret_cast<char*>(&_impl_.config_version_),
          reinterpret_cast<char*>(&other->_impl_.config_version_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigUpdateInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_agent_2eproto_getter, &descriptor_table_agent_2eproto_once,
      file_level_metadata_agent_2eproto[12]);
}

// ===================================================================

class AgentGetConfigListResponse::_Internal {
 public:
};

AgentGetConfigListResponse::AgentGetConfigListResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:configserver.proto.AgentGetConfigListResponse)
}
AgentGetConfigListResponse::AgentGetConfigListResponse(const AgentGetConfigListResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AgentGetConfigListResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.config_update_infos_){from._impl_.config_update_infos_}
    , decltype(_impl_.response_id_){}
    , decltype(_impl_.code_){}
    , decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.response_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.response_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_response_id().empty()) {
    _this->_impl_.response_id_.Set(from._internal_response_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_code().empty()) {
    _this->_impl_.code_.Set(from._internal_code(), 
      _this->GetArenaForAllocation());
  }
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:configserver.proto.AgentGetConfigListResponse)
}

inline void AgentGetConfigListResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.config_update_infos_){arena}
    , decltype(_impl_.response_id_){}
    , decltype(_impl_.code_){}
    , decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.response_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.response_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AgentGetConfigListResponse::~AgentGetConfigListResponse() {
  // @@protoc_insertion_point(destructor:configserver.proto.AgentGetConfigListResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AgentGetConfigListResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.config_update_infos_.~RepeatedPtrField();
  _impl_.response_id_.Destroy();
  _impl_.code_.Destroy();
  _impl_.message_.Destroy();
}

void AgentGetConfigListResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AgentGetConfigListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:configserver.proto.AgentGetConfigListResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.config_update_infos_.Clear();
  _impl_.response_id_.ClearToEmpty();
  _impl_.code_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentGetConfigListResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string response_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_response_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.AgentGetConfigListResponse.response_id"));
        } else
          goto handle_unusual;
        continue;
      // string code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.AgentGetConfigListResponse.code"));
        } else
          goto handle_unusual;
        continue;
      // string message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "configserver.proto.AgentGetConfigListResponse.message"));
        } else
          goto handle_unusual;
        continue;
      // repeated .configserver.proto.ConfigUpdateInfo config_update_infos = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_config_update_infos(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AgentGetConfigListResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:configserver.proto.AgentGetConfigListResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string response_id = 1;
  if (!this->_internal_response_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_response_id().data(), static_cast<int>(this->_internal_response_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.AgentGetConfigListResponse.response_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_response_id(), target);
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_code().data(), static_cast<int>(this->_internal_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.AgentGetConfigListResponse.code");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_code(), target);
  }

  // string message = 3;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "configserver.proto.AgentGetConfigListResponse.message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_message(), target);
  }

  // repeated .configserver.proto.ConfigUpdateInfo config_update_infos = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_config_update_infos_size()); i < n; i++) {
    const auto& repfield = this->_internal_config_update_infos(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:configserver.proto.AgentGetConfigListResponse)
  return target;
}

size_t AgentGetConfigListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:configserver.proto.AgentGetConfigListResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .configserver.proto.ConfigUpdateInfo config_update_infos = 4;
  total_size += 1UL * this->_internal_config_update_infos_size();
  for (const auto& msg : this->_impl_.config_update_infos_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string response_id = 1;
  if (!this->_internal_response_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_response_id());
  }

  // string code = 2;
  if (!this->_internal_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_code());
  }

  // string message = 3;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentGetConfigListResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AgentGetConfigListResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentGetConfigListResponse::GetClassData() const { return &_class_data_; }


void AgentGetConfigListResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AgentGetConfigListResponse*>(&to_msg);
  auto& from = static_cast<const AgentGetConfigListResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:configserver.proto.AgentGetConfigListResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.config_update_infos_.MergeFrom(from._impl_.config_update_infos_);
  if (!from._internal_response_id().empty()) {
    _this->_internal_set_response_id(from._internal_response_id());
  }
  if (!from._internal_code().empty()) {
    _this->_internal_set_code(from._internal_code());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentGetConfigListResponse::CopyFrom(const AgentGetConfigListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:configserver.proto.AgentGetConfigListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentGetConfigListResponse::IsInitialized() const {
  return true;
}

void AgentGetConfigListResponse::InternalSwap(AgentGetConfigListResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.config_update_infos_.InternalSwap(&other->_impl_.config_update_infos_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.response_id_, lhs_arena,
      &other->_impl_.response_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.code_, lhs_arena,
      &other->_impl_.code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentGetConfigListResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_agent_2eproto_getter, &descriptor_table_agent_2eproto_once,
      file_level_metadata_agent_2eproto[13]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace configserver
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::configserver::proto::HeartBeatRequest_TagsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::configserver::proto::HeartBeatRequest_TagsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::configserver::proto::HeartBeatRequest_TagsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::configserver::proto::HeartBeatRequest*
Arena::CreateMaybeMessage< ::configserver::proto::HeartBeatRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::configserver::proto::HeartBeatRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::configserver::proto::HeartBeatResponse*
Arena::CreateMaybeMessage< ::configserver::proto::HeartBeatResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::configserver::proto::HeartBeatResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::configserver::proto::RunningStatistics_ExtrasEntry_DoNotUse*
Arena::CreateMaybeMessage< ::configserver::proto::RunningStatistics_ExtrasEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::configserver::proto::RunningStatistics_ExtrasEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::configserver::proto::RunningStatistics*
Arena::CreateMaybeMessage< ::configserver::proto::RunningStatistics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::configserver::proto::RunningStatistics >(arena);
}
template<> PROTOBUF_NOINLINE ::configserver::proto::RunningStatisticsRequest*
Arena::CreateMaybeMessage< ::configserver::proto::RunningStatisticsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::configserver::proto::RunningStatisticsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::configserver::proto::RunningStatisticsResponse*
Arena::CreateMaybeMessage< ::configserver::proto::RunningStatisticsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::configserver::proto::RunningStatisticsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::configserver::proto::AlarmRequest*
Arena::CreateMaybeMessage< ::configserver::proto::AlarmRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::configserver::proto::AlarmRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::configserver::proto::AlarmResponse*
Arena::CreateMaybeMessage< ::configserver::proto::AlarmResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::configserver::proto::AlarmResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::configserver::proto::AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::configserver::proto::AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::configserver::proto::AgentGetConfigListRequest_ConfigVersionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::configserver::proto::AgentGetConfigListRequest_TagsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::configserver::proto::AgentGetConfigListRequest_TagsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::configserver::proto::AgentGetConfigListRequest_TagsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::configserver::proto::AgentGetConfigListRequest*
Arena::CreateMaybeMessage< ::configserver::proto::AgentGetConfigListRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::configserver::proto::AgentGetConfigListRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::configserver::proto::ConfigUpdateInfo*
Arena::CreateMaybeMessage< ::configserver::proto::ConfigUpdateInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::configserver::proto::ConfigUpdateInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::configserver::proto::AgentGetConfigListResponse*
Arena::CreateMaybeMessage< ::configserver::proto::AgentGetConfigListResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::configserver::proto::AgentGetConfigListResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

#-----启动时保护-------
#周期为24个小时
#agent.status.interval=86400
#24小时内资源超过4次，则agent将不会被拉起
#agent.status.resource.count=4
#24小时coredump超过2次，则agent不会被拉起
#agent.status.coredump.count=2

#-----对自己资源监控-------
#agent.resource.interval=15
#内存限制,单位为MB
#agent.resource.memory.limit=200
#打开文件数目限制
#agent.resource.fd.limit=1000
#cpu限制到单核10%
#agent.resource.cpu.limit=0.1
#连续超过资源的次数，超过4次则agent会自杀
#agent.resource.exceed.limit=4
#系统进程数超过该数值时，进程监控停止，以免产生性能问题
#agent.process.collect.count.limit=5000

#----cpu usage optimization---
agent.module.schedule.interval=500000
agent.poll.timeout=500000

#-----cloudmonitor------
#代理的选择，是否自动；
#如果为true, 则下面配置的代理将会被加入代理的『遍历列表』，并被优先(socks优先)探活。
#如果为false, 则使用下面的代理。如果两者都配了，则使用socks代理。强烈建议不要两者同时配置，以免产生agent行为上的不预期。
#http.proxy.auto=true
#手动配置代理
#取值: http, https, https/2，缺省为http
#http.proxy.scheme=
#http.proxy.host=
#http.proxy.port=
#http.proxy.user=
#http.proxy.password=
#socks4或socks5代理，由于历史原因key被设计为socks5.proxy.xxx，实际上此处也可以是socks4
#如果是unix domain sockets，则在socks5.proxy.host配置为: localhost/{sock path}，同时将port置为空
#取值：socks4, socks4a, socks5, socks5h，缺省为socks5h
#socks5.proxy.scheme=
#socks5.proxy.host=
#socks5.proxy.port=

#心跳服务器配置
#cms.agent.hosts=https://cms-cloudmonitor.aliyun.com
#AK配置
#cms.agent.accesskey=xxxxx
#cms.agent.secretkey=xxxxx
#serialNumber手动指定
#cms.agent.ecs.serialNumber=serialNumber
#程序默认的配置信息存储目录(仅linux有用)
#APPDATA=/etc/
#获取instanceId的uri
#cms.instanceId.uri=/agent/latest/meta-data/region-id/%s
#主动探测线程数的配置
#cms.detect.thread=5
#cms.detect.max.thread=20
#TCP状态采集配置，默认关闭
#cms.tcp.full=false
#mountpoint.exclude
# for nvidia-smi
#cms.agent.nvidia.path=
# for nvml dll library
#nvidia.nvml.enabled=
#nvidia.nvml.path=
#cms.process.topN=5
#cms.rdma.interval=15
#cms.qos.interval=60
#cms.rdma.path=/dev/shm/rdma.log
#cms.rping.path=/dev/shm/rping.log
#cms.qos.cmd=/usr/local/bin/rdma_qos_check
#cms.metrichub_url=metricHubConfig
#采集模块控制
#cms.module.tcpExt=false
#默认日志采集先关掉，待公有云需要时再打开。
agent.enable.logger.collect=1
cms.module.tcp=true